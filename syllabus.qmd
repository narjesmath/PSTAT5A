---
title: "Syllabus"
subtitle: "Summer 2025 Course Syllabus"
format:
  html:
    toc: false
    toc-location: left
    theme: default
    css: [/theme/syllabus-styles.css, /theme/syllabus-tabs.css]
    page-layout: full
    grid:
      sidebar-width: 300px
      body-width: 900px
      margin-width: 200px
execute:
  echo: false
  warning: false
---

::: {.download-section}
[Download the full syllabus as a PDF](/files/syllabus/PSTAT5A__Syllabus.pdf){.download-btn}
:::

::: {.syllabus-container}

<!-- Tab Navigation -->
::: {.tab-navigation}
<button class="tab-button active" data-tab="overview">üìö Overview</button>
<button class="tab-button" data-tab="logistics">üë• Logistics</button>
<button class="tab-button" data-tab="grading">üìä Assessment</button>
<button class="tab-button" data-tab="policies">üõ°Ô∏è Policies</button>
<button class="tab-button" data-tab="resources">ü§ù Resources</button>
<button class="tab-button" data-tab="dates">üìÖ Important Dates</button>
:::

<!-- Overview Tab -->
::: {.tab-content .active data-tab="overview"}

::: {.content-filters}
<button class="filter-button active" data-filter="all">All Info</button>
<button class="filter-button" data-filter="course-info">Course Info</button>
<button class="filter-button" data-filter="description">Description</button>
<button class="filter-button" data-filter="materials">Materials</button>
:::

::: {.section-card .course-info-content}
::: {.section-header}
::: {.section-icon}
üìö
:::
::: {.section-title}
Course Information
:::
:::

::: {.info-grid}
::: {.info-item}
::: {.info-label}
Lecture Time
:::
::: {.info-value}
M/W/T/R 8:00 AM‚Äì9:30 AM
:::
:::

::: {.info-item}
::: {.info-label}
Lecture Hall
:::
::: {.info-value}
HSSB 1173
:::
:::

::: {.info-item}
::: {.info-label}
Sections
:::
::: {.info-value}
As scheduled on GOLD (see Canvas for Zoom links)
:::
:::

::: {.info-item}
::: {.info-label}
Email
:::
::: {.info-value}
nmathlouthi@ucsb.edu
:::
:::

::: {.info-item}
::: {.info-label}
Office
:::
::: {.info-value}
Ellison Hall 5829
:::
:::

::: {.info-item}
::: {.info-label}
Office Hours
:::
::: {.info-value}
Thursdays 11:00 AM‚Äì12:00 PM (via Zoom or by appointment)
:::
:::
:::

::: {.notice-box .notice-info}
::: {.notice-content}
**Note:** Zoom links are posted on the Canvas page for the class.
:::
:::
:::

::: {.section-card .description-content}
::: {.section-header}
::: {.section-icon}
üéØ
:::
::: {.section-title}
Course Description
:::
:::

This introductory course covers the foundations of statistical thinking, including data description, probability, and inference. Students will learn how to summarize data, compute basic probabilities, and make informed decisions using statistical tools.

### Student Learning Objectives

By the end of this course, you will be able to:

- **Summarize data** using descriptive statistics
- **Understand** fundamental probability rules and distributions
- **Conduct** basic inferential procedures (confidence intervals, hypothesis tests)
- **Interpret** results and communicate findings
:::

::: {.section-card .materials-content}
::: {.section-header}
::: {.section-icon}
üìñ
:::
::: {.section-title}
Course Materials
:::
:::

::: {.info-grid}
::: {.info-item}
::: {.info-label}
Canvas
:::
::: {.info-value}
Announcements, Zoom links, and grades ([canvas.ucsb.edu](https://canvas.ucsb.edu))
:::
:::

::: {.info-item}
::: {.info-label}
Calculator
:::
::: {.info-value}
Scientific calculator for in-class and quiz work
:::
:::

::: {.info-item}
::: {.info-label}
Computer
:::
::: {.info-value}
Use our [JupyterHub instance](https://pstat5a.lsit.ucsb.edu/hub/login)
:::
:::

::: {.info-item}
::: {.info-label}
Recommended Texts
:::
::: {.info-value}
*OpenIntro Statistics* (free online)  
*Think Stats* by Allen Downey (free online)
:::
:::
:::
:::

::: {.section-card .materials-content}
::: {.section-header}
::: {.section-icon}
üìÖ
:::
::: {.section-title}
Class Schedule
:::
:::

::: {.notice-box .notice-info}
::: {.notice-content}
**Note:** For the most up-to-date details, please visit the **Class Schedule** tab on our website: [Class Schedule](schedule.qmd)
:::
:::
:::

:::

<!-- Logistics Tab -->
::: {.tab-content data-tab="logistics"}

::: {.content-filters}
<button class="filter-button active" data-filter="all">All Staff</button>
<button class="filter-button" data-filter="instructor">Instructor</button>
<button class="filter-button" data-filter="tas">Teaching Assistants</button>
<button class="filter-button" data-filter="success-tips">Success Tips</button>
:::

::: {.section-card .instructor-content}
::: {.section-header}
::: {.section-icon}
üë©‚Äçüè´
:::
::: {.section-title}
Instructor Information
:::
:::

::: {.contact-grid}
::: {.contact-card}
::: {.contact-avatar}
NM
:::
::: {.contact-name}
Narjes Mathlouthi
:::
::: {.contact-email}
nmathlouthi@ucsb.edu
:::
::: {.contact-office}
Office: Ellison Hall 5829
:::
::: {.contact-hours}
Office Hours: Thursdays 11:00 AM‚Äì12:00 PM
:::
:::
:::
:::

::: {.section-card .tas-content}
::: {.section-header}
::: {.section-icon}
üë•
:::
::: {.section-title}
Teaching Assistants
:::
:::

::: {.contact-grid}
::: {.contact-card}
::: {.contact-avatar}
SL
:::
::: {.contact-name}
Summer Le
:::
::: {.contact-email}
sle@ucsb.edu
:::
:::

::: {.contact-card}
::: {.contact-avatar}
MH
:::
::: {.contact-name}
Mingzhu He
:::
::: {.contact-email}
mingzhuhe@ucsb.edu
:::
:::
:::

::: {.notice-box .notice-important}
::: {.notice-content}
**Email policy:** Include `[PSTAT 5A]` in your subject. Allow 24‚Äì48 hours for a reply (avoid weekends).
:::
:::
:::

::: {.section-card .success-tips-content}
::: {.section-header}
::: {.section-icon}
üéØ
:::
::: {.section-title}
How to Succeed
:::
:::

- **Attend** lectures & sections
- **Engage actively** & ask questions
- **Use office hours** for help

### Classroom Expectations

Respect peers & TAs. Stay engaged. Seek support if needed.

### Communication Guidelines

- Use UCSB email with clear subject
- Allow 24‚Äì48 h for replies
- Use office hours or appointments
:::

:::

<!-- Assessment Tab -->
::: {.tab-content data-tab="grading"}

::: {.content-filters}
<button class="filter-button active" data-filter="all">All Assessment Info</button>
<button class="filter-button" data-filter="grading">Grade Breakdown</button>
<button class="filter-button" data-filter="quizzes">Quiz Details</button>
:::

::: {.section-card .grading-content}
::: {.section-header}
::: {.section-icon}
üìä
:::
::: {.section-title}
Grading
:::
:::

::: {.info-item}
::: {.info-label}
**Grade Breakdown:**
:::
::: {.info-value}
- Lecture attendance: **5%**
  
- Section attendance: **5%**
  
- Quiz 1: **30%**
  
- Quiz 2: **30%**
  
- Quiz 3: **30%**
:::
:::

**Grading Scale:**

::: {.grading-container}
| **A Grades** | **B Grades** | **C Grades** | **D/F Grades** |
|:------------:|:------------:|:------------:|:--------------:|
| A+: 97‚Äì100   | B+: 87‚Äì89    | C+: 77‚Äì79    | D+: 67‚Äì69      |
| A: 93‚Äì96     | B: 83‚Äì86     | C: 73‚Äì76     | D: 60‚Äì66       |
| A‚Äì: 90‚Äì92    | B‚Äì: 80‚Äì82    | C‚Äì: 70‚Äì72    | F: < 60        |
:::

::: {.notice-box .notice-success}
::: {.notice-content}
Grades round to the nearest whole number (e.g., 89.7 ‚Üí 90).
:::
:::
:::

::: {.section-card .quizzes-content}
::: {.section-header}
::: {.section-icon}
üìù
:::
::: {.section-title}
Quizzes
:::
:::

::: {.quiz-timeline}
::: {.quiz-item}
::: {.quiz-number}
1
:::
::: {.quiz-content}
::: {.quiz-title}
Quiz 1: Weeks 1‚Äì2
:::
::: {.quiz-date}
July 11th
:::
::: {.quiz-details}
Covers introduction, descriptive statistics and Intro to Probability
:::
:::
:::

::: {.quiz-item}
::: {.quiz-number}
2
:::
::: {.quiz-content}
::: {.quiz-title}
Quiz 2: Weeks 3‚Äì4
:::
::: {.quiz-date}
July 25th
:::
::: {.quiz-details}
Covers Conditional Probability, Counting & Random Variables (Discrete & Continuous)
:::
:::
:::

::: {.quiz-item}
::: {.quiz-number}
3
:::
::: {.quiz-content}
::: {.quiz-title}
Quiz 3: Weeks 5‚Äì6
:::
::: {.quiz-date}
July 31st
:::
::: {.quiz-details}
Covers Confidence Intervals & Hypothesis testing
:::
:::
:::
:::

::: {.info-item}
::: {.info-value}
**Format:** Multiple choice & short answer (open book)  
**Platform:** Canvas or Gradescope  
**Availability:** Fridays 7 AM‚Äì12 AM (1‚Äëhour limit)  
**Make‚Äëup policy:** Notify within 48 h; documentation required.
:::
:::
:::

:::

<!-- Policies Tab -->
::: {.tab-content data-tab="policies"}

::: {.content-filters}
<button class="filter-button active" data-filter="all">All Policies</button>
<button class="filter-button" data-filter="academic">Academic Integrity</button>
<button class="filter-button" data-filter="attendance">Attendance</button>
:::

::: {.section-card .academic-content}
::: {.section-header}
::: {.section-icon}
üõ°Ô∏è
:::
::: {.section-title}
Academic Integrity
:::
:::

Do your own work. Cite sources properly. See:

- [Academic Integrity Policy](https://studentconduct.sa.ucsb.edu/academic-integrity)
  
- [Student Conduct Code](https://www.sa.ucsb.edu/regulations/student-conduct-code/student-conduct-code)

::: {.notice-box .notice-important}
::: {.notice-content}
**Important:** Violations of academic integrity will result in course failure and reporting to the Office of Student Conduct.
:::
:::
:::

::: {.section-card .attendance-content}
::: {.section-header}
::: {.section-icon}
üìã
:::
::: {.section-title}
Attendance Policy
:::
:::

::: {.info-grid}
::: {.info-item}
::: {.info-label}
Lecture Attendance
:::
::: {.info-value}
Worth 5% of final grade. Regular attendance expected for success.
:::
:::

::: {.info-item}
::: {.info-label}
Section Attendance
:::
::: {.info-value}
Worth 5% of final grade. Participation in discussion sections is required.
:::
:::

::: {.info-item}
::: {.info-label}
Make-up Policy
:::
::: {.info-value}
Contact instructor within 48 hours for excused absences with documentation.
:::
:::
:::
:::

:::

<!-- Resources Tab -->
::: {.tab-content data-tab="resources"}

::: {.content-filters}
<button class="filter-button active" data-filter="all">All Resources</button>
<button class="filter-button" data-filter="academic">Academic Support</button>
<button class="filter-button" data-filter="wellness">Health & Wellness</button>
<button class="filter-button" data-filter="basic-needs">Basic Needs</button>
:::

::: {.section-card}
::: {.section-header}
::: {.section-icon}
ü§ù
:::
::: {.section-title}
Student Resources
:::
:::

::: {.resource-grid}
::: {.resource-link .academic-content}
[ü¶Ω]{.resource-icon}
[DSP & Accommodations]{.resource-name}
[Disability services and accommodations]{.resource-desc}
:::

::: {.resource-link .academic-content}
[üìö]{.resource-icon}
[CLAS]{.resource-name}
[Campus Learning Assistance Services]{.resource-desc}
:::

::: {.resource-link .academic-content}
[üéì]{.resource-icon}
[EOP]{.resource-name}
[Educational Opportunity Program]{.resource-desc}
:::

::: {.resource-link .academic-content}
[üîÑ]{.resource-icon}
[Transfer Center]{.resource-name}
[Transfer student support]{.resource-desc}
:::

::: {.resource-link .wellness-content}
[üè•]{.resource-icon}
[Student Health]{.resource-name}
[Health and wellness services]{.resource-desc}
:::

::: {.resource-link .wellness-content}
[üíö]{.resource-icon}
[CAPS]{.resource-name}
[Counseling & Psychological Services]{.resource-desc}
:::

::: {.resource-link .basic-needs-content}
[üçé]{.resource-icon}
[Basic Needs]{.resource-name}
[Food security and basic needs support]{.resource-desc}
:::

::: {.resource-link .basic-needs-content}
[üë•]{.resource-icon}
[ONDAS]{.resource-name}
[First-Generation Support]{.resource-desc}
:::

::: {.resource-link .basic-needs-content}
[üìã]{.resource-icon}
[Undocumented Services]{.resource-name}
[Support for undocumented students]{.resource-desc}
:::
:::
:::

:::

<!-- Important Dates Tab -->
::: {.tab-content data-tab="dates"}

::: {.content-filters}
<button class="filter-button active" data-filter="all">All Dates</button>
<button class="filter-button" data-filter="registration">Registration</button>
<button class="filter-button" data-filter="deadlines">Deadlines</button>
:::

::: {.section-card}
::: {.section-header}
::: {.section-icon}
üìÖ
:::
::: {.section-title}
Important Dates
:::
:::

::: {.dates-grid}
::: {.date-item .registration-content}
::: {.date-label}
Add w/o Code
:::
::: {.date-value}
June 29
:::
:::

::: {.date-item .registration-content}
::: {.date-label}
Drop w/ Refund
:::
::: {.date-value}
June 29
:::
:::

::: {.date-item .registration-content}
::: {.date-label}
Add w/ Code
:::
::: {.date-value}
July 3
:::
:::

::: {.date-item .deadlines-content}
::: {.date-label}
Drop Course
:::
::: {.date-value}
July 9
:::
:::

::: {.date-item .deadlines-content}
::: {.date-label}
Change Grade Option
:::
::: {.date-value}
August 1
:::
:::
:::

::: {.notice-box .notice-info}
::: {.notice-content}
**Note:** All dates are based on the UCSB Academic Calendar. Please verify important dates on your GOLD account.
:::
:::
:::

:::

:::

```{=html}
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Tab switching functionality
    const tabButtons = document.querySelectorAll('.tab-button');
    const tabContents = document.querySelectorAll('.tab-content');
    
    // Initialize - show only first tab
    showTab('overview');
    
    // Tab button click handlers
    tabButtons.forEach(button => {
        button.addEventListener('click', function() {
            const tabName = this.dataset.tab;
            showTab(tabName);
            
            // Update active tab button
            tabButtons.forEach(btn => btn.classList.remove('active'));
            this.classList.add('active');
        });
    });
    
    // Filter functionality
    document.addEventListener('click', function(e) {
        if (e.target.classList.contains('filter-button')) {
            const filter = e.target.dataset.filter;
            const tabContent = e.target.closest('.tab-content');
            const tabName = tabContent.dataset.tab;
            
            // Update active filter button within this tab
            const tabFilters = tabContent.querySelectorAll('.filter-button');
            tabFilters.forEach(btn => btn.classList.remove('active'));
            e.target.classList.add('active');
            
            // Apply filter to current tab
            filterContent(filter, tabName);
        }
    });
    
    function showTab(tabName) {
        // Hide all tabs
        tabContents.forEach(content => {
            content.classList.remove('active');
        });
        
        // Show selected tab
        const selectedTab = document.querySelector(`[data-tab="${tabName}"].tab-content`);
        if (selectedTab) {
            selectedTab.classList.add('active');
            
            // Reset filters for this tab
            const tabFilters = selectedTab.querySelectorAll('.filter-button');
            tabFilters.forEach(btn => btn.classList.remove('active'));
            const allFilter = selectedTab.querySelector('.filter-button[data-filter="all"]');
            if (allFilter) {
                allFilter.classList.add('active');
            }
            
            // Show all content by default
            filterContent('all', tabName);
        }
    }
    
    function filterContent(filter, tabName) {
        const tabContent = document.querySelector(`[data-tab="${tabName}"].tab-content`);
        if (!tabContent) return;
        
        const sectionCards = tabContent.querySelectorAll('.section-card');
        const resourceItems = tabContent.querySelectorAll('.resource-link');
        const dateItems = tabContent.querySelectorAll('.date-item');
        
        // Handle section cards
        sectionCards.forEach(card => {
            if (filter === 'all') {
                card.style.display = 'block';
            } else {
                const hasFilterContent = card.classList.contains(`${filter}-content`);
                card.style.display = hasFilterContent ? 'block' : 'none';
            }
        });
        
        // Handle resource items
        resourceItems.forEach(item => {
            if (filter === 'all') {
                item.style.display = 'block';
            } else {
                const hasFilterContent = item.classList.contains(`${filter}-content`);
                item.style.display = hasFilterContent ? 'block' : 'none';
            }
        });
        
        // Handle date items
        dateItems.forEach(item => {
            if (filter === 'all') {
                item.style.display = 'block';
            } else {
                const hasFilterContent = item.classList.contains(`${filter}-content`);
                item.style.display = hasFilterContent ? 'block' : 'none';
            }
        });
    }
    
    // Add smooth animations on scroll for visible content
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
            }
        });
    }, observerOptions);

    // Observe all section cards
    document.querySelectorAll('.section-card').forEach(card => {
        card.style.opacity = '0';
        card.style.transform = 'translateY(30px)';
        card.style.transition = 'all 0.6s ease';
        observer.observe(card);
    });

    // Add click-to-copy functionality for email addresses
    document.querySelectorAll('.contact-email').forEach(email => {
        email.style.cursor = 'pointer';
        email.addEventListener('click', function() {
            navigator.clipboard.writeText(this.textContent);
            const originalText = this.textContent;
            this.textContent = 'Copied!';
            setTimeout(() => {
                this.textContent = originalText;
            }, 1000);
        });
    });
    
    // Add smooth hover effects
    const sectionCards = document.querySelectorAll('.section-card');
    sectionCards.forEach(card => {
        card.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-5px)';
        });
        
        card.addEventListener('mouseleave', function() {
            this.style.transform = 'translateY(0)';
        });
    });
});
</script>
```