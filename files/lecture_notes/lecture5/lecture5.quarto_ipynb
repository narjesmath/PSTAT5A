{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"PSTAT 5A: Introduction to Probability\"\n",
        "subtitle: \"Lecture 5 - Conditional Probability & Independence\"\n",
        "author: \"Narjes Mathlouthi\"\n",
        "date: today\n",
        "format: \n",
        "  revealjs:\n",
        "    logo: /img/logo.png\n",
        "    theme: default\n",
        "    css: /files/lecture_notes/theme/lecture-styles.css\n",
        "    slide-number: true\n",
        "    chalkboard: true\n",
        "    preview-links: auto\n",
        "    footer: \"Understanding Data - Introduction to Probability Â© 2025 Narjes Mathlouthi\"\n",
        "    transition: slide\n",
        "    background-transition: fade\n",
        "jupyter: python3\n",
        "---\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "## Today's Learning Objectives {#sec-objectives .smaller}\n",
        "\n",
        "By the end of this lecture, you will be able to:\n",
        "\n",
        "- [Define probability and understand its basic properties](#sec-prob)\n",
        "- [Identify sample spaces and events](#sample-space)\n",
        "- [Apply fundamental probability rules](#set-operations-overview)\n",
        "- [Calculate conditional probabilities](#conditional-probability)\n",
        "\n",
        "---\n",
        "\n",
        "## Practice Problem 1 {.smaller}\n",
        "::: {.columns}\n",
        "::: {.column width=\"70\"}\n",
        "::: {.example}\n",
        ":::{.smaller}\n",
        "A standard deck has 52 cards. What is the probability of drawing:\n",
        "\n",
        "a) A heart $\\heartsuit$?\n",
        "b) A face card (Jack, Queen, King)?\n",
        "c) The ace of spades $\\spadesuit$?\n",
        "\n",
        "![](/files/lecture_notes/lecture4/img/cards.png)\n",
        ":::\n",
        ":::\n",
        ":::\n",
        "::: {.column width=\"30\"}\n",
        ":::{.fragment}\n",
        ":::{.solution}\n",
        "\n",
        "a) $P(\\text{heart}) = \\frac{13}{52} = \\frac{1}{4}$\n",
        "\n",
        "b) $P(\\text{face card}) = \\frac{12}{52} = \\frac{3}{13}$\n",
        "\n",
        "c) $P(\\text{ace of spades}) = \\frac{1}{52}$\n",
        ":::\n",
        ":::\n",
        ":::\n",
        ":::\n",
        "\n",
        "---\n",
        "\n",
        "## The Addition Rule {.smaller}\n",
        "\n",
        "For any two events $A$ and $B$:\n",
        "\n",
        "::: {.formula-box}\n",
        "$$P(A \\cup B) = P(A) + P(B) - P(A \\cap B)$$\n",
        ":::\n",
        "\n",
        ":::{.example}\n",
        "*Why subtract $P(A \\cap B)$?*\n",
        ":::\n",
        "\n",
        ":::{.fragment}\n",
        ":::{.solution}\n",
        "We don't want to double-count outcomes that are in both events\n",
        ":::\n",
        ":::\n",
        "\n",
        "---\n",
        "\n",
        "## Addition Rule Example {.smaller}\n",
        ":::{.columns}\n",
        ":::{.column}\n",
        ":::{.smaller}\n",
        ":::{.example}\n",
        "Drawing from a standard deck:\n",
        "\n",
        "- $A$: Drawing a heart $\\heartsuit$ ($P(A) = \\frac{13}{52}$)\n",
        "  \n",
        "- $B$: Drawing a face card ($P(B) = \\frac{12}{52}$)\n",
        "  \n",
        "- **What's $P(A \\cup B)$ (heart OR face card)?**\n",
        "\n",
        "\n",
        "![](/files/lecture_notes/lecture4/img/cards.png)\n",
        ":::\n",
        ":::\n",
        ":::\n",
        "\n",
        ":::{.column}\n"
      ],
      "id": "ea6ad92c"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "from matplotlib import pyplot as plt\n",
        "from matplotlib_venn import venn2\n",
        "plt.figure(figsize=(6,4))\n",
        "v = venn2(subsets=(10, 9, 3))\n",
        "v.get_label_by_id('10').set_text('A: Hearts')\n",
        "v.get_label_by_id('01').set_text('B: Face Cards')\n",
        "v.get_label_by_id('11').set_text('A âˆ© B')\n",
        "plt.title('Hearts vs. Face Cards')\n",
        "plt.show()"
      ],
      "id": "7f8eb0a9",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        ":::\n",
        ":::\n",
        "\n",
        "---\n"
      ],
      "id": "baaadda7"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "from matplotlib import pyplot as plt\n",
        "from matplotlib_venn import venn2\n",
        "\n",
        "# Compute region sizes\n",
        "only_hearts = 13 - 3\n",
        "only_face = 12 - 3\n",
        "intersection = 3\n",
        "\n",
        "plt.figure(figsize=(6,4))\n",
        "venn2(subsets=(only_hearts, only_face, intersection), set_labels=('Hearts', 'Face Cards'))\n",
        "plt.title('Hearts vs. Face Cards')\n",
        "plt.show()"
      ],
      "id": "16069b01",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        ":::{.fragment}\n",
        ":::{.solution}\n",
        "$P(A \\cap B) = \\frac{3}{52}$ (face cards that are hearts)\n",
        "\n",
        "$P(A \\cup B) = \\frac{13}{52} + \\frac{12}{52} - \\frac{3}{52} = \\frac{22}{52} = \\frac{11}{26}$\n",
        ":::\n",
        ":::\n",
        "\n",
        "\n",
        "\n",
        "---\n",
        "\n",
        "## Conditional Probability\n",
        "\n",
        ":::{.columns}\n",
        ":::{.column}\n",
        "\n",
        "::: {.definition}\n",
        ":::{.smaller}\n",
        "**ðŸŽ¯Conditional probability** is the probability of event $A$ given that event $B$ has occurred\n",
        "\n",
        "$$P(A|B) = \\frac{P(A \\cap B)}{P(B)}$$\n",
        "\n",
        "provided $P(B) > 0$\n",
        ":::\n",
        ":::\n",
        ":::\n",
        "\n",
        "\n",
        ":::{.column} \n"
      ],
      "id": "722578be"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "from matplotlib import pyplot as plt\n",
        "from matplotlib_venn import venn2\n",
        "\n",
        "# Define colors and edge style\n",
        "color_intersection = '#1f77b4'  # blue\n",
        "color_B = '#ff7f0e'             # orange\n",
        "edge_color = 'black'\n",
        "linewidth = 2\n",
        "text_fontsize = 20\n",
        "label_fontsize = 20\n",
        "title_fontsize = 20\n",
        "\n",
        "fig, axes = plt.subplots(1, 2, figsize=(14, 6))\n",
        "\n",
        "# --- First plot: Intersection Only ---\n",
        "v1 = venn2(\n",
        "    subsets=(1, 1, 1),\n",
        "    set_labels=('A', 'B'),\n",
        "    ax=axes[0],\n",
        "    subset_label_formatter=lambda x: ''\n",
        ")\n",
        "# Style regions\n",
        "for region in ('10', '01'):\n",
        "    patch = v1.get_patch_by_id(region)\n",
        "    patch.set_facecolor('none')\n",
        "    patch.set_edgecolor(edge_color)\n",
        "    patch.set_linewidth(linewidth)\n",
        "patch_int1 = v1.get_patch_by_id('11')\n",
        "patch_int1.set_facecolor(color_intersection)\n",
        "patch_int1.set_alpha(0.5)\n",
        "patch_int1.set_edgecolor(edge_color)\n",
        "patch_int1.set_linewidth(linewidth)\n",
        "# Increase label font sizes\n",
        "v1.get_label_by_id('A').set_fontsize(label_fontsize)\n",
        "v1.get_label_by_id('B').set_fontsize(label_fontsize)\n",
        "# Add bolded P(Aâˆ©B) text\n",
        "x_int, y_int = v1.get_label_by_id('11').get_position()\n",
        "axes[0].text(x_int, y_int, r'$\\mathbf{P(A\\cap B)}$', \n",
        "             ha='center', va='center', fontsize=text_fontsize)\n",
        "axes[0].set_title('Intersection Only', fontsize=title_fontsize)\n",
        "\n",
        "# --- Second plot: B Only (including intersection) ---\n",
        "v2 = venn2(\n",
        "    subsets=(1, 1, 1),\n",
        "    set_labels=('A', 'B'),\n",
        "    ax=axes[1],\n",
        "    subset_label_formatter=lambda x: ''\n",
        ")\n",
        "# Style regions\n",
        "patch_A2 = v2.get_patch_by_id('10')\n",
        "patch_A2.set_facecolor('none')\n",
        "patch_A2.set_edgecolor(edge_color)\n",
        "patch_A2.set_linewidth(linewidth)\n",
        "for region in ('01', '11'):\n",
        "    patch = v2.get_patch_by_id(region)\n",
        "    patch.set_facecolor(color_B)\n",
        "    patch.set_alpha(0.5)\n",
        "    patch.set_edgecolor(edge_color)\n",
        "    patch.set_linewidth(linewidth)\n",
        "# Increase label font sizes\n",
        "v2.get_label_by_id('A').set_fontsize(label_fontsize)\n",
        "v2.get_label_by_id('B').set_fontsize(label_fontsize)\n",
        "# Add bolded B text inside B circle\n",
        "x_B, y_B = v2.get_label_by_id('01').get_position()\n",
        "axes[1].text(x_B, y_B, r'$\\mathbf{B}$', \n",
        "             ha='center', va='center', fontsize=text_fontsize)\n",
        "axes[1].set_title('B Only', fontsize=title_fontsize)\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "id": "dbd1128e",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        ":::\n",
        ":::\n",
        "\n",
        "---\n",
        "\n",
        "## Conditional Probability Interpretation\n",
        "\n",
        "$P(A|B)$ means:\n",
        "\n",
        "- We know event <u><b> $B$ has occurred </u></b>\n",
        "  \n",
        "- What's the probability that $A$ also occurred?\n",
        "  \n",
        "- We \"restrict\" our sample space to only outcomes in $B$\n",
        "\n",
        "![](/files/lecture_notes/lecture4/img/con_prob_2.png)\n",
        "\n",
        "---\n",
        "\n",
        "\n",
        "## Conditional Probability Example {.smaller}\n",
        ":::{.columns}\n",
        ":::{.column}\n",
        ":::{.example}\n",
        "Drawing a card from a standard deck:\n",
        "\n",
        "- $A$: Card is a heart $\\heartsuit$\n",
        "  \n",
        "- $B$: Card is red\n",
        "  \n",
        "- **Q: Find $P(A|B)$**\n",
        "\n",
        "![](/files/lecture_notes/lecture4/img/cards.png)\n",
        ":::\n",
        ":::\n",
        "\n",
        ":::{.column}\n"
      ],
      "id": "c6803a4b"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "from matplotlib import pyplot as plt\n",
        "from matplotlib_venn import venn2\n",
        "plt.figure(figsize=(6,4))\n",
        "v = venn2(subsets=(13, 13, 0))\n",
        "v.get_label_by_id('10').set_text('A: Hearts')\n",
        "v.get_label_by_id('01').set_text('B: Red Cards')\n",
        "plt.title('Hearts vs. Red Cards')\n",
        "plt.show()"
      ],
      "id": "3abe31c6",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        ":::{.fragment}\n",
        ":::{.solution}\n",
        "$P(A \\cap B) = P(\\text{heart}) = \\frac{13}{52}$\n",
        "\n",
        "$P(B) = P(\\text{red}) = \\frac{26}{52}$\n",
        "\n",
        "$P(A|B) = \\frac{13/52}{26/52} = \\frac{13}{26} = \\frac{1}{2}$\n",
        ":::\n",
        ":::\n",
        ":::\n",
        ":::\n",
        "\n",
        "---\n",
        "\n",
        "## Independence {.smaller}\n",
        "\n",
        ":::{.columns}\n",
        ":::{.column}\n",
        "::: {.definition}\n",
        "**ðŸŽ¯ Definition**\n",
        "Events $A$ and $B$ are **independent** if:\n",
        "\n",
        "$$P(A|B) = P(A)$$\n",
        "\n",
        "or equivalently:\n",
        "\n",
        "$$P(A \\cap B) = P(A) \\times P(B)$$\n",
        ":::\n",
        ":::{.fragment}\n",
        "*Knowing that $B$ occurred doesn't change the probability of $A$*\n",
        ":::\n",
        ":::\n",
        "\n",
        ":::{.column}"
      ],
      "id": "9f062431"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import matplotlib.pyplot as plt\n",
        "from matplotlib_venn import venn2\n",
        "\n",
        "# Define probabilities for independent events\n",
        "P_A = 0.4\n",
        "P_B = 0.5\n",
        "P_AB = P_A * P_B  # 0.2\n",
        "\n",
        "# Subset sizes: only A, only B, intersection\n",
        "subsets = (P_A - P_AB, P_B - P_AB, P_AB)\n",
        "\n",
        "fig, ax = plt.subplots(figsize=(6, 6))\n",
        "v = venn2(subsets=subsets, set_labels=('A', 'B'), ax=ax)\n",
        "\n",
        "# Style regions\n",
        "v.get_patch_by_id('10').set_color('skyblue')    # A only\n",
        "v.get_patch_by_id('10').set_alpha(0.5)\n",
        "v.get_patch_by_id('01').set_color('lightgreen') # B only\n",
        "v.get_patch_by_id('01').set_alpha(0.5)\n",
        "v.get_patch_by_id('11').set_color('orange')     # Intersection\n",
        "v.get_patch_by_id('11').set_alpha(0.7)\n",
        "\n",
        "# Annotate margins and intersection inside\n",
        "v.get_label_by_id('10').set_text(f'{subsets[0]:.1f}')\n",
        "v.get_label_by_id('01').set_text(f'{subsets[1]:.1f}')\n",
        "v.get_label_by_id('11').set_text(f'{subsets[2]:.1f}')\n",
        "\n",
        "# Print P(A) and P(B) to the sides\n",
        "ax.text(-0.8, 0.6, f'$P(A)={P_A}$', fontsize=14, fontweight='bold')\n",
        "ax.text(0.8, 0.6, f'$P(B)={P_B}$', fontsize=14, fontweight='bold')\n",
        "\n",
        "plt.title('Independent Events\\n$P(A\\\\cap B)=P(A)P(B)$', fontsize=16)\n",
        "ax.axis('equal')\n",
        "plt.show()"
      ],
      "id": "110fa2fa",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        ":::\n",
        ":::\n",
        "\n",
        "---\n",
        "\n",
        "\n",
        "## Independence Example{.smaller}\n",
        "\n",
        ":::{.example}\n",
        "Two coin flips:\n",
        "\n",
        "- $A$: First flip is heads\n",
        "  \n",
        "- $B$: Second flip is heads\n",
        "\n",
        "**Q: Are $A$ and $B$ independent?**\n",
        ":::\n",
        "\n",
        "\n",
        "\n",
        ":::{.fragment}\n",
        ":::{.solution}\n",
        "$P(A) = \\frac{1}{2}$, $P(B) = \\frac{1}{2}$\n",
        "\n",
        "$P(A \\cap B) = P(\\text{HH}) = \\frac{1}{4}$\n",
        "\n",
        "$P(A) \\times P(B) = \\frac{1}{2} \\times \\frac{1}{2} = \\frac{1}{4}$\n",
        "\n",
        "Yes, they are independent!\n",
        ":::\n",
        ":::\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "---\n",
        "\n",
        "## Questions? {.center}\n",
        "\n",
        "**Office Hours**: Thursday's 11 AM On Zoom (Link on Canvas)\n",
        "\n",
        "**Email**: nmathlouthi@ucsb.edu\n",
        "\n",
        "**Next Class**: Conditional Probability & Bayes Theorem\n",
        "\n",
        "\n",
        "\n",
        "---\n",
        "\n",
        "## Resources\n",
        "\n",
        "- [Read Chapter 3 in course textbook]((/files/Book/os4_for_screen_reader.pdf))\n",
        "  \n",
        "- [Elements of Set Theory for Probability](https://bookdown.org/daniel_flores_agreda/Prob1-GSEM-UNIGE/settheory.html#the-venn-diagram)\n",
        "\n",
        "- [Probability Models and Axioms](https://ocw.mit.edu/courses/res-6-012-introduction-to-probability-spring-2018/resources/mitres_6_012s18_l01as/)"
      ],
      "id": "03d7b13f"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/opt/miniconda3/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}