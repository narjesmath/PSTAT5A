{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"PSTAT 5A: Confidence Intervals Deep Dive\"\n",
        "subtitle: \"Lecture 12 - From Theory to Practice: z and t Distributions\"\n",
        "author: \"Narjes Mathlouthi\"\n",
        "date: today\n",
        "format:\n",
        "  revealjs:\n",
        "    logo: /img/logo.png\n",
        "    slide-level: 2            # ## becomes a new slide\n",
        "    theme: default\n",
        "    css: /files/lecture_notes/lecture10/new-style.css\n",
        "    slide-number: true\n",
        "    chalkboard: true\n",
        "    preview-links: auto\n",
        "    footer: \"Confidence Intervals – z and t Distributions © 2025\"\n",
        "    transition: slide\n",
        "    background-transition: fade\n",
        "    incremental: false\n",
        "    smaller: true\n",
        "\n",
        "jupyter: python3\n",
        "execute:\n",
        "  echo: false\n",
        "  warning: false\n",
        "  message: false\n",
        "  eval: true\n",
        "---"
      ],
      "id": "41f707c7"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import plotly.graph_objects as go\n",
        "import plotly.express as px\n",
        "from plotly.subplots import make_subplots\n",
        "import scipy.stats as stats\n",
        "from scipy.stats import norm, t\n",
        "import warnings\n",
        "warnings.filterwarnings('ignore')\n",
        "\n",
        "# Enhanced color palette\n",
        "colors = {\n",
        "    'primary': '#3b82f6',\n",
        "    'secondary': '#f59e0b', \n",
        "    'success': '#10b981',\n",
        "    'danger': '#ef4444',\n",
        "    'info': '#8b5cf6',\n",
        "    'warning': '#f97316',\n",
        "    'light': '#f8fafc',\n",
        "    'dark': '#1f2937',\n",
        "    'accent': '#06b6d4'\n",
        "}\n",
        "\n",
        "# Set random seed for reproducibility\n",
        "np.random.seed(42)"
      ],
      "id": "23085ad6",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "# Welcome to Lecture 12 {.center}\n",
        "\n",
        "**Confidence Intervals: From Theory to Practice**\n",
        "\n",
        "*\"A confidence interval is a way of expressing uncertainty in a precise, mathematical way\"*\n",
        "\n",
        "---\n",
        "\n",
        "## 📢 Important Announcements\n",
        "\n",
        ":::: {.columns}\n",
        "::: {.column width=\"50%\"}\n",
        "### 📝 Quiz 2 Details\n",
        "**When:**  \n",
        "- 📅 **Date:** Friday, July 25  \n",
        "- ⏰ **Window:** 7 AM – 12 AM  \n",
        "- ⏳ **Duration:** 1 hour once started\n",
        "\n",
        "**Where:** 💻 Online via Canvas\n",
        "\n",
        "**Covers:** Material from Weeks 3-4\n",
        ":::\n",
        "\n",
        "::: {.column width=\"50%\"}\n",
        "### 📚 What to Expect\n",
        "- Discrete & continuous distributions\n",
        "- Probability calculations\n",
        "- Expected value & variance\n",
        "- Normal distribution applications\n",
        "- **Note:** Upload photos of written work for calculation problems\n",
        ":::\n",
        "::::\n",
        "\n",
        "## 📢 Today's Roadmap\n",
        "\n",
        ":::: {.columns}\n",
        "::: {.column}\n",
        "### 🎯 Learning Objectives\n",
        "- **Know the difference** between $z$ and $t$ distributions\n",
        "- **Understand when to use** each distribution\n",
        "- **Learn to find critical values** from tables and plots\n",
        "- **Practice calculating** confidence intervals step-by-step\n",
        "- **Interpret results** correctly in context\n",
        ":::\n",
        "\n",
        "::: {.column}\n",
        "### 📋 What We'll Cover\n",
        "1. **Review:** Confidence interval basics\n",
        "2. **The t-Distribution:** When and why we use it\n",
        "3. **Critical Regions:** Finding the right values\n",
        "4. **Practical Examples:** z and t calculations\n",
        "5. **Common Mistakes:** What to avoid\n",
        "6. **Real Applications:** Making it meaningful\n",
        ":::\n",
        "::::\n",
        "\n",
        "---\n",
        "\n",
        "## Quick Review: Confidence Interval Basics 🔄\n",
        "\n",
        ":::: {.columns}\n",
        "::: {.column}\n",
        "### 🎯 The Big Idea\n",
        "\n",
        "A **confidence interval (CI)** takes a single sample statistic and turns it into a *range* that is likely to contain an *unknown* population parameter; \n",
        "most often the mean $\\mu$.\n",
        "\n",
        "**CI template**\n",
        "\n",
        "$$\n",
        "\\underbrace{\\text{Point estimate}}_{\\color{blue}{(e.g., \\bar{x})}}\n",
        "\\;\\pm\\;\n",
        "\\underbrace{\\text{(critical value) $\\times$ (standard error)}}_{\\color{red}{\\text{Margin of Error (ME)}}}\n",
        "$$\n",
        "\n",
        "**For the mean**\n",
        "\n",
        "| Situation | Formula | Distribution |\n",
        "|-----------|---------|--------------|\n",
        "| **σ known** (rare) | $\\displaystyle \\bar{x} \\;\\pm\\; z^{*}\\,\\frac{\\sigma}{\\sqrt{n}}$ | *z*-distribution |\n",
        "| **σ unknown** (typical) | $\\displaystyle \\bar{x} \\;\\pm\\; t^{*}\\,\\frac{s}{\\sqrt{n}}$ | *t*-distribution ($df = n-1$) |\n",
        "\n",
        "**Key points**\n",
        "\n",
        "- We *never* know the true mean $\\mu$ in practice, that's exactly what the CI estimates.  \n",
        "- Use the population SD **σ** only when it is genuinely known (e.g., industrial process with long‑term QC).  \n",
        "- Otherwise substitute the sample SD **s** and switch to the *t*‑distribution, which is wider to reflect that extra uncertainty.\n",
        ":::\n",
        "\n",
        "::: {.column}"
      ],
      "id": "aaef90f6"
    },
    {
      "cell_type": "code",
      "metadata": {
        "fig-width": 10,
        "fig-height": 5
      },
      "source": [
        "# Quick confidence interval review visualization\n",
        "np.random.seed(42)\n",
        "\n",
        "# Create a sampling distribution\n",
        "sample_mean = 75\n",
        "se = 3\n",
        "confidence_level = 0.95\n",
        "alpha = 1 - confidence_level\n",
        "z_critical = stats.norm.ppf(1 - alpha/2)\n",
        "\n",
        "# Generate the distribution\n",
        "x = np.linspace(sample_mean - 4*se, sample_mean + 4*se, 1000)\n",
        "y = stats.norm.pdf(x, sample_mean, se)\n",
        "\n",
        "# Calculate CI bounds\n",
        "ci_lower = sample_mean - z_critical * se\n",
        "ci_upper = sample_mean + z_critical * se\n",
        "\n",
        "fig = go.Figure()\n",
        "\n",
        "# Add the distribution curve\n",
        "fig.add_trace(go.Scatter(\n",
        "    x=x, y=y,\n",
        "    mode='lines',\n",
        "    line=dict(color=colors['primary'], width=3),\n",
        "    name='Sampling Distribution',\n",
        "    fill='tonexty'\n",
        "))\n",
        "\n",
        "# Shade the confidence interval\n",
        "ci_mask = (x >= ci_lower) & (x <= ci_upper)\n",
        "fig.add_trace(go.Scatter(\n",
        "    x=np.concatenate([x[ci_mask], [ci_upper, ci_lower]]),\n",
        "    y=np.concatenate([y[ci_mask], [0, 0]]),\n",
        "    fill='toself',\n",
        "    fillcolor='rgba(59, 130, 246, 0.3)',\n",
        "    line=dict(color='rgba(0,0,0,0)'),\n",
        "    name='95% Confidence Interval'\n",
        "))\n",
        "\n",
        "# Add critical lines\n",
        "fig.add_vline(x=sample_mean, line_dash=\"solid\", line_color=colors['danger'], \n",
        "              line_width=3, annotation_text=\"Sample Mean\")\n",
        "fig.add_vline(x=ci_lower, line_dash=\"dot\", line_color=colors['warning'], \n",
        "              line_width=2, annotation_text=f\"Lower: {ci_lower:.1f}\")\n",
        "fig.add_vline(x=ci_upper, line_dash=\"dot\", line_color=colors['warning'], \n",
        "              line_width=2, annotation_text=f\"Upper: {ci_upper:.1f}\")\n",
        "\n",
        "fig.update_layout(\n",
        "    title=\"95% Confidence Interval: The Range of Reasonable Values\",\n",
        "    xaxis_title=\"Value\",\n",
        "    yaxis_title=\"Probability Density\",\n",
        "    height=400,\n",
        "    showlegend=False\n",
        ")\n",
        "\n",
        "fig.show()"
      ],
      "id": "59e3d996",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "**Key Formula:** $\\bar{x} \\pm z^* \\cdot \\frac{s}{\\sqrt{n}}$ (when using z-distribution)\n",
        ":::\n",
        "::::\n",
        "\n",
        "---\n",
        "\n",
        "## Step-by-Step Example 1: Using z-Distribution 📝\n",
        "\n",
        ":::: {.columns}\n",
        "::: {.column}\n",
        "### 🎯 Problem Setup\n",
        "\n",
        "**Research Question:** What is the average SAT score of students at UCSB?\n",
        "\n",
        "**Given Information:**\n",
        "\n",
        "- Sample size: $n = 50$ students\n",
        "- Sample mean: $\\bar{x} = 1180$\n",
        "- **Population standard deviation:** $\\sigma = 120$ (known from past data)\n",
        "- Confidence level: $95\\%$\n",
        "\n",
        "**Question:** Construct a $95\\%$ confidence interval for the population mean SAT score.\n",
        "\n",
        "<button class=\"show-solution smaller\" onclick=\"toggleSolution('sol1')\">Show Solution</button>\n",
        "\n",
        "::: {.solution data-id=\"sol1\"}\n",
        "\n",
        "**Step 1: Check conditions**\n",
        "\n",
        "- $\\sigma$ is known ✓\n",
        "- Use z-distribution ✓\n",
        "\n",
        "**Step 2: Find critical value**\n",
        "\n",
        "- For $95\\%$ CI: $\\alpha = 0.05, \\frac{\\alpha}{2} = 0.025$\n",
        "- $z^* = 1.96$ (from z-table)\n",
        "\n",
        "**Step 3: Calculate SE**\n",
        "\n",
        "$$SE = \\frac{\\sigma}{\\sqrt{n}} = \\frac{120}{\\sqrt{50}} = \\frac{120}{7.071} = 16.97$$\n",
        "\n",
        "**Step 4: Calculate Margin of Error**\n",
        "\n",
        "$$ME = z^* \\times SE = 1.96 \\times 16.97 = 33.26$$\n",
        "\n",
        "**Step 5: Construct CI**\n",
        "\n",
        "$$CI = \\bar{x} \\pm ME = 1180 \\pm 33.26 = (1146.7, 1213.3)$$\n",
        "\n",
        "**Final Answer:** We are 95% confident that the true average SAT score is between 1146.7 and 1213.3.\n",
        ":::\n",
        ":::\n",
        "\n",
        "::: {.column}"
      ],
      "id": "61f7194b"
    },
    {
      "cell_type": "code",
      "metadata": {
        "fig-width": 10,
        "fig-height": 6
      },
      "source": [
        "# Example 1: z-distribution calculation\n",
        "n = 50\n",
        "x_bar = 1180\n",
        "sigma = 120\n",
        "confidence = 0.95\n",
        "z_star = 1.96\n",
        "\n",
        "# Calculate standard error and CI\n",
        "se = sigma / np.sqrt(n)\n",
        "margin_error = z_star * se\n",
        "ci_lower = x_bar - margin_error\n",
        "ci_upper = x_bar + margin_error\n",
        "\n",
        "# Create visualization\n",
        "fig = go.Figure()\n",
        "\n",
        "# Sampling distribution\n",
        "x_range = np.linspace(ci_lower - 50, ci_upper + 50, 1000)\n",
        "y_range = stats.norm.pdf(x_range, x_bar, se)\n",
        "\n",
        "fig.add_trace(go.Scatter(\n",
        "    x=x_range, y=y_range,\n",
        "    mode='lines',\n",
        "    line=dict(color=colors['primary'], width=3),\n",
        "    name='Sampling Distribution'\n",
        "))\n",
        "\n",
        "# Shade the confidence interval\n",
        "ci_mask = (x_range >= ci_lower) & (x_range <= ci_upper)\n",
        "fig.add_trace(go.Scatter(\n",
        "    x=np.concatenate([x_range[ci_mask], [ci_upper, ci_lower]]),\n",
        "    y=np.concatenate([y_range[ci_mask], [0, 0]]),\n",
        "    fill='toself',\n",
        "    fillcolor='rgba(59, 130, 246, 0.3)',\n",
        "    line=dict(color='rgba(0,0,0,0)'),\n",
        "    name='95% Confidence Interval'\n",
        "))\n",
        "\n",
        "# Add lines\n",
        "fig.add_vline(x=x_bar, line_dash=\"solid\", line_color=colors['danger'], \n",
        "              line_width=3, annotation_text=f\"x̄ = {x_bar}\")\n",
        "fig.add_vline(x=ci_lower, line_dash=\"dot\", line_color=colors['warning'], \n",
        "              line_width=2, annotation_text=f\"Lower = {ci_lower:.1f}\")\n",
        "fig.add_vline(x=ci_upper, line_dash=\"dot\", line_color=colors['warning'], \n",
        "              line_width=2, annotation_text=f\"Upper = {ci_upper:.1f}\")\n",
        "\n",
        "fig.update_layout(\n",
        "    title=\"Example 1: 95% CI using z-Distribution (σ known)\",\n",
        "    xaxis_title=\"SAT Score\",\n",
        "    yaxis_title=\"Probability Density\",\n",
        "    height=400,\n",
        "    showlegend=False\n",
        ")\n",
        "\n",
        "fig.show()"
      ],
      "id": "37aec2bc",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        ":::\n",
        "::::\n",
        "\n",
        "---\n",
        "\n",
        "## Step-by-Step Example 2: Using t-Distribution 📝\n",
        "\n",
        ":::: {.columns}\n",
        "::: {.column}\n",
        "### 🎯 Problem Setup\n",
        "\n",
        "**Research Question:** What is the average daily coffee consumption at our office?\n",
        "\n",
        "**Given Information:**\n",
        "- Sample size: n = 16 employees\n",
        "- Sample mean: $\\bar{x} = 2.8$ cups\n",
        "- **Sample standard deviation: s = 0.9** ($\\sigma$ unknown)\n",
        "- Confidence level: 90%\n",
        "\n",
        "**Question:** Construct a 90% confidence interval for the population mean daily coffee consumption.\n",
        "\n",
        "::: {.collapsible-solution}\n",
        "<button class=\"solution-toggle\">Show Solution</button>\n",
        "<div class=\"solution-content\">\n",
        "\n",
        "**Step 1: Check conditions**\n",
        "- $\\sigma$ is unknown ✓\n",
        "- n < 30 ✓\n",
        "- Use t-distribution ✓\n",
        "\n",
        "**Step 2: Calculate degrees of freedom**\n",
        "- df = n - 1 = 16 - 1 = 15\n",
        "\n",
        "**Step 3: Find critical value**\n",
        "- For 90% CI: $\\alpha = 0.10, \\alpha/2 = 0.05$\n",
        "- t* = 1.753 (from t-table, df = 15)\n",
        "\n",
        "**Step 4: Calculate SE**\n",
        "\n",
        "$$SE = \\frac{s}{\\sqrt{n}} = \\frac{0.9}{\\sqrt{16}} = \\frac{0.9}{4} = 0.225$$\n",
        "\n",
        "**Step 5: Calculate Margin of Error**\n",
        "\n",
        "$$ME = t^* \\times SE = 1.753 \\times 0.225 = 0.394$$\n",
        "\n",
        "**Step 6: Construct CI**\n",
        "\n",
        "$$CI = \\bar{x} \\pm ME = 2.8 \\pm 0.394 = (2.406, 3.194)$$\n",
        "\n",
        "**Final Answer:** We are 90% confident that the true average daily coffee consumption is between 2.406 and 3.194 cups.\n",
        "\n",
        "</div>\n",
        ":::\n",
        ":::\n",
        "\n",
        "::: {.column}"
      ],
      "id": "1d6c4a78"
    },
    {
      "cell_type": "code",
      "metadata": {
        "fig-width": 10,
        "fig-height": 6
      },
      "source": [
        "# Example 2: t-distribution calculation\n",
        "n2 = 16\n",
        "x_bar2 = 2.8\n",
        "s = 0.9\n",
        "confidence2 = 0.90\n",
        "df = n2 - 1\n",
        "t_star = stats.t.ppf(0.95, df)  # 90% CI, so upper tail is 0.05\n",
        "\n",
        "# Calculate standard error and CI\n",
        "se2 = s / np.sqrt(n2)\n",
        "margin_error2 = t_star * se2\n",
        "ci_lower2 = x_bar2 - margin_error2\n",
        "ci_upper2 = x_bar2 + margin_error2\n",
        "\n",
        "# Create visualization\n",
        "fig = go.Figure()\n",
        "\n",
        "# Sampling distribution\n",
        "x_range2 = np.linspace(ci_lower2 - 0.5, ci_upper2 + 0.5, 1000)\n",
        "y_range2 = stats.t.pdf((x_range2 - x_bar2)/se2, df) / se2\n",
        "\n",
        "fig.add_trace(go.Scatter(\n",
        "    x=x_range2, y=y_range2,\n",
        "    mode='lines',\n",
        "    line=dict(color=colors['info'], width=3),\n",
        "    name='Sampling Distribution (t)'\n",
        "))\n",
        "\n",
        "# Shade the confidence interval\n",
        "ci_mask2 = (x_range2 >= ci_lower2) & (x_range2 <= ci_upper2)\n",
        "fig.add_trace(go.Scatter(\n",
        "    x=np.concatenate([x_range2[ci_mask2], [ci_upper2, ci_lower2]]),\n",
        "    y=np.concatenate([y_range2[ci_mask2], [0, 0]]),\n",
        "    fill='toself',\n",
        "    fillcolor='rgba(139, 92, 246, 0.3)',\n",
        "    line=dict(color='rgba(0,0,0,0)'),\n",
        "    name='90% Confidence Interval'\n",
        "))\n",
        "\n",
        "# Add lines\n",
        "fig.add_vline(x=x_bar2, line_dash=\"solid\", line_color=colors['danger'], \n",
        "              line_width=3, annotation_text=f\"x̄ = {x_bar2}\")\n",
        "fig.add_vline(x=ci_lower2, line_dash=\"dot\", line_color=colors['warning'], \n",
        "              line_width=2, annotation_text=f\"Lower = {ci_lower2:.3f}\")\n",
        "fig.add_vline(x=ci_upper2, line_dash=\"dot\", line_color=colors['warning'], \n",
        "              line_width=2, annotation_text=f\"Upper = {ci_upper2:.3f}\")\n",
        "\n",
        "fig.update_layout(\n",
        "    title=\"Example 2: 90% CI using t-Distribution (σ unknown)\",\n",
        "    xaxis_title=\"Cups of Coffee\",\n",
        "    yaxis_title=\"Probability Density\",\n",
        "    height=400,\n",
        "    showlegend=False\n",
        ")\n",
        "\n",
        "fig.show()"
      ],
      "id": "c7c0f62c",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        ":::\n",
        "::::\n",
        "\n",
        "---\n",
        "\n",
        "## Practice Problem: Test Your Skills! 🧠\n",
        "\n",
        ":::: {.columns}\n",
        "::: {.column}\n",
        "### 🎯 Your Turn!\n",
        "\n",
        "**Problem:** A researcher wants to estimate the average time students spend studying per day.\n",
        "\n",
        "**Given:**\n",
        "\n",
        "- Sample size: $n = 25$ students  \n",
        "- Sample mean: $\\bar{x} = 3.2$ hours\n",
        "- Sample standard deviation: $s = 1.1$ hours\n",
        "- Confidence level: $95\\%$\n",
        "\n",
        "**Questions:**\n",
        "\n",
        "1. Should you use $z$ or $t$-distribution? Why?\n",
        "2. What are the degrees of freedom?\n",
        "3. What is the critical value?\n",
        "4. Calculate the 95% confidence interval\n",
        "5. Interpret your result in context\n",
        "\n",
        "::: {.collapsible-solution}\n",
        "<button class=\"solution-toggle\">Show Solution</button>\n",
        "<div class=\"solution-content\">\n",
        "\n",
        "**Step 1: Distribution Choice**\n",
        "Use t-distribution because:\n",
        "- σ is unknown (only sample standard deviation s is given)\n",
        "- n = 25 < 30\n",
        "\n",
        "**Step 2: Degrees of Freedom**\n",
        "df = n - 1 = 25 - 1 = 24\n",
        "\n",
        "**Step 3: Critical Value**\n",
        "For 95% CI with df = 24: t* = 2.064\n",
        "\n",
        "**Step 4: Calculate CI**\n",
        "\n",
        "Standard Error: $SE = \\frac{s}{\\sqrt{n}} = \\frac{1.1}{\\sqrt{25}} = \\frac{1.1}{5} = 0.220$\n",
        "\n",
        "Margin of Error: $ME = t^* \\times SE = 2.064 \\times 0.220 = 0.454$\n",
        "\n",
        "Confidence Interval: $CI = \\bar{x} \\pm ME = 3.2 \\pm 0.454 = (2.746, 3.654)$\n",
        "\n",
        "**Step 5: Interpretation**\n",
        "We are 95% confident that the true average study time for students is between 2.746 and 3.654 hours per day.\n",
        "\n",
        "</div>\n",
        ":::\n",
        ":::\n",
        "\n",
        "::: {.column}"
      ],
      "id": "257086e8"
    },
    {
      "cell_type": "code",
      "metadata": {
        "fig-width": 10,
        "fig-height": 6
      },
      "source": [
        "# Practice problem visualization\n",
        "n_practice = 25\n",
        "x_bar_practice = 3.2\n",
        "s_practice = 1.1\n",
        "df_practice = n_practice - 1\n",
        "t_star_practice = stats.t.ppf(0.975, df_practice)  # 95% CI\n",
        "\n",
        "se_practice = s_practice / np.sqrt(n_practice)\n",
        "margin_error_practice = t_star_practice * se_practice\n",
        "ci_lower_practice = x_bar_practice - margin_error_practice\n",
        "ci_upper_practice = x_bar_practice + margin_error_practice\n",
        "\n",
        "# Create visualization\n",
        "fig = go.Figure()\n",
        "\n",
        "# Sampling distribution\n",
        "x_range_practice = np.linspace(ci_lower_practice - 0.5, ci_upper_practice + 0.5, 1000)\n",
        "y_range_practice = stats.t.pdf((x_range_practice - x_bar_practice)/se_practice, df_practice) / se_practice\n",
        "\n",
        "fig.add_trace(go.Scatter(\n",
        "    x=x_range_practice, y=y_range_practice,\n",
        "    mode='lines',\n",
        "    line=dict(color=colors['success'], width=3),\n",
        "    name='Sampling Distribution'\n",
        "))\n",
        "\n",
        "# Shade the confidence interval\n",
        "ci_mask_practice = (x_range_practice >= ci_lower_practice) & (x_range_practice <= ci_upper_practice)\n",
        "fig.add_trace(go.Scatter(\n",
        "    x=np.concatenate([x_range_practice[ci_mask_practice], [ci_upper_practice, ci_lower_practice]]),\n",
        "    y=np.concatenate([y_range_practice[ci_mask_practice], [0, 0]]),\n",
        "    fill='toself',\n",
        "    fillcolor='rgba(16, 185, 129, 0.3)',\n",
        "    line=dict(color='rgba(0,0,0,0)'),\n",
        "    name='95% Confidence Interval'\n",
        "))\n",
        "\n",
        "# Add lines\n",
        "fig.add_vline(x=x_bar_practice, line_dash=\"solid\", line_color=colors['danger'], \n",
        "              line_width=3, annotation_text=f\"x̄ = {x_bar_practice}\")\n",
        "fig.add_vline(x=ci_lower_practice, line_dash=\"dot\", line_color=colors['warning'], \n",
        "              line_width=2, annotation_text=f\"Lower = {ci_lower_practice:.3f}\")\n",
        "fig.add_vline(x=ci_upper_practice, line_dash=\"dot\", line_color=colors['warning'], \n",
        "              line_width=2, annotation_text=f\"Upper = {ci_upper_practice:.3f}\")\n",
        "\n",
        "fig.update_layout(\n",
        "    title=\"Practice Problem: Study Time Confidence Interval\",\n",
        "    xaxis_title=\"Study Time (hours)\",\n",
        "    yaxis_title=\"Probability Density\",\n",
        "    height=400,\n",
        "    showlegend=False\n",
        ")\n",
        "\n",
        "fig.show()"
      ],
      "id": "d3e08d46",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "raw",
      "metadata": {},
      "source": [
        "### 🤔 Think About It...\n",
        "- Why is the t-distribution appropriate here?\n",
        "- How would the interval change if n = 100?\n",
        "- What if we wanted 99% confidence instead?\n",
        ":::\n",
        "::::\n",
        "\n",
        "---\n",
        "\n",
        "## Summary: Key Takeaways 🎯\n",
        "\n",
        ":::: {.columns}\n",
        "::: {.column}\n",
        "### 🧠 Core Concepts\n",
        "\n",
        "**1. Distribution Choice**\n",
        "- σ known → z-distribution\n",
        "- σ unknown + n ≥ 30 → z-distribution  \n",
        "- σ unknown + n < 30 → t-distribution\n",
        "\n",
        "**2. t-Distribution Properties**\n",
        "- Heavier tails than z\n",
        "- Depends on degrees of freedom (df = n-1)\n",
        "- Approaches z as df increases\n",
        "\n",
        "**3. Critical Regions**\n",
        "- α/2 in each tail for two-sided CI\n",
        "- Critical values from tables or software\n",
        "- Larger confidence → larger critical values\n",
        ":::\n",
        "\n",
        "::: {.column}\n",
        "### 🛠️ Practical Skills\n",
        "\n",
        "**4. Calculation Steps**\n",
        "1. Check conditions (σ known?, sample size?)\n",
        "2. Choose distribution (z or t)\n",
        "3. Find critical value\n",
        "4. Calculate standard error\n",
        "5. Compute margin of error  \n",
        "6. Construct interval\n",
        "7. Interpret in context\n",
        "\n",
        "**5. Interpretation**\n",
        "- \"We are C% confident...\"\n",
        "- Focus on the process, not individual interval\n",
        "- Consider practical significance\n",
        "\n",
        "**6. Common Pitfalls to Avoid**\n",
        "- Wrong distribution choice\n",
        "- Incorrect degrees of freedom\n",
        "- Using α instead of α/2\n",
        "- Misinterpreting the interval\n",
        ":::\n",
        "::::\n",
        "\n",
        "---\n",
        "\n",
        "# Thank You! 🎉\n",
        "\n",
        "**Key Message:** Confidence intervals bridge the gap between sample data and population insights - master them, and you master statistical inference!\n",
        "\n",
        "*See you next time for hypothesis testing!* 🔬\n",
        "\n",
        "---"
      ],
      "id": "d0becac1"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/Users/narjesmathlouthi/Desktop/PSTAT5A/web/PSTAT5A/.venv/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}