[
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Class Schedule",
    "section": "",
    "text": "⚠️\n\nImportant: This schedule is subject to change. Please check back regularly for updates and announcements.\n\n\n\n\n\n\nLabs & Worksheets\n\n\n\n\n\nQuizzes & Exams\n\n\n\n\n\nLecture Materials\n\n\n\n\n\nWeek 1: Introduction & Descriptive Statistics\n\n\n\n\n1\n\n\n6/23\n\n\nIntroduction\n\n\nLab 1\n\n\nWorksheet 1\n\n\n\n\n\n\n\n6/24\n\n\nNo class (lecture canceled)\n\n\n—\n\n\n—\n\n\n\n\n\n\n\n6/25\n\n\nDescriptive Statistics I\n\n\n—\n\n\n—\n\n\n\n\n\n\n\n6/26\n\n\nDescriptive Statistics II\n\n\n—\n\n\n—\n\n\n\n\n\n\nWeek 2: Probability Foundations\n\n\n\n\n2\n\n\n6/30\n\n\nIntro to Probability\n\n\nLab 2\n\n\nWorksheet 2\n\n\n\n\n\n\n\n7/01\n\n\nCounting\n\n\n—\n\n\n—\n\n\n\n\n\n\n\n7/02\n\n\nConditional Probability\n\n\n—\n\n\n—\n\n\n\n\n\n\n\n7/03\n\n\nDiscrete Random Variables\n\n\n—\n\n\n—\n\n\n\n\n\n\nWeek 3: Random Variables & Inference\n\n\n\n\n3\n\n\n7/07\n\n\nContinuous Random Variables\n\n\nLab 3\n\n\nWorksheet 3\n\n\n\n\n\n\n\n7/08\n\n\nIntroduction to Inference\n\n\n—\n\n\n—\n\n\n\n\n\n\n\n7/09\n\n\nConfidence Intervals (Proportions)\n\n\n—\n\n\n—\n\n\n\n\n\n\n\n7/10\n\n\nConfidence Intervals (Means)\n\n\n—\n\n\n—\n\n\n\n\n\n\n\n7/11\n\n\nQuiz 1 (Weeks 1–2)\n\n\n—\n\n\n—\n\n\n\n\n\n\nWeek 4: Hypothesis Testing\n\n\n\n\n4\n\n\n7/14\n\n\nHypothesis Testing I\n\n\nLab 4\n\n\nWorksheet 4\n\n\n\n\n\n\n\n7/15\n\n\nHypothesis Testing II\n\n\n—\n\n\n—\n\n\n\n\n\n\n\n7/16\n\n\nTwo–Sample t-Tests\n\n\n—\n\n\n—\n\n\n\n\n\n\n\n7/17\n\n\nTwo–Sample t-Tests Continued\n\n\n—\n\n\n—\n\n\n\n\n\n\nWeek 5: ANOVA & Statistical Modeling\n\n\n\n\n5\n\n\n7/21\n\n\nANOVA\n\n\nLab 5\n\n\nWorksheet 5\n\n\n\n\n\n\n\n7/22\n\n\nIntro to Statistical Modeling\n\n\n—\n\n\n—\n\n\n\n\n\n\n\n7/23\n\n\nIntro to Statistical Modeling & Correlation\n\n\n—\n\n\n—\n\n\n\n\n\n\n\n7/24\n\n\nQuiz 2 (Weeks 3–4)\n\n\n—\n\n\n—\n\n\n\n\n\n\nWeek 6: Regression & Course Wrap-Up\n\n\n\n\n6\n\n\n7/28\n\n\nRegression Analysis\n\n\nLab 6\n\n\nWorksheet 6\n\n\n\n\n\n\n\n7/29\n\n\nRegression Diagnostics, Sampling\n\n\n—\n\n\n—\n\n\n\n\n\n\n\n7/30\n\n\nWrap-Up\n\n\n—\n\n\n—\n\n\n\n\n\n\n\n7/31\n\n\nQuiz 3 (Weeks 5–6)\n\n\n—\n\n\n—"
  },
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "Syllabus",
    "section": "",
    "text": "Download the full syllabus as a PDF\n\n\n\n\n📚\n\n\nCourse Information\n\n\n\n\n\nLecture Time\n\n\nM/W/T/R 8:00 AM–9:30 AM\n\n\n\n\nLecture Hall\n\n\nHSSB 1173\n\n\n\n\nSections\n\n\nAs scheduled on GOLD (see Canvas for Zoom links)\n\n\n\n\nEmail\n\n\nnmathlouthi@ucsb.edu\n\n\n\n\nOffice\n\n\nEllison Hall 5829\n\n\n\n\nOffice Hours\n\n\nThursdays 11:00 AM–12:00 PM (via Zoom or by appointment)\n\n\n\n\n\nNote: Zoom links are posted on the Canvas page for the class.\n\n\n\n\n\n\n👥\n\n\nTeaching Assistants\n\n\n\n\n\nSL\n\n\nSummer Le\n\n\nsle@ucsb.edu\n\n\n\n\nMH\n\n\nMingzhu He\n\n\nmingzhuhe@ucsb.edu\n\n\n\n\n\nEmail policy: Include [PSTAT 5A] in your subject. Allow 24–48 hours for a reply (avoid weekends).\n\n\n\n\n\n\n🎯\n\n\nCourse Description\n\n\nThis introductory course covers the foundations of statistical thinking, including data description, probability, and inference. Students will learn how to summarize data, compute basic probabilities, and make informed decisions using statistical tools.\n\nStudent Learning Objectives\nBy the end of this course, you will be able to:\n\nSummarize data using descriptive statistics\nUnderstand fundamental probability rules and distributions\nConduct basic inferential procedures (confidence intervals, hypothesis tests)\nInterpret results and communicate findings\n\n\n\n\n\n\n📖\n\n\nCourse Materials\n\n\n\n\n\nCanvas\n\n\nAnnouncements, Zoom links, and grades (canvas.ucsb.edu)\n\n\n\n\nCalculator\n\n\nScientific calculator for in-class and quiz work\n\n\n\n\nComputer\n\n\nUse our JupyterHub instance\n\n\n\n\nRecommended Texts\n\n\nOpenIntro Statistics (free online)\nThink Stats by Allen Downey (free online)\n\n\n\n\n\n\n\n📅\n\n\nClass Schedule\n\n\n\n\nNote: For the most up-to-date details, please visit the Class Schedule tab on our website: Class Schedule\n\n\n\n\n\n\n📊\n\n\nGrading\n\n\n\n\nGrade Breakdown:\n\n\n\nLecture attendance: 5%\nSection attendance: 5%\nQuiz 1: 30%\nQuiz 2: 30%\nQuiz 3: 30%\n\n\n\nGrading Scale:\n\n\n\n\nA Grades\nB Grades\nC Grades\nD/F Grades\n\n\n\n\nA+: 97–100\nB+: 87–89\nC+: 77–79\nD+: 67–69\n\n\nA: 93–96\nB: 83–86\nC: 73–76\nD: 60–66\n\n\nA–: 90–92\nB–: 80–82\nC–: 70–72\nF: &lt; 60\n\n\n\n\n\n\nGrades round to the nearest whole number (e.g., 89.7 → 90).\n\n\n\n\n\n\n📝\n\n\nQuizzes\n\n\n\n\n\n1\n\n\n\nQuiz 1: Weeks 1–2\n\n\nJuly 10th\n\n\nCovers introduction and descriptive statistics\n\n\n\n\n\n2\n\n\n\nQuiz 2: Weeks 3–4\n\n\nJuly 24th\n\n\nCovers probability and hypothesis testing\n\n\n\n\n\n3\n\n\n\nQuiz 3: Weeks 5–6\n\n\nJuly 31st\n\n\nCovers ANOVA and regression analysis\n\n\n\n\n\n\nFormat: Multiple choice & short answer (open book)\nPlatform: Gradescope\nAvailability: Fridays 7 AM–12 AM (1‑hour limit)\nMake‑up policy: Notify within 48 h; documentation required.\n\n\n\n\n\n\n🎯\n\n\nHow to Succeed\n\n\n\nAttend lectures & sections\nEngage actively & ask questions\nUse office hours for help\n\n\nClassroom Expectations\nRespect peers & TAs. Stay engaged. Seek support if needed.\n\n\nCommunication Guidelines\n\nUse UCSB email with clear subject\nAllow 24–48 h for replies\nUse office hours or appointments\n\n\n\n\n\n\n🛡️\n\n\nAcademic Integrity\n\n\nDo your own work. Cite sources properly. See:\n\nAcademic Integrity Policy\nStudent Conduct Code\n\n\n\n\n\n🤝\n\n\nStudent Resources\n\n\n\n\n🦽 DSP & Accommodations Disability services and accommodations\n\n\n📚 CLAS Campus Learning Assistance Services\n\n\n🏥 Student Health Health and wellness services\n\n\n🍎 Basic Needs Food security and basic needs support\n\n\n💚 CAPS Counseling & Psychological Services\n\n\n🎓 EOP Educational Opportunity Program\n\n\n👥 ONDAS First-Generation Support\n\n\n📋 Undocumented Services Support for undocumented students\n\n\n🔄 Transfer Center Transfer student support\n\n\n\n\n\n\n📅\n\n\nImportant Dates\n\n\n\n\n\nAdd w/o Code\n\n\nJune 29\n\n\n\n\nDrop w/ Refund\n\n\nJune 29\n\n\n\n\nAdd w/ Code\n\n\nJuly 3\n\n\n\n\nDrop Course\n\n\nJuly 9\n\n\n\n\nChange Grade Option\n\n\nAugust 1"
  },
  {
    "objectID": "syllabus.html#dsp-accommodations",
    "href": "syllabus.html#dsp-accommodations",
    "title": "Syllabus",
    "section": "DSP & Accommodations",
    "text": "DSP & Accommodations\n\nDSP & Accommodations or call (805) 893-2668"
  },
  {
    "objectID": "syllabus.html#other-services",
    "href": "syllabus.html#other-services",
    "title": "Syllabus",
    "section": "Other Services",
    "text": "Other Services\n\nCLAS\n\nStudent Health\n\nBasic Needs\n\nCAPS\n\nEqual Opportunity Program (EOP)\n\nONDAS First-Gen Support\n\nUndocumented Student Services\n\nTransfer Student Center"
  },
  {
    "objectID": "index.html#course-overview",
    "href": "index.html#course-overview",
    "title": "PSTAT 5A: Understanding Data",
    "section": "Course Overview",
    "text": "Course Overview\n\nTransform raw data into meaningful insights through hands-on learning and real-world applications"
  },
  {
    "objectID": "index.html#quick-links",
    "href": "index.html#quick-links",
    "title": "PSTAT 5A: Understanding Data",
    "section": "Quick Links",
    "text": "Quick Links\n\n\n\nIcon\nSection\nLink\n\n\n\n\n📘\nSyllabus\nView Syllabus\n\n\n🗓️\nSchedule\nClass Schedule\n\n\n🎥\nLectures\nLecture Notes\n\n\n💻\nLabs\nComputing Labs\n\n\n📂\nResources\nData & Code\n\n\n🕑\nOffice Hours\nOffice Hours\n\n\n📬\nContact\nGet in Touch\n\n\n\n\n\nNote: This schedule and all deadlines are subject to change. Check this site regularly for updates.\n\nFeel free to explore via the navigation bar above or through these quick‐link buttons. If you have any questions, use the Contact page or drop by office hours. Let’s have a great quarter!"
  },
  {
    "objectID": "files/labs/lab1/lab1.html",
    "href": "files/labs/lab1/lab1.html",
    "title": "PSTAT 5A Lab 1",
    "section": "",
    "text": "Welcome to the first PSTAT 5A Lab! As we will soon learn, computers play an integral part in effectively and efficiently performing statistical analyses. The primary goal of these Labs is to develop the skills to communicate with computers and learn the basic principles and language of programming.\nThis first lab will introduce you to the JupyterHub environment, Python as a programming language, and some basic concepts of programming. You will also complete a series of tasks to familiarize yourself with the tools and concepts we will use throughout the course.\nThis lab is designed to be completed during your first lab section of the week, and it will set the foundation for the rest of the course. Make sure to read through all the material carefully, as it will be essential for your success in PSTAT 5A.\n\n\n\nEvery week we (the course staff) will publish a lab document, which is intended to be completed during your Lab Section (i.e., your first Section) of the week. Each lab document will consist of a combination of text, tips, and the occasional task for you to complete based on the text provided. Your TA will cover exactly what you need to turn in at the end of each lab in order to receive credit, but you should read all lab material carefully and thoroughly as content from labs will appear on quizzes and exams.\n\n\n\n\nComputers, though incredibly useful, are fairly complex machines. To communicate with them, we need to use a specific language, known as a programming language. There are a number of programming languages currently in use—R, Julia, MatLab, and the language we will use for this course, Python.\nPython programs can be written in many environments (e.g., text editors like VS Code or in a Terminal window). For this class we will use Jupyter Notebook (pronounced “Jew-pi-ter”), an interactive environment that’s hosted online so you don’t have to install anything to run Python code!\n\n\n\n\n\nNavigate to (https://pstat5a.lsit.ucsb.edu)\n\nIf you are using a personal computer, you may want to bookmark this page for easy access later.\n\nClick Sign in with your UCSB NetID, and sign in.\n\nNavigate to the Labs folder on the left-hand side of the JupyterHub interface. \nUnder Notebook, click Python 3 (ipykernel).\n\n\nCongratulations, you have just made your first Jupyter notebook! Now, it’s time for our first task:\n\n\n\n\n\nFind your new notebook in the left-hand file browser (it will be named Untitled or Untitled1 by default).\n\nRight-click the notebook and select → Rename.\n\nRename it to Lab1 and hit Enter.\n\nWatch the title bar update to Lab1.ipynb.\n\n\n\n\n\nJupyter notebooks are built from cells—the shaded boxes you see on screen. Here’s how to work with them:\n\n\n\nInactive cell\n\nAppearance: light grey background\n\nAction: click anywhere inside the cell to activate\n\n\nActive cell\n\nAppearance: colored border (green or blue)\n\nYou can now type code or Markdown here.\n\n\n\nTip: Only the active cell runs when you press Run.\n\n\n\n\n\nClick the ▶️ Run button in the toolbar\n\nOr press Shift + Enter to run and advance to the next cell\n\n\n\n\n\n\n\nYou can switch any cell between Code and Markdown:\n\n\n\nPurpose: write and execute Python code\n\nSelect:\n\nClick the cell\n\nChoose Code from the toolbar dropdown\n\n\n\nRun: ▶️ Run button or Shift + Enter\n\n\n\n\n\nPurpose: write formatted text, headings, lists, math, and embed images\n\nSelect:\n\nClick the cell\n\nChoose Markdown from the toolbar dropdown\n\n\nRender: ▶️ Run button or Shift + Enter\n\n\n\n\n\n\nClick into the initial cell ( marked by [ ] on the left).\n\nIn the toolbar dropdown (that currently says Code), select Markdown.\n\nCopy-paste the following (including the #):\n# Task 2\nRun the cell (▶️).\nCreate a new code cell by clicking the + button in the toolbar.\n\n\nAlternatively, you can press B to add a cell below the current one or A to add one above it.\n\nThis option preserves the previous cell type (Code or Markdown).\n\nYou can also right-click the cell and select Insert Cell Below or Insert Cell Above.\nYou can also use the Insert menu at the top of the page. &gt; Tip: Press Shift + Enter to run a cell and move to (or create) the next one.\n\nEnter and run:\n2 + 2\nObserve that a new cell appears under it automatically.\n\n\nTip: Press Shift + Enter to run a cell and move to (or create) the next one.\n\n\n\n\n\nCreate a new Markdown cell labeled:\n# Task 3\nCreate a new code cell and run:\n2 plus 2\nObserve the SyntaxError and note how Python points to the problem.\n\n\nNote: Always read error messages, they tell you what went wrong!\n\n\n\n\n\nPython follows the usual order of operations:\n\nParentheses\n\nExponents\n\nMultiplication / Division\n\nAddition / Subtraction\n\n\n\n\nOperation\nPython Syntax\nExample\nResult\n\n\n\n\nAddition\n+\n2 + 2\n4\n\n\nSubtraction\n-\n2 - 2\n0\n\n\nMultiplication\n*\n2 * 2\n4\n\n\nDivision\n/\n2 / 2\n1.0\n\n\nExponentiation\n**\n2 ** 2\n4\n\n\n\n\n\n\nCompute the following in separate code cells:\n\n\\[\\frac{2 + 3}{4 + 5^6}\\]\n\\[(1 - 3 \\cdot 4^5)^6\\]\n\n\n\n\n\nIn Python, a module is simply a file (with a .py extension) that contains related code, functions, classes, and variables—that you can reuse in other programs. Modules help you organize your code, avoid naming conflicts, and leverage functionality written by others.\n\n\n\nReusability: Write a function once, then import it wherever you need it.\n\nOrganization: Group related functionality into logical units (e.g., math operations).\n\nNamespace Management: Keep your global namespace clean by accessing code through the module’s name.\n\n\n\n\nThere are several ways to bring module code into your current script or notebook:\n\nImport the entire module\nimport math\nprint(math.sin(1))\nImport specific names\nfrom math import sin, pi\nprint(sin(pi/2))\nImport with an alias\nimport numpy as np\narr = np.array([1, 2, 3])\n\n\nTip: Use specific imports (from module import name) to keep your namespace tidy, or aliases (import module as m) for brevity.\n\n\n\n\n\n\nStandard library: Modules like math, random, and datetime come with Python.\n\nThird-party: Install via pip install package_name (e.g. pip install pandas).\n\nYour own: Create my_utils.py and then import my_utils in your project.\n\nModules are the building blocks of larger Python applications; get comfortable importing and exploring them!\n\n\n\n\n\n\nIn a code cell, type:\nsin(1)\nObserve the NameError.\n\nIn the same (or a new) cell, load the module and retry:\nfrom math import *\nsin(1)\n\n\n\n\n\nVariables in Python are used to store data values. You can think of them as labels for data that you want to use later in your program.\n\nAssignment:\nx = 2\nPrinting:\nprint(x)\n\nPython is case-sensitive: my_variable ≠ My_variable.\n\nBehind the scenes, print() is a function that takes one or more values and displays them on the screen. We’ll learn what functions are and how to create our own functions soon.\n\n\n\n\n\n\nAssign:\nmy_variable = 5\nIn a new cell, run:\nprint(My_variable)\n– observe the NameError due to wrong capitalization.\nNameError: name 'My_variable' is not defined\nIn the same cell, run:\nprint(my_variable)\nNow you should see 5 printed without any errors.\n\n\n\n\n\nComments are notes in your code that Python ignores when running the program. They help you and others understand what your code does. Comments are essential for documenting your code, explaining complex logic, or leaving reminders for yourself or others. They do not affect the execution of your program.\nYou can add comments anywhere in your code, and they can be on their own line or at the end of a line of code.\nIn Python, comments start with a # symbol. Everything after the # on that line is considered a comment and will not be executed by Python. You can also use multi-line comments with triple quotes (\"\"\" or '''), which allows you to write longer explanations or block comments that span multiple lines. These are often used for documentation strings (docstrings) to describe functions, classes, or modules.\nYou can add comments in two ways:\n\nInline comment: Use # to comment out a single line.\nExample:\n# This is an inline comment\nx = 5  # Assign 5 to x\nBlock comment: Use triple quotes \"\"\" or ''' to comment out multiple lines.\n\nExample:\n\"\"\"\nMultiple lines\nof comment here\n\"\"\"\n\n\n\n\n\nGo back and add descriptive comments to some of your previous code cells.\n\n\n\n\nPython has several basic data types, which are the building blocks for more complex data structures. The most common ones are: - bool — boolean (e.g. True, False)\n\nNoneType — represents the absence of a value (e.g. None)\nlist — ordered collection (e.g. [1, 2, 3])\ntuple — immutable ordered collection (e.g. (1, 2, 3))\ndict — key-value pairs (e.g. `{“key”: “value”})\nset — unordered collection of unique items (e.g. {1, 2, 3})\n\nThe most basic data types you will use in this course are:\n\nint — integer (e.g. 1, 42)\nfloat — real number (e.g. 1.0, 3.14)\n\nstr — string/text (e.g. \"hello\", 'abc')\n\n\n\n\n\nRun each in its own cell:\ntype(1)\ntype(1.1)\ntype(\"hello\")\n\n\n\n\nYou can assign values to variables and use them in expressions. Here’s an example:\n\n\n\n\n\nCreate a new Markdown cell labeled:\n# Task 9\nIn a new code cell, perform the following variable assignments:\ncourse = \"PSTAT 5A\"\nnum_sections = 4\nsection_capacity = 25\nA new section has been added! Update the variable num_sections to be one more than when you initially defined it above. (Don’t just use num_sections = 5- think about our discussion on updating variables above!)\nUsing comments, write down what you think the output of each of the following expressions will be:\ntype(course)\ntype(num_sections)\nnum_sections * section_capacity\nThen, run each expression in a separate code chunk and comment on the results.\nCreate a new variable called course_capacity and assign it the value of the maximum capacity of the course. (Hint: there are only 5 sections, and each section has a maximum capacity of 25. Try to use your already-defined variables as much as possible!)\n\n\n\n\n\nThat wraps up Lab 1! You’ve successfully navigated the JupyterHub environment, learned how to switch between and run Code and Markdown cells, experimented with basic Python expressions, and practiced variable assignment. In Lab 2, we’ll dive deeper into Python functions, data structures, and more advanced programming concepts. Great work, see you next time!\n\n\n\n\n\n\n🔖 Table of Contents\n- PSTAT 5A Lab 1  - Structure of Labs  - What Is Programming?  - Getting Started  - Task 1  - The JupyterHub Environment  - 1. Cell Activation  - 2. Running Cells  - Cell Types  - Code Cells  - Markdown Cells  - Task 2  - Task 3  - Python as a Calculator  - Task 4  - Python Modules  - Why Use Modules?  - Importing Modules  - Finding and Installing Modules  - Task 5  - Variable Assignment  - Task 6  - Comments  - Task 7  - Basic Data Types  - Task 8  - Using Variables and Data Types  - Task 9  - Conclusion"
  },
  {
    "objectID": "files/labs/lab1/lab1.html#structure-of-labs",
    "href": "files/labs/lab1/lab1.html#structure-of-labs",
    "title": "PSTAT 5A Lab 1",
    "section": "",
    "text": "Every week we (the course staff) will publish a lab document, which is intended to be completed during your Lab Section (i.e., your first Section) of the week. Each lab document will consist of a combination of text, tips, and the occasional task for you to complete based on the text provided. Your TA will cover exactly what you need to turn in at the end of each lab in order to receive credit, but you should read all lab material carefully and thoroughly as content from labs will appear on quizzes and exams."
  },
  {
    "objectID": "files/labs/lab1/lab1.html#what-is-programming",
    "href": "files/labs/lab1/lab1.html#what-is-programming",
    "title": "PSTAT 5A Lab 1",
    "section": "",
    "text": "Computers, though incredibly useful, are fairly complex machines. To communicate with them, we need to use a specific language, known as a programming language. There are a number of programming languages currently in use—R, Julia, MatLab, and the language we will use for this course, Python.\nPython programs can be written in many environments (e.g., text editors like VS Code or in a Terminal window). For this class we will use Jupyter Notebook (pronounced “Jew-pi-ter”), an interactive environment that’s hosted online so you don’t have to install anything to run Python code!"
  },
  {
    "objectID": "files/labs/lab1/lab1.html#getting-started",
    "href": "files/labs/lab1/lab1.html#getting-started",
    "title": "PSTAT 5A Lab 1",
    "section": "",
    "text": "Navigate to (https://pstat5a.lsit.ucsb.edu)\n\nIf you are using a personal computer, you may want to bookmark this page for easy access later.\n\nClick Sign in with your UCSB NetID, and sign in.\n\nNavigate to the Labs folder on the left-hand side of the JupyterHub interface. \nUnder Notebook, click Python 3 (ipykernel).\n\n\nCongratulations, you have just made your first Jupyter notebook! Now, it’s time for our first task:"
  },
  {
    "objectID": "files/labs/lab1/lab1.html#task-1",
    "href": "files/labs/lab1/lab1.html#task-1",
    "title": "PSTAT 5A Lab 1",
    "section": "",
    "text": "Find your new notebook in the left-hand file browser (it will be named Untitled or Untitled1 by default).\n\nRight-click the notebook and select → Rename.\n\nRename it to Lab1 and hit Enter.\n\nWatch the title bar update to Lab1.ipynb."
  },
  {
    "objectID": "files/labs/lab1/lab1.html#the-jupyterhub-environment",
    "href": "files/labs/lab1/lab1.html#the-jupyterhub-environment",
    "title": "PSTAT 5A Lab 1",
    "section": "",
    "text": "Jupyter notebooks are built from cells—the shaded boxes you see on screen. Here’s how to work with them:\n\n\n\nInactive cell\n\nAppearance: light grey background\n\nAction: click anywhere inside the cell to activate\n\n\nActive cell\n\nAppearance: colored border (green or blue)\n\nYou can now type code or Markdown here.\n\n\n\nTip: Only the active cell runs when you press Run.\n\n\n\n\n\nClick the ▶️ Run button in the toolbar\n\nOr press Shift + Enter to run and advance to the next cell"
  },
  {
    "objectID": "files/labs/lab1/lab1.html#cell-types",
    "href": "files/labs/lab1/lab1.html#cell-types",
    "title": "PSTAT 5A Lab 1",
    "section": "",
    "text": "You can switch any cell between Code and Markdown:\n\n\n\nPurpose: write and execute Python code\n\nSelect:\n\nClick the cell\n\nChoose Code from the toolbar dropdown\n\n\n\nRun: ▶️ Run button or Shift + Enter\n\n\n\n\n\nPurpose: write formatted text, headings, lists, math, and embed images\n\nSelect:\n\nClick the cell\n\nChoose Markdown from the toolbar dropdown\n\n\nRender: ▶️ Run button or Shift + Enter"
  },
  {
    "objectID": "files/labs/lab1/lab1.html#task-2",
    "href": "files/labs/lab1/lab1.html#task-2",
    "title": "PSTAT 5A Lab 1",
    "section": "",
    "text": "Click into the initial cell ( marked by [ ] on the left).\n\nIn the toolbar dropdown (that currently says Code), select Markdown.\n\nCopy-paste the following (including the #):\n# Task 2\nRun the cell (▶️).\nCreate a new code cell by clicking the + button in the toolbar.\n\n\nAlternatively, you can press B to add a cell below the current one or A to add one above it.\n\nThis option preserves the previous cell type (Code or Markdown).\n\nYou can also right-click the cell and select Insert Cell Below or Insert Cell Above.\nYou can also use the Insert menu at the top of the page. &gt; Tip: Press Shift + Enter to run a cell and move to (or create) the next one.\n\nEnter and run:\n2 + 2\nObserve that a new cell appears under it automatically.\n\n\nTip: Press Shift + Enter to run a cell and move to (or create) the next one."
  },
  {
    "objectID": "files/labs/lab1/lab1.html#task-3",
    "href": "files/labs/lab1/lab1.html#task-3",
    "title": "PSTAT 5A Lab 1",
    "section": "",
    "text": "Create a new Markdown cell labeled:\n# Task 3\nCreate a new code cell and run:\n2 plus 2\nObserve the SyntaxError and note how Python points to the problem.\n\n\nNote: Always read error messages, they tell you what went wrong!"
  },
  {
    "objectID": "files/labs/lab1/lab1.html#python-as-a-calculator",
    "href": "files/labs/lab1/lab1.html#python-as-a-calculator",
    "title": "PSTAT 5A Lab 1",
    "section": "",
    "text": "Python follows the usual order of operations:\n\nParentheses\n\nExponents\n\nMultiplication / Division\n\nAddition / Subtraction\n\n\n\n\nOperation\nPython Syntax\nExample\nResult\n\n\n\n\nAddition\n+\n2 + 2\n4\n\n\nSubtraction\n-\n2 - 2\n0\n\n\nMultiplication\n*\n2 * 2\n4\n\n\nDivision\n/\n2 / 2\n1.0\n\n\nExponentiation\n**\n2 ** 2\n4"
  },
  {
    "objectID": "files/labs/lab1/lab1.html#task-4",
    "href": "files/labs/lab1/lab1.html#task-4",
    "title": "PSTAT 5A Lab 1",
    "section": "",
    "text": "Compute the following in separate code cells:\n\n\\[\\frac{2 + 3}{4 + 5^6}\\]\n\\[(1 - 3 \\cdot 4^5)^6\\]"
  },
  {
    "objectID": "files/labs/lab1/lab1.html#python-modules",
    "href": "files/labs/lab1/lab1.html#python-modules",
    "title": "PSTAT 5A Lab 1",
    "section": "",
    "text": "In Python, a module is simply a file (with a .py extension) that contains related code, functions, classes, and variables—that you can reuse in other programs. Modules help you organize your code, avoid naming conflicts, and leverage functionality written by others.\n\n\n\nReusability: Write a function once, then import it wherever you need it.\n\nOrganization: Group related functionality into logical units (e.g., math operations).\n\nNamespace Management: Keep your global namespace clean by accessing code through the module’s name.\n\n\n\n\nThere are several ways to bring module code into your current script or notebook:\n\nImport the entire module\nimport math\nprint(math.sin(1))\nImport specific names\nfrom math import sin, pi\nprint(sin(pi/2))\nImport with an alias\nimport numpy as np\narr = np.array([1, 2, 3])\n\n\nTip: Use specific imports (from module import name) to keep your namespace tidy, or aliases (import module as m) for brevity.\n\n\n\n\n\n\nStandard library: Modules like math, random, and datetime come with Python.\n\nThird-party: Install via pip install package_name (e.g. pip install pandas).\n\nYour own: Create my_utils.py and then import my_utils in your project.\n\nModules are the building blocks of larger Python applications; get comfortable importing and exploring them!"
  },
  {
    "objectID": "files/labs/lab1/lab1.html#task-5",
    "href": "files/labs/lab1/lab1.html#task-5",
    "title": "PSTAT 5A Lab 1",
    "section": "",
    "text": "In a code cell, type:\nsin(1)\nObserve the NameError.\n\nIn the same (or a new) cell, load the module and retry:\nfrom math import *\nsin(1)"
  },
  {
    "objectID": "files/labs/lab1/lab1.html#variable-assignment",
    "href": "files/labs/lab1/lab1.html#variable-assignment",
    "title": "PSTAT 5A Lab 1",
    "section": "",
    "text": "Variables in Python are used to store data values. You can think of them as labels for data that you want to use later in your program.\n\nAssignment:\nx = 2\nPrinting:\nprint(x)\n\nPython is case-sensitive: my_variable ≠ My_variable.\n\nBehind the scenes, print() is a function that takes one or more values and displays them on the screen. We’ll learn what functions are and how to create our own functions soon."
  },
  {
    "objectID": "files/labs/lab1/lab1.html#task-6",
    "href": "files/labs/lab1/lab1.html#task-6",
    "title": "PSTAT 5A Lab 1",
    "section": "",
    "text": "Assign:\nmy_variable = 5\nIn a new cell, run:\nprint(My_variable)\n– observe the NameError due to wrong capitalization.\nNameError: name 'My_variable' is not defined\nIn the same cell, run:\nprint(my_variable)\nNow you should see 5 printed without any errors."
  },
  {
    "objectID": "files/labs/lab1/lab1.html#comments",
    "href": "files/labs/lab1/lab1.html#comments",
    "title": "PSTAT 5A Lab 1",
    "section": "",
    "text": "Comments are notes in your code that Python ignores when running the program. They help you and others understand what your code does. Comments are essential for documenting your code, explaining complex logic, or leaving reminders for yourself or others. They do not affect the execution of your program.\nYou can add comments anywhere in your code, and they can be on their own line or at the end of a line of code.\nIn Python, comments start with a # symbol. Everything after the # on that line is considered a comment and will not be executed by Python. You can also use multi-line comments with triple quotes (\"\"\" or '''), which allows you to write longer explanations or block comments that span multiple lines. These are often used for documentation strings (docstrings) to describe functions, classes, or modules.\nYou can add comments in two ways:\n\nInline comment: Use # to comment out a single line.\nExample:\n# This is an inline comment\nx = 5  # Assign 5 to x\nBlock comment: Use triple quotes \"\"\" or ''' to comment out multiple lines.\n\nExample:\n\"\"\"\nMultiple lines\nof comment here\n\"\"\""
  },
  {
    "objectID": "files/labs/lab1/lab1.html#task-7",
    "href": "files/labs/lab1/lab1.html#task-7",
    "title": "PSTAT 5A Lab 1",
    "section": "",
    "text": "Go back and add descriptive comments to some of your previous code cells."
  },
  {
    "objectID": "files/labs/lab1/lab1.html#basic-data-types",
    "href": "files/labs/lab1/lab1.html#basic-data-types",
    "title": "PSTAT 5A Lab 1",
    "section": "",
    "text": "Python has several basic data types, which are the building blocks for more complex data structures. The most common ones are: - bool — boolean (e.g. True, False)\n\nNoneType — represents the absence of a value (e.g. None)\nlist — ordered collection (e.g. [1, 2, 3])\ntuple — immutable ordered collection (e.g. (1, 2, 3))\ndict — key-value pairs (e.g. `{“key”: “value”})\nset — unordered collection of unique items (e.g. {1, 2, 3})\n\nThe most basic data types you will use in this course are:\n\nint — integer (e.g. 1, 42)\nfloat — real number (e.g. 1.0, 3.14)\n\nstr — string/text (e.g. \"hello\", 'abc')"
  },
  {
    "objectID": "files/labs/lab1/lab1.html#task-8",
    "href": "files/labs/lab1/lab1.html#task-8",
    "title": "PSTAT 5A Lab 1",
    "section": "",
    "text": "Run each in its own cell:\ntype(1)\ntype(1.1)\ntype(\"hello\")"
  },
  {
    "objectID": "files/labs/lab1/lab1.html#using-variables-and-data-types",
    "href": "files/labs/lab1/lab1.html#using-variables-and-data-types",
    "title": "PSTAT 5A Lab 1",
    "section": "",
    "text": "You can assign values to variables and use them in expressions. Here’s an example:"
  },
  {
    "objectID": "files/labs/lab1/lab1.html#task-9",
    "href": "files/labs/lab1/lab1.html#task-9",
    "title": "PSTAT 5A Lab 1",
    "section": "",
    "text": "Create a new Markdown cell labeled:\n# Task 9\nIn a new code cell, perform the following variable assignments:\ncourse = \"PSTAT 5A\"\nnum_sections = 4\nsection_capacity = 25\nA new section has been added! Update the variable num_sections to be one more than when you initially defined it above. (Don’t just use num_sections = 5- think about our discussion on updating variables above!)\nUsing comments, write down what you think the output of each of the following expressions will be:\ntype(course)\ntype(num_sections)\nnum_sections * section_capacity\nThen, run each expression in a separate code chunk and comment on the results.\nCreate a new variable called course_capacity and assign it the value of the maximum capacity of the course. (Hint: there are only 5 sections, and each section has a maximum capacity of 25. Try to use your already-defined variables as much as possible!)"
  },
  {
    "objectID": "files/labs/lab1/lab1.html#conclusion",
    "href": "files/labs/lab1/lab1.html#conclusion",
    "title": "PSTAT 5A Lab 1",
    "section": "",
    "text": "That wraps up Lab 1! You’ve successfully navigated the JupyterHub environment, learned how to switch between and run Code and Markdown cells, experimented with basic Python expressions, and practiced variable assignment. In Lab 2, we’ll dive deeper into Python functions, data structures, and more advanced programming concepts. Great work, see you next time!"
  },
  {
    "objectID": "files/lecture_notes/Lecture_1/lecture1.html#course-resources",
    "href": "files/lecture_notes/Lecture_1/lecture1.html#course-resources",
    "title": "Lecture 1: Introduction to Data Science",
    "section": "Course Resources",
    "text": "Course Resources\n\nCanvas: for grades\n\nGradescope: for quizzes & labs\n\nEntry code: WJ4XR7\n\n\nCourse Website: bit.ly/3Ga8CSK\n\n\nAll relevant course material will be posted on the website. quizzes are the only exception and will be administered via Gradescope.\n\n\nPlease read the syllabus fully and carefully!"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#welcome-agenda",
    "href": "files/lecture_notes/lecture2/lecture2.html#welcome-agenda",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Welcome & Agenda",
    "text": "Welcome & Agenda\n\nWhat is descriptive statistics?\nWhy it matters before any modeling\nToday’s roadmap: data types → center → spread → shape → visual summaries\n\n\nQuick ice-breaker: ask students for one dataset they’ve looked at recently and what first question they asked about it."
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#learning-objectives-los",
    "href": "files/lecture_notes/lecture2/lecture2.html#learning-objectives-los",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Learning Objectives (LOs)",
    "text": "Learning Objectives (LOs)\nBy the end of this lecture you should be able to:\n\nDefine descriptive statistics and explain its importance in data analysis (Section 1)\nDistinguish between different types of data and measurement scales (Section 2)\nCalculate and interpret measures of central tendency (mean, median, mode)(Section 3)\nUnderstand when to use each measure of central tendency\nApply Python to compute descriptive statistics(Section 9)\nInterpret basic descriptive statistics in real-world contexts(Section 10)"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#types-of-data",
    "href": "files/lecture_notes/lecture2/lecture2.html#types-of-data",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Types of Data",
    "text": "Types of Data\n\n\n\n\n\ngraph TD\n    A[Variable Types]\n    A --&gt; B[Categorical]\n    A --&gt; C[Numerical]\n    B --&gt; B1[\"Nominal&lt;br/&gt;e.g., gender, major\"]\n    B --&gt; B2[\"Ordinal&lt;br/&gt;e.g., rating, education level\"]\n    C --&gt; C1[\"Discrete&lt;br/&gt;e.g., count (# of students)\"]\n    C --&gt; C2[\"Continuous&lt;br/&gt;e.g., measurements like height, weight\"]\n    \n    classDef root fill:#e1f5fe,stroke:#01579b,stroke-width:3px\n    classDef categorical fill:#f3e5f5,stroke:#4a148c,stroke-width:2px\n    classDef numerical fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px\n    classDef nominal fill:#fce4ec,stroke:#880e4f,stroke-width:2px\n    classDef ordinal fill:#fff3e0,stroke:#e65100,stroke-width:2px\n    classDef discrete fill:#e0f2f1,stroke:#00695c,stroke-width:2px\n    classDef continuous fill:#f1f8e9,stroke:#33691e,stroke-width:2px\n    \n    class A root\n    class B categorical\n    class C numerical\n    class B1 nominal\n    class B2 ordinal\n    class C1 discrete\n    class C2 continuous\n\n\n\n\n\n\n\nPrompt: Which summary stat would you pick for “major”? For “gpa”?"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#introducing-pandas-dataframes",
    "href": "files/lecture_notes/lecture2/lecture2.html#introducing-pandas-dataframes",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "2️⃣ Introducing pandas DataFrames",
    "text": "2️⃣ Introducing pandas DataFrames\n\nRows = observations (students)\nColumns = variables (age, major, …)\ndtype drives what Pandas methods you can call"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#center-mean-vs.-median-vs.-mode",
    "href": "files/lecture_notes/lecture2/lecture2.html#center-mean-vs.-median-vs.-mode",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "3️⃣ Center: Mean vs. Median vs. Mode",
    "text": "3️⃣ Center: Mean vs. Median vs. Mode\n\n\n\n\n\n\n\n\nMeasure\nFormula\nWhen to prefer\n\n\n\n\nMean\n\\(\\bar x = \\frac{1}{n}\\sum x_i\\)\nSymmetric, no extreme outliers\n\n\nMedian\n50th percentile\nSkewed distributions\n\n\nMode\nMost frequent\nCategorical or multimodal"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#live-coding-break-5-min",
    "href": "files/lecture_notes/lecture2/lecture2.html#live-coding-break-5-min",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "⚡ Live Coding Break (5 min)",
    "text": "⚡ Live Coding Break (5 min)\n\nTask: Compute the average steps per day from fitbit_week.csv.\nStretch: How many students are above the mean?\n\n??? Give them 3 minutes solo → 2 minutes pair-share. Then demo solution."
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#spread-range-iqr-variance-sd",
    "href": "files/lecture_notes/lecture2/lecture2.html#spread-range-iqr-variance-sd",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "4️⃣ Spread: Range, IQR, Variance, SD",
    "text": "4️⃣ Spread: Range, IQR, Variance, SD\n\nRange = max − min (sensitive to outliers)\nIQR = Q3 − Q1 (middle 50 %)\nVariance \\(s^2\\) & SD \\(s\\): average squared / root → keeps units"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#visualization-histogram-boxplot",
    "href": "files/lecture_notes/lecture2/lecture2.html#visualization-histogram-boxplot",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Visualization: Histogram & Boxplot",
    "text": "Visualization: Histogram & Boxplot\n\nHist = shape & modality\nBox = center, IQR, outliers (1.5×IQR rule)\n\n??? Ask: What can you say about skewness? Any potential data quality issues?"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#shape-skewness-kurtosis-brief",
    "href": "files/lecture_notes/lecture2/lecture2.html#shape-skewness-kurtosis-brief",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "5️⃣ Shape: Skewness & Kurtosis (brief)",
    "text": "5️⃣ Shape: Skewness & Kurtosis (brief)\n\nSkewness: direction & degree of asymmetry\nKurtosis: tailedness vs. normal (peaked vs. flat)\nPython: scipy.stats.skew, scipy.stats.kurtosis"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#frequency-tables-for-categorical-data",
    "href": "files/lecture_notes/lecture2/lecture2.html#frequency-tables-for-categorical-data",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Frequency Tables for Categorical Data",
    "text": "Frequency Tables for Categorical Data\n\nBar chart & pie chart caveats (use sparingly!)"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#common-pitfalls",
    "href": "files/lecture_notes/lecture2/lecture2.html#common-pitfalls",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Common Pitfalls",
    "text": "Common Pitfalls\n\nIgnoring data types (e.g., averaging ZIP codes 🔥)\nReporting mean on skewed salary data\nForgetting units/scale transformations (log, %)\nOver-plotting 2D histograms vs. scatter"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#quick-recap",
    "href": "files/lecture_notes/lecture2/lecture2.html#quick-recap",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Quick Recap",
    "text": "Quick Recap\n\nDescriptive stats = center + spread + shape + visuals\nPython toolbox: pandas, numpy, matplotlib, scipy\nNext lecture: Descriptive Stats Part II – association (covariance, correlation) & grouped summaries\n\n??? Use a minute for questions; assign short exercise notebook for practice."
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#exit-ticket",
    "href": "files/lecture_notes/lecture2/lecture2.html#exit-ticket",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Exit Ticket ✏️",
    "text": "Exit Ticket ✏️\n\nIn one sentence, describe what the IQR tells you that the range does not."
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#appendix-extra-code-snippets",
    "href": "files/lecture_notes/lecture2/lecture2.html#appendix-extra-code-snippets",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Appendix: Extra Code Snippets",
    "text": "Appendix: Extra Code Snippets"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#todays-agenda",
    "href": "files/lecture_notes/lecture2/lecture2.html#todays-agenda",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Today’s Agenda",
    "text": "Today’s Agenda\n\nIntroduction to Descriptive Statistics (10 minutes)\n\nWhat is descriptive statistics?\n\nWhy it matters before any modeling\n\n\nTypes of Data and Measurement Scales (15 minutes)\nMeasures of Central Tendency (35 minutes)\n\nMean (12 minutes)\nMedian (12 minutes)\nMode (11 minutes)\n\nPython Implementation (15 minutes)\nReal-world Applications and Interpretation (5 minutes)\n\n\nQuick ice-breaker: ask students for one dataset they’ve looked at recently and what first question they asked about it."
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#what-are-descriptive-statistics",
    "href": "files/lecture_notes/lecture2/lecture2.html#what-are-descriptive-statistics",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "What are Descriptive Statistics?",
    "text": "What are Descriptive Statistics?\n\nDescriptive statistics are numerical and graphical methods used to summarize, organize, and describe data in a meaningful way.\n\nPurpose of Descriptive Statistics\n\nSummarize large datasets into manageable information\nIdentify patterns and trends in data\nCommunicate findings clearly to others\nPrepare data for further analysis\nMake initial assessments about data quality"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#statistics",
    "href": "files/lecture_notes/lecture2/lecture2.html#statistics",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Statistics",
    "text": "Statistics\n\nFacts are stubborn, but statistics are more pliable.\nMark Twain\n\nStatistics refers to the mathematics and techniques with which we understand data. 1\n\n\n\n(source)"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#descriptive-vs.-inferential-statistics",
    "href": "files/lecture_notes/lecture2/lecture2.html#descriptive-vs.-inferential-statistics",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Descriptive vs. Inferential Statistics",
    "text": "Descriptive vs. Inferential Statistics\n\n\n\n\n\n\n\nDescriptive Statistics\nInferential Statistics\n\n\n\n\nDescribes what the data shows\nMakes predictions about populations\n\n\nSummarizes sample data\nUses sample data to make generalizations\n\n\nNo conclusions beyond the data\nDraws conclusions beyond the immediate data\n\n\nExamples: mean, median, graphs\nExamples: hypothesis testing, confidence intervals"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#descriptive-vs.-inferential-statistics-1",
    "href": "files/lecture_notes/lecture2/lecture2.html#descriptive-vs.-inferential-statistics-1",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Descriptive vs. Inferential Statistics",
    "text": "Descriptive vs. Inferential Statistics"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#why-data-types-matter",
    "href": "files/lecture_notes/lecture2/lecture2.html#why-data-types-matter",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Why Data Types Matter",
    "text": "Why Data Types Matter\nUnderstanding data types is crucial because:\n\n\nDifferent statistics are appropriate for different data types\nStatistical methods depend on the level of measurement\nMisapplying statistics can lead to incorrect conclusions"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#categorical-data-qualitative",
    "href": "files/lecture_notes/lecture2/lecture2.html#categorical-data-qualitative",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Categorical Data (Qualitative)",
    "text": "Categorical Data (Qualitative)\n\n\nNominal Data\n\nCategories with no natural order\nExamples: gender, color, brand names, marital status\nAppropriate statistics: mode, frequency counts, proportions\n\n\nOrdinal Data\n\nCategories with a natural order or ranking\nExamples: education level, satisfaction ratings, letter grades\nAppropriate statistics: mode, median, percentiles"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#numerical-data-quantitative",
    "href": "files/lecture_notes/lecture2/lecture2.html#numerical-data-quantitative",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Numerical Data (Quantitative)",
    "text": "Numerical Data (Quantitative)\n\nDiscrete Data\n\nCountable values, often integers\nExamples: number of children, cars sold, defective items\nCan take on finite or countably infinite values\n\n\n\nContinuous Data\n\nCan take any value within a range\nExamples: height, weight, temperature, time\nMeasured rather than counted"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#measurement-scales-summary",
    "href": "files/lecture_notes/lecture2/lecture2.html#measurement-scales-summary",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Measurement Scales Summary",
    "text": "Measurement Scales Summary\n\n\n\n\n\n\n\n\n\n\nScale\nType\nProperties\nExamples\nAppropriate Statistics\n\n\n\n\nNominal\nCategorical\nCategories only\nGender, Color\nMode, Frequency\n\n\nOrdinal\nCategorical\nOrder matters\nRankings, Grades\nMode, Median\n\n\nInterval\nNumerical\nEqual intervals, no true zero\nTemperature (°C)\nMean, Median, Mode\n\n\nRatio\nNumerical\nEqual intervals, true zero\nHeight, Weight, Income\nAll statistics"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#what-is-central-tendency",
    "href": "files/lecture_notes/lecture2/lecture2.html#what-is-central-tendency",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "What is Central Tendency?",
    "text": "What is Central Tendency?\nCentral tendency describes the center or typical value of a dataset.\nIt answers the question: “What is a representative value for this data?”"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#definition-and-formula",
    "href": "files/lecture_notes/lecture2/lecture2.html#definition-and-formula",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Definition and Formula",
    "text": "Definition and Formula\nThe mean is the sum of all values divided by the number of values.\n\nFormula\n\nFor a sample: \\(\\bar{x} = \\frac{\\sum x}{n}\\)\nFor a population: \\(\\mu = \\frac{\\sum x}{N}\\)\n\nWhere:\n\n\\(\\bar{x}\\) (x-bar) = sample mean\n\\(\\mu\\) (mu) = population mean\n\\(\\sum x\\) = sum of all values\n\\(n\\) = sample size, \\(N\\) = population size"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#example-calculation",
    "href": "files/lecture_notes/lecture2/lecture2.html#example-calculation",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Example Calculation",
    "text": "Example Calculation\nStudent test scores: 85, 90, 78, 92, 88\n\nMean = \\(\\frac{85 + 90 + 78 + 92 + 88}{5} = \\frac{433}{5} = 86.6\\)"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#properties-of-the-mean",
    "href": "files/lecture_notes/lecture2/lecture2.html#properties-of-the-mean",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Properties of the Mean",
    "text": "Properties of the Mean\n\nUses all data points - every value affects the mean\nSensitive to outliers - extreme values can distort the mean\nUnique - there is only one mean for a dataset\nCan be calculated for interval and ratio data\nBalancing point - sum of deviations from mean equals zero"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#when-to-use-the-mean",
    "href": "files/lecture_notes/lecture2/lecture2.html#when-to-use-the-mean",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "When to Use the Mean",
    "text": "When to Use the Mean\n✅ Use the mean when:\n\nData is approximately symmetric\nNo extreme outliers present\nWorking with interval or ratio data\nNeed to use the value in further calculations"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#advantages-and-disadvantages",
    "href": "files/lecture_notes/lecture2/lecture2.html#advantages-and-disadvantages",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Advantages and Disadvantages",
    "text": "Advantages and Disadvantages\n\n\nAdvantages\n\nUses all information in the dataset\nAlgebraically defined and mathematically tractable\nWidely understood and accepted\n\n\nDisadvantages\n\nAffected by outliers and skewed distributions\nMay not represent a typical value in skewed data\nCannot be used with nominal or ordinal data"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#definition",
    "href": "files/lecture_notes/lecture2/lecture2.html#definition",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Definition",
    "text": "Definition\nThe median is the middle value when data is arranged in ascending or descending order."
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#calculation-steps",
    "href": "files/lecture_notes/lecture2/lecture2.html#calculation-steps",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Calculation Steps",
    "text": "Calculation Steps\n\nArrange data in ascending order\nFind the middle position:\n\nIf n is odd: position = \\(\\frac{n + 1}{2}\\)\nIf n is even: average of positions \\(\\frac{n}{2}\\) and \\(\\frac{n}{2} + 1\\)"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#examples",
    "href": "files/lecture_notes/lecture2/lecture2.html#examples",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Examples",
    "text": "Examples\n\nOdd number of values:\n\n\nData: 12, 15, 18, 20, 25\nWhat is the median here ?\nMedian = 18 (middle value)\n\n\n\n\nEven number of values:\n\n\nData: 10, 15, 20, 25, 30, 35\nWhat is the median here ?\nMedian = \\(\\frac{20 + 25}{2} = 22.5\\)"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#properties-of-the-median",
    "href": "files/lecture_notes/lecture2/lecture2.html#properties-of-the-median",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Properties of the Median",
    "text": "Properties of the Median\n\n\nNot affected by outliers - resistant measure\nRepresents the 50th percentile\nMay not be an actual data value (when n is even)\nAppropriate for ordinal, interval, and ratio data\nDivides data into two equal halves"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#when-to-use-the-median",
    "href": "files/lecture_notes/lecture2/lecture2.html#when-to-use-the-median",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "When to Use the Median",
    "text": "When to Use the Median\n✅ Use the median when:\n\nData is skewed (not symmetric)\nOutliers are present\nWorking with ordinal data\nWant a robust measure of central tendency\nData represents income, housing prices, or similar distributions"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#median-vs-mean-with-outliers",
    "href": "files/lecture_notes/lecture2/lecture2.html#median-vs-mean-with-outliers",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Median vs Mean with Outliers",
    "text": "Median vs Mean with Outliers\nConsider household incomes: $30,000, $32,000, $35,000, $38,000, $2,000,000\n\n\nMean = $427,000 (not representative of typical household)\nMedian = $35,000 (better represents typical household)"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#definition-1",
    "href": "files/lecture_notes/lecture2/lecture2.html#definition-1",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Definition",
    "text": "Definition\nThe mode is the value that appears most frequently in a dataset.\n\n\n\n\n\n%%{init: {'flowchart': {'nodeSpacing': 100, 'rankSpacing': 100}, 'width': 600, 'height': 400}}%%\ngraph TD\n    A[\"Mode Types\"]\n    A --&gt; B[\"Unimodal&lt;br/&gt;One peak\"]\n    A --&gt; C[\"Bimodal&lt;br/&gt;Two peaks\"]\n    A --&gt; D[\"Multimodal&lt;br/&gt;Multiple peaks\"]\n    A --&gt; E[\"No Mode&lt;br/&gt;No repeated values\"]\n    \n    classDef main fill:#e1f5fe,stroke:#01579b,stroke-width:3px,font-size:16px\n    classDef types fill:#f5f5f5,stroke:#424242,stroke-width:2px,font-size:14px\n    \n    class A main\n    class B,C,D,E types"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#types-of-distributions-by-mode",
    "href": "files/lecture_notes/lecture2/lecture2.html#types-of-distributions-by-mode",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Types of Distributions by Mode",
    "text": "Types of Distributions by Mode\n\nUnimodal: One mode\nBimodal: Two modes\n\nMultimodal: More than two modes\nNo mode: All values appear with equal frequency"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#examples-1",
    "href": "files/lecture_notes/lecture2/lecture2.html#examples-1",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Examples",
    "text": "Examples\n\n\n\nEx1:\n\n\nData: 2, 3, 3, 4, 5, 5, 5, 6, 7\nWhat is the mode here ?\nMode = 5 (appears 3 times)\nWhat type of mode is it?\nUnimodal\n\n\n\nEx2\n\n\nData: 1, 2, 2, 3, 4, 4, 5\nWhat is the mode here ?\nModes = 2 and 4 (both appear twice)\nWhat type of mode is it?\nBimodal\n\n\n\nEx3\n\n\nData: 1, 2, 3, 4, 5\nWhat is the mode here ?\nNo mode (all appear once)\n\n\n\n\n}"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#mode-for-different-data-types",
    "href": "files/lecture_notes/lecture2/lecture2.html#mode-for-different-data-types",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Mode for Different Data Types",
    "text": "Mode for Different Data Types\nCategorical Data:\nFavorite colors: Red, Blue, Blue, Green, Blue, Red, Blue Mode = Blue\nContinuous Data:\nOften requires grouping into intervals or bins Example: Heights grouped into ranges"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#properties-of-the-mode",
    "href": "files/lecture_notes/lecture2/lecture2.html#properties-of-the-mode",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Properties of the Mode",
    "text": "Properties of the Mode\n\nCan be used with any type of data (nominal, ordinal, interval, ratio)\nNot affected by outliers\nMay not exist or may not be unique\nRepresents the most common value\nEasy to identify in frequency distributions"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#when-to-use-the-mode",
    "href": "files/lecture_notes/lecture2/lecture2.html#when-to-use-the-mode",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "When to Use the Mode",
    "text": "When to Use the Mode\n✅ Use the mode when:\n\nWorking with categorical (nominal) data\nWant to identify the most popular or common choice\nData has clear peaks in frequency\nQuality control applications (most common defect type)\nBusiness applications (best-selling product, most common customer complaint)"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#comparing-measures-of-central-tendency",
    "href": "files/lecture_notes/lecture2/lecture2.html#comparing-measures-of-central-tendency",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Comparing Measures of Central Tendency",
    "text": "Comparing Measures of Central Tendency\n\n\n\n\n\n\n\n\n\n\nMeasure\nBest for Data Type\nStrengths\nWeaknesses\nAffected by Outliers?\n\n\n\n\nMean\nInterval, Ratio\nUses all data, mathematically tractable\nSensitive to outliers\nYes\n\n\nMedian\nOrdinal, Interval, Ratio\nRobust to outliers, represents middle\nIgnores extreme values\nNo\n\n\nMode\nAll types\nWorks with categorical, identifies most common\nMay not exist/be unique\nNo"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#shape-of-distribution-effects",
    "href": "files/lecture_notes/lecture2/lecture2.html#shape-of-distribution-effects",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Shape of Distribution Effects",
    "text": "Shape of Distribution Effects\n\nSymmetric distribution: Mean ≈ Median ≈ Mode\nRight-skewed (positively skewed): Mean &gt; Median &gt; Mode\n\nLeft-skewed (negatively skewed): Mode &gt; Median &gt; Mean"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#essential-libraries",
    "href": "files/lecture_notes/lecture2/lecture2.html#essential-libraries",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Essential Libraries",
    "text": "Essential Libraries\n\nimport numpy as np\nimport pandas as pd\nfrom scipy import stats\nimport matplotlib.pyplot as plt"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#calculating-the-mean",
    "href": "files/lecture_notes/lecture2/lecture2.html#calculating-the-mean",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Calculating the Mean",
    "text": "Calculating the Mean\n\n# Sample data\ndata = [85, 90, 78, 92, 88]\n\n# Using NumPy\nmean_np = np.mean(data)\nprint(f\"Mean (NumPy): {mean_np}\")\n\n# Using Pandas\ndf = pd.DataFrame({'scores': data})\nmean_pd = df['scores'].mean()\nprint(f\"Mean (Pandas): {mean_pd}\")\n\nOutput:\nMean (NumPy): 86.6\nMean (Pandas): 86.6"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#calculating-the-median",
    "href": "files/lecture_notes/lecture2/lecture2.html#calculating-the-median",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Calculating the Median",
    "text": "Calculating the Median\n\n# Using NumPy\nmedian_np = np.median(data)\nprint(f\"Median (NumPy): {median_np}\")\n\n# Using Pandas\nmedian_pd = df['scores'].median()\nprint(f\"Median (Pandas): {median_pd}\")\n\nOutput:\nMedian (NumPy): 88.0\nMedian (Pandas): 88.0"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#calculating-the-mode",
    "href": "files/lecture_notes/lecture2/lecture2.html#calculating-the-mode",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Calculating the Mode",
    "text": "Calculating the Mode\n\n# Using SciPy\nfrom scipy import stats\nmode_result = stats.mode(data)\nprint(f\"Mode: {mode_result.mode}, Count: {mode_result.count}\")\n\n# Using Pandas\nmode_pd = df['scores'].mode()\nprint(f\"Mode (Pandas): {mode_pd.values}\")"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#comprehensive-analysis-function",
    "href": "files/lecture_notes/lecture2/lecture2.html#comprehensive-analysis-function",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Comprehensive Analysis Function",
    "text": "Comprehensive Analysis Function\n\ndef descriptive_summary(data, column_name=\"Data\"):\n    \"\"\"Calculate comprehensive descriptive statistics\"\"\"\n    df = pd.DataFrame({column_name: data})\n    \n    print(f\"Descriptive Statistics for {column_name}\")\n    print(\"=\" * 40)\n    print(f\"Count: {len(data)}\")\n    print(f\"Mean: {np.mean(data):.2f}\")\n    print(f\"Median: {np.median(data):.2f}\")\n    \n    try:\n        mode_result = stats.mode(data)\n        print(f\"Mode: {mode_result.mode[0]} (appears {mode_result.count[0]} times)\")\n    except:\n        print(\"Mode: No unique mode\")\n    \n    return df.describe()\n\n# Example usage\ntest_scores = [85, 90, 78, 92, 88, 91, 85, 87, 89, 86]\nsummary = descriptive_summary(test_scores, \"Test Scores\")"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#handling-categorical-data",
    "href": "files/lecture_notes/lecture2/lecture2.html#handling-categorical-data",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Handling Categorical Data",
    "text": "Handling Categorical Data\n\n# Categorical data example\ncategories = ['A', 'B', 'B', 'C', 'A', 'B', 'A', 'C', 'B', 'B']\ncat_series = pd.Series(categories)\n\nprint(\"Categorical Data Analysis:\")\nprint(f\"Mode: {cat_series.mode().values[0]}\")\nprint(\"\\nValue Counts:\")\nprint(cat_series.value_counts())\n\nOutput:\nCategorical Data Analysis:\nMode: B\n\nValue Counts:\nB    5\nA    3\nC    2"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#business-applications",
    "href": "files/lecture_notes/lecture2/lecture2.html#business-applications",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Business Applications",
    "text": "Business Applications\n\nCustomer Satisfaction: Mean rating shows overall satisfaction, median shows typical experience\nSales Data: Mode identifies best-selling products, median shows typical sale amount\n\nEmployee Performance: Mean for overall team performance, median for typical employee"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#educational-applications",
    "href": "files/lecture_notes/lecture2/lecture2.html#educational-applications",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Educational Applications",
    "text": "Educational Applications\n\nTest Scores: Mean for class average, median for typical student performance\nGrade Distribution: Mode shows most common grade\nAttendance: Mean for overall attendance rate"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#healthcare-applications",
    "href": "files/lecture_notes/lecture2/lecture2.html#healthcare-applications",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Healthcare Applications",
    "text": "Healthcare Applications\n\nPatient Wait Times: Median often preferred due to skewed distributions\nTreatment Outcomes: Mean for overall effectiveness, mode for most common result\nVital Signs: All three measures provide different insights"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#interpretation-guidelines",
    "href": "files/lecture_notes/lecture2/lecture2.html#interpretation-guidelines",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Interpretation Guidelines",
    "text": "Interpretation Guidelines\n\nAlways consider the context of your data\nReport multiple measures when appropriate\n\nBe aware of data distribution shape\nConsider the presence of outliers\nChoose the most appropriate measure for your specific question"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#remember-these-points",
    "href": "files/lecture_notes/lecture2/lecture2.html#remember-these-points",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Remember These Points",
    "text": "Remember These Points\n\nData type determines which statistics are appropriate\nMean uses all data but is sensitive to outliers\nMedian is robust and represents the middle value\nMode identifies the most common value and works with all data types\nContext matters when choosing and interpreting measures\nPython provides powerful tools for calculating descriptive statistics"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#next-lecture-preview",
    "href": "files/lecture_notes/lecture2/lecture2.html#next-lecture-preview",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Next Lecture Preview",
    "text": "Next Lecture Preview\nDescriptive Statistics Part II will cover:\n\nMeasures of variability (range, variance, standard deviation)\nMeasures of position (percentiles, quartiles, z-scores)\nShape of distributions (skewness and kurtosis)\nAdvanced Python visualization techniques"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#try-these-problems",
    "href": "files/lecture_notes/lecture2/lecture2.html#try-these-problems",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Try These Problems",
    "text": "Try These Problems\n\nCalculate mean, median, and mode for: 12, 15, 18, 12, 20, 25, 12, 30\nA dataset has mean = 50 and median = 45. What does this tell you about the distribution?\nWhy might median be preferred over mean for reporting household income?\nCreate a Python function to identify the most appropriate measure of central tendency for a given dataset."
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#additional-resources",
    "href": "files/lecture_notes/lecture2/lecture2.html#additional-resources",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Additional Resources",
    "text": "Additional Resources\n\nPython documentation: pandas.DataFrame.describe()\nNumPy statistical functions documentation\n\nSciPy.stats module reference\nRecommended reading: Chapter 3 in course textbook"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#example-1-unimodal",
    "href": "files/lecture_notes/lecture2/lecture2.html#example-1-unimodal",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Example 1: Unimodal",
    "text": "Example 1: Unimodal\nData: 2, 3, 3, 4, 5, 5, 5, 6, 7\n\nAnalysis:\n\n\nCount each value: 2(1), 3(2), 4(1), 5(3), 6(1), 7(1)\nMost frequent value: 5 appears 3 times\nMode = 5\nType: Unimodal (one mode)"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#example-2-bimodal",
    "href": "files/lecture_notes/lecture2/lecture2.html#example-2-bimodal",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Example 2: Bimodal",
    "text": "Example 2: Bimodal\nData: 1, 2, 2, 3, 4, 4, 5\nAnalysis: - Count each value: 1(1), 2(2), 3(1), 4(2), 5(1) - Most frequent values: 2 and 4 both appear twice - Modes = 2 and 4 - Type: Bimodal (two modes)"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#example-3-no-mode",
    "href": "files/lecture_notes/lecture2/lecture2.html#example-3-no-mode",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Example 3: No Mode",
    "text": "Example 3: No Mode\nData: 1, 2, 3, 4, 5\nAnalysis: - Count each value: 1(1), 2(1), 3(1), 4(1), 5(1) - All values appear exactly once - No mode (no value repeats) - Type: No mode"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#example-1",
    "href": "files/lecture_notes/lecture2/lecture2.html#example-1",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Example 1:",
    "text": "Example 1:\nData: 2, 3, 3, 4, 5, 5, 5, 6, 7\n\nAnalysis:\n\n\nCount each value: 2(1), 3(2), 4(1), 5(3), 6(1), 7(1)\nMost frequent value: 5 appears 3 times\nMode = 5\nType: Unimodal (one mode)"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#example-2",
    "href": "files/lecture_notes/lecture2/lecture2.html#example-2",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Example 2:",
    "text": "Example 2:\nData: 1, 2, 2, 3, 4, 4, 5\n\nAnalysis:\n\n\nCount each value: 1(1), 2(2), 3(1), 4(2), 5(1)\nMost frequent values: 2 and 4 both appear twice\nModes = 2 and 4\nType: Bimodal (two modes)"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#example-3",
    "href": "files/lecture_notes/lecture2/lecture2.html#example-3",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Example 3:",
    "text": "Example 3:\nData: 1, 2, 3, 4, 5\n\nAnalysis:\n\n\nCount each value: 1(1), 2(1), 3(1), 4(1), 5(1)\nAll values appear exactly once\nNo mode (no value repeats)\nType: No mode"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#what-are-descriptive-statistics-sec-descriptive",
    "href": "files/lecture_notes/lecture2/lecture2.html#what-are-descriptive-statistics-sec-descriptive",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "What are Descriptive Statistics? {sec-descriptive}",
    "text": "What are Descriptive Statistics? {sec-descriptive}\n\nDescriptive statistics are numerical and graphical methods used to summarize, organize, and describe data in a meaningful way.\n\nPurpose of Descriptive Statistics\n\nSummarize large datasets into manageable information\nIdentify patterns and trends in data\nCommunicate findings clearly to others\nPrepare data for further analysis\nMake initial assessments about data quality"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#sec-descriptive",
    "href": "files/lecture_notes/lecture2/lecture2.html#sec-descriptive",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "What are Descriptive Statistics?",
    "text": "What are Descriptive Statistics?\n\nDescriptive statistics are numerical and graphical methods used to summarize, organize, and describe data in a meaningful way.\n\nPurpose of Descriptive Statistics\n\nSummarize large datasets into manageable information\nIdentify patterns and trends in data\nCommunicate findings clearly to others\nPrepare data for further analysis\nMake initial assessments about data quality"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#plot",
    "href": "files/lecture_notes/lecture2/lecture2.html#plot",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Plot",
    "text": "Plot\n\nPlot.rectY(data, \n  Plot.stackY(\n    Plot.binX( \n      {y: \"count\"}, \n      {x: \"body_mass_g\", fill: \"species\", thresholds: 20})\n    )\n  ).plot({\n    facet: {\n      data,\n      x: \"sex\"\n    },\n    marks: [Plot.frame()]\n  })\n\n\n\n\n\n\n:::"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#todays-agenda",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#todays-agenda",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Today’s Agenda",
    "text": "Today’s Agenda\n\nIntroduction to Descriptive Statistics (10 minutes)\n\nWhat is descriptive statistics?\n\nWhy it matters before any modeling\n\n\nTypes of Data and Measurement Scales (15 minutes)\nMeasures of Central Tendency (35 minutes)\n\nMean (12 minutes)\nMedian (12 minutes)\nMode (11 minutes)\n\nPython Implementation (15 minutes)\nReal-world Applications and Interpretation (5 minutes)\n\n\nQuick ice-breaker: ask students for one dataset they’ve looked at recently and what first question they asked about it."
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#learning-objectives-los",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#learning-objectives-los",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Learning Objectives (LOs)",
    "text": "Learning Objectives (LOs)\nBy the end of this lecture you should be able to:\n\nDefine descriptive statistics and explain its importance in data analysis (Section 1)\nDistinguish between different types of data and measurement scales (Section 2)\nCalculate and interpret measures of central tendency (mean, median, mode)(Section 3)\nUnderstand when to use each measure of central tendency\nApply Python to compute descriptive statistics(Section 9)\nInterpret basic descriptive statistics in real-world contexts(Section 10)"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#statistics",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#statistics",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Statistics",
    "text": "Statistics\n\nFacts are stubborn, but statistics are more pliable.\nMark Twain\n\nStatistics refers to the mathematics and techniques with which we understand data. 1\n\n\n\n(source)"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#what-are-descriptive-statistics",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#what-are-descriptive-statistics",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "What are Descriptive Statistics?",
    "text": "What are Descriptive Statistics?\n\nDescriptive statistics are numerical and graphical methods used to summarize, organize, and describe data in a meaningful way.\n\nPurpose of Descriptive Statistics\n\nSummarize large datasets into manageable information\nIdentify patterns and trends in data\nCommunicate findings clearly to others\nPrepare data for further analysis\nMake initial assessments about data quality"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#descriptive-vs.-inferential-statistics",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#descriptive-vs.-inferential-statistics",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Descriptive vs. Inferential Statistics",
    "text": "Descriptive vs. Inferential Statistics\n\n\n\n\n\n\n\nDescriptive Statistics\nInferential Statistics\n\n\n\n\nDescribes what the data shows\nMakes predictions about populations\n\n\nSummarizes sample data\nUses sample data to make generalizations\n\n\nNo conclusions beyond the data\nDraws conclusions beyond the immediate data\n\n\nExamples: mean, median, graphs\nExamples: hypothesis testing, confidence intervals"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#descriptive-vs.-inferential-statistics-1",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#descriptive-vs.-inferential-statistics-1",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Descriptive vs. Inferential Statistics",
    "text": "Descriptive vs. Inferential Statistics"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#why-data-types-matter",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#why-data-types-matter",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Why Data Types Matter",
    "text": "Why Data Types Matter\nUnderstanding data types is crucial because:\n\n\nDifferent statistics are appropriate for different data types\nStatistical methods depend on the level of measurement\nMisapplying statistics can lead to incorrect conclusions"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#types-of-data",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#types-of-data",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Types of Data",
    "text": "Types of Data\n\n\n\n\n\ngraph TD\n    A[Variable Types]\n    A --&gt; B[Categorical]\n    A --&gt; C[Numerical]\n    B --&gt; B1[\"Nominal&lt;br/&gt;e.g., gender, major\"]\n    B --&gt; B2[\"Ordinal&lt;br/&gt;e.g., rating, education level\"]\n    C --&gt; C1[\"Discrete&lt;br/&gt;e.g., count (# of students)\"]\n    C --&gt; C2[\"Continuous&lt;br/&gt;e.g., measurements like height, weight\"]\n    \n    classDef root fill:#e1f5fe,stroke:#01579b,stroke-width:3px\n    classDef categorical fill:#f3e5f5,stroke:#4a148c,stroke-width:2px\n    classDef numerical fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px\n    classDef nominal fill:#fce4ec,stroke:#880e4f,stroke-width:2px\n    classDef ordinal fill:#fff3e0,stroke:#e65100,stroke-width:2px\n    classDef discrete fill:#e0f2f1,stroke:#00695c,stroke-width:2px\n    classDef continuous fill:#f1f8e9,stroke:#33691e,stroke-width:2px\n    \n    class A root\n    class B categorical\n    class C numerical\n    class B1 nominal\n    class B2 ordinal\n    class C1 discrete\n    class C2 continuous\n\n\n\n\n\n\n\nPrompt: Which summary stat would you pick for “major”? For “gpa”?"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#categorical-data-qualitative",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#categorical-data-qualitative",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Categorical Data (Qualitative)",
    "text": "Categorical Data (Qualitative)\n\n\nNominal Data\n\nCategories with no natural order\nExamples: gender, color, brand names, marital status\nAppropriate statistics: mode, frequency counts, proportions\n\n\nOrdinal Data\n\nCategories with a natural order or ranking\nExamples: education level, satisfaction ratings, letter grades\nAppropriate statistics: mode, median, percentiles"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#numerical-data-quantitative",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#numerical-data-quantitative",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Numerical Data (Quantitative)",
    "text": "Numerical Data (Quantitative)\n\nDiscrete Data\n\nCountable values, often integers\nExamples: number of children, cars sold, defective items\nCan take on finite or countably infinite values\n\n\n\nContinuous Data\n\nCan take any value within a range\nExamples: height, weight, temperature, time\nMeasured rather than counted"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#measurement-scales-summary",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#measurement-scales-summary",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Measurement Scales Summary",
    "text": "Measurement Scales Summary\n\n\n\n\n\n\n\n\n\n\nScale\nType\nProperties\nExamples\nAppropriate Statistics\n\n\n\n\nNominal\nCategorical\nCategories only\nGender, Color\nMode, Frequency\n\n\nOrdinal\nCategorical\nOrder matters\nRankings, Grades\nMode, Median\n\n\nInterval\nNumerical\nEqual intervals, no true zero\nTemperature (°C)\nMean, Median, Mode\n\n\nRatio\nNumerical\nEqual intervals, true zero\nHeight, Weight, Income\nAll statistics"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#what-is-central-tendency",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#what-is-central-tendency",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "What is Central Tendency?",
    "text": "What is Central Tendency?\nCentral tendency describes the center or typical value of a dataset.\nIt answers the question: “What is a representative value for this data?”"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#definition-and-formula",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#definition-and-formula",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Definition and Formula",
    "text": "Definition and Formula\nThe mean is the sum of all values divided by the number of values.\n\nFormula\n\nFor a sample: \\(\\bar{x} = \\frac{\\sum x}{n}\\)\nFor a population: \\(\\mu = \\frac{\\sum x}{N}\\)\n\nWhere:\n\n\\(\\bar{x}\\) (x-bar) = sample mean\n\\(\\mu\\) (mu) = population mean\n\\(\\sum x\\) = sum of all values\n\\(n\\) = sample size, \\(N\\) = population size"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#example-calculation",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#example-calculation",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Example Calculation",
    "text": "Example Calculation\nStudent test scores: 85, 90, 78, 92, 88\n\nMean = \\(\\frac{85 + 90 + 78 + 92 + 88}{5} = \\frac{433}{5} = 86.6\\)"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#properties-of-the-mean",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#properties-of-the-mean",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Properties of the Mean",
    "text": "Properties of the Mean\n\nUses all data points - every value affects the mean\nSensitive to outliers - extreme values can distort the mean\nUnique - there is only one mean for a dataset\nCan be calculated for interval and ratio data\nBalancing point - sum of deviations from mean equals zero"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#when-to-use-the-mean",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#when-to-use-the-mean",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "When to Use the Mean",
    "text": "When to Use the Mean\n✅ Use the mean when:\n\nData is approximately symmetric\nNo extreme outliers present\nWorking with interval or ratio data\nNeed to use the value in further calculations"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#advantages-and-disadvantages",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#advantages-and-disadvantages",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Advantages and Disadvantages",
    "text": "Advantages and Disadvantages\n\n\nAdvantages\n\nUses all information in the dataset\nAlgebraically defined and mathematically tractable\nWidely understood and accepted\n\n\nDisadvantages\n\nAffected by outliers and skewed distributions\nMay not represent a typical value in skewed data\nCannot be used with nominal or ordinal data"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#definition",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#definition",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Definition",
    "text": "Definition\nThe median is the middle value when data is arranged in ascending or descending order."
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#calculation-steps",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#calculation-steps",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Calculation Steps",
    "text": "Calculation Steps\n\nArrange data in ascending order\nFind the middle position:\n\nIf n is odd: position = \\(\\frac{n + 1}{2}\\)\nIf n is even: average of positions \\(\\frac{n}{2}\\) and \\(\\frac{n}{2} + 1\\)"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#examples",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#examples",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Examples",
    "text": "Examples\n\nOdd number of values:\n\n\nData: 12, 15, 18, 20, 25\nWhat is the median here ?\nMedian = 18 (middle value)\n\n\n\n\nEven number of values:\n\n\nData: 10, 15, 20, 25, 30, 35\nWhat is the median here ?\nMedian = \\(\\frac{20 + 25}{2} = 22.5\\)"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#properties-of-the-median",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#properties-of-the-median",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Properties of the Median",
    "text": "Properties of the Median\n\n\nNot affected by outliers - resistant measure\nRepresents the 50th percentile\nMay not be an actual data value (when n is even)\nAppropriate for ordinal, interval, and ratio data\nDivides data into two equal halves"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#when-to-use-the-median",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#when-to-use-the-median",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "When to Use the Median",
    "text": "When to Use the Median\n✅ Use the median when:\n\nData is skewed (not symmetric)\nOutliers are present\nWorking with ordinal data\nWant a robust measure of central tendency\nData represents income, housing prices, or similar distributions"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#median-vs-mean-with-outliers",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#median-vs-mean-with-outliers",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Median vs Mean with Outliers",
    "text": "Median vs Mean with Outliers\nConsider household incomes: $30,000, $32,000, $35,000, $38,000, $2,000,000\n\n\nMean = $427,000 (not representative of typical household)\nMedian = $35,000 (better represents typical household)"
  },
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "Course Resources",
    "section": "",
    "text": "🔍"
  },
  {
    "objectID": "resources.html#textbook-readings",
    "href": "resources.html#textbook-readings",
    "title": "Week 1 Resources",
    "section": "",
    "text": "OpenIntro Statistics, Chapters 1 & 2\nFoundations of data, variables, and basic descriptive statistics\n/files/Book/os4_for_screen_reader.pdf\nPython for Data Analysis (McKinney), Chapter 5\nSummary and aggregation functions in pandas (describe(), groupby)\nhttps://learning.oreilly.com/library/view/data-science-from/9781491901410/ch05.html#idp14953264"
  },
  {
    "objectID": "resources.html#interactive-tutorials",
    "href": "resources.html#interactive-tutorials",
    "title": "Week 1 Resources",
    "section": "2. Interactive Tutorials",
    "text": "2. Interactive Tutorials\n\nUCSB Library Data Lab: “Data Types and Format”\nHands-on lesson covering Python data types, pandas DataFrame structures, and I/O\nhttps://carpentry.library.ucsb.edu/2025-01-14-python-ecology-lesson/04-data-types-and-format.html"
  },
  {
    "objectID": "resources.html#api-documentation",
    "href": "resources.html#api-documentation",
    "title": "Week 1 Resources",
    "section": "3. API Documentation",
    "text": "3. API Documentation\n\npandas — DataFrame.describe()\nQuick overview of central tendency, dispersion, and shape of your DataFrame\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.describe.html\nNumPy — Statistical functions (mean, median, std, percentile, …)\nhttps://numpy.org/doc/2.1/reference/routines.statistics.html\nSciPy — scipy.stats module (distributions, tests, descriptive stats)\nhttps://docs.scipy.org/doc/scipy/reference/stats.html"
  },
  {
    "objectID": "resources.html#live-demos-with-observable",
    "href": "resources.html#live-demos-with-observable",
    "title": "Week 1 Resources",
    "section": "4. Live Demos with Observable",
    "text": "4. Live Demos with Observable\n\n4.1 pandas.DataFrame.describe() demo"
  },
  {
    "objectID": "resources.html#course-resources",
    "href": "resources.html#course-resources",
    "title": "Resources",
    "section": "",
    "text": "OpenIntro Statistics, Chapters 1 & 2\nFoundations of data, variables, and basic descriptive statistics\nPython for Data Analysis (McKinney), Ch. 5\nSummary and aggregation functions in pandas (describe(), groupby)\n\n\n\n\n\nUCSB Library Data Lab: “Data Types and Format”\nHands-on lesson covering Python data types, pandas DataFrame structures, and I/O\n\n\n\n\n\npandas.DataFrame.describe()\nCentral tendency, dispersion, and shape of your DataFrame\nNumPy statistical functions\nmean, median, std, percentile, and more\nSciPy stats module\nProbability distributions, statistical tests, and descriptive statistics\n\n\n\n\n\n(Resources coming soon!)"
  },
  {
    "objectID": "resources.html#week-1-foundations-of-data-science",
    "href": "resources.html#week-1-foundations-of-data-science",
    "title": "Course Resources",
    "section": "Week 1: Foundations of Data Science",
    "text": "Week 1: Foundations of Data Science"
  },
  {
    "objectID": "resources.html#getting-started-with-data",
    "href": "resources.html#getting-started-with-data",
    "title": "Course Resources",
    "section": "Getting Started with Data",
    "text": "Getting Started with Data\nThis week introduces fundamental concepts in data science, including data types, basic statistics, and essential Python tools for data manipulation and analysis."
  },
  {
    "objectID": "resources.html#week-2-data-visualization",
    "href": "resources.html#week-2-data-visualization",
    "title": "Course Resources",
    "section": "Week 2: Data Visualization",
    "text": "Week 2: Data Visualization\n\n\n🚧\n\n\nResources Coming Soon!\nWeek 2 materials focusing on matplotlib, seaborn, and plotly will be available next week. Check back soon for visualization tutorials and interactive exercises."
  },
  {
    "objectID": "resources.html#week-3-statistical-analysis",
    "href": "resources.html#week-3-statistical-analysis",
    "title": "Course Resources",
    "section": "Week 3: Statistical Analysis",
    "text": "Week 3: Statistical Analysis\n\n\n📊\n\n\nStatistical Inference & Confidence Intervals (CI’s)\nWeek 3 will cover statistical inference,and confidence intervals. Materials will be posted by week 3."
  },
  {
    "objectID": "resources.html#week-4-advanced-topics",
    "href": "resources.html#week-4-advanced-topics",
    "title": "",
    "section": "Week 4: Advanced Topics",
    "text": "Week 4: Advanced Topics\n\n\n🔬\n\n\nMachine Learning Fundamentals\nWeek 4 introduces supervised learning, model evaluation, and scikit-learn basics. Resources will be available by [DATE].\n\n\n\n\nCode\nviewof searchTerm = html`&lt;div&gt;&lt;/div&gt;`\n\n// Get search input and add event listener\ndocument.getElementById('searchInput').addEventListener('input', function() {\n  const searchTerm = this.value.toLowerCase();\n  const resourceCards = document.querySelectorAll('.resource-card');\n  \n  resourceCards.forEach(card =&gt; {\n    const title = card.querySelector('.resource-title').textContent.toLowerCase();\n    const description = card.querySelector('.resource-description').textContent.toLowerCase();\n    const type = card.querySelector('.resource-type').textContent.toLowerCase();\n    \n    if (title.includes(searchTerm) || description.includes(searchTerm) || type.includes(searchTerm)) {\n      card.style.display = 'block';\n      card.style.opacity = '1';\n      card.style.transform = 'scale(1)';\n    } else if (searchTerm !== '') {\n      card.style.opacity = '0.3';\n      card.style.transform = 'scale(0.95)';\n    } else {\n      card.style.opacity = '1';\n      card.style.transform = 'scale(1)';\n    }\n  });\n});"
  },
  {
    "objectID": "resources.html#week-4-statistical-methods-testing",
    "href": "resources.html#week-4-statistical-methods-testing",
    "title": "Course Resources",
    "section": "Week 4: Statistical Methods & Testing",
    "text": "Week 4: Statistical Methods & Testing\n\n\n🔬\n\n\nHypothesis Testing Fundamentals\nWeek 4 will cover hypothesis testing, and two sample t-Tests. Materials will be posted by week 4."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "PSTAT 5A: Understanding Data",
    "section": "",
    "text": "Learn the fundamentals of data science and statistical thinking\n\n\nSummer Session A 2025 • Taught by Narjes Mathlouthi\n\nGet Started →"
  },
  {
    "objectID": "index.html#quick-navigation",
    "href": "index.html#quick-navigation",
    "title": "PSTAT 5A: Understanding Data",
    "section": "Quick Navigation",
    "text": "Quick Navigation\n\nEverything you need for the course, organized and accessible"
  },
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "Contact",
    "section": "",
    "text": "Get in Touch\n\nWe’re here to help you succeed in PSTAT 5A\n\n\n\n\n\n\nNM\n\n\nCourse Instructor\n\n\nNarjes Mathlouthi\n\n\n\n\n📧\n\n\nnmathlouthi@ucsb.edu\n\n\n\n\n🏢\n\n\nEllison Hall 5829\n\n\n\n\n🕐\n\n\nThursdays 11:00 AM–12:00 PM\n\n\n\n\n💻\n\n\nVia Zoom or by appointment\n\n\n\n\n\n\nSL\n\n\nTeaching Assistant\n\n\nSummer Le\n\n\n\n\n📧\n\n\nsle@ucsb.edu\n\n\n\n\n\n\nMH\n\n\nTeaching Assistant\n\n\nMingzhu He\n\n\n\n\n📧\n\n\nmingzhuhe@ucsb.edu\n\n\n\n\n🕐\n\n\nTuesday 11:00 AM – 12:00 PM\n\n\n\n\n💻\n\n\nVia Zoom (links on Canvas)\n\n\n\n\n\n\n\n\nInstructor Office Hours\n\n\nThursdays 11:00 AM – 12:00 PM\n\n\nAvailable via Zoom or by appointment  Zoom links posted on Canvas\n\n\n\n\n\nCommunication Guidelines\n\n\n\n1\n\n\nSubject Line: Always include [PSTAT 5A] in your email subject for faster response\n\n\n\n\n2\n\n\nResponse Time: Allow 24–48 hours for replies (avoid sending on weekends)\n\n\n\n\n3\n\n\nUse UCSB Email: Always email from your UCSB account for verification\n\n\n\n\n4\n\n\nOffice Hours: Use office hours for complex questions or detailed help\n\n\n\n\n5\n\n\nUrgent Matters: For time-sensitive issues, mention “URGENT” in the subject line\n\n\n\n\n\n\nEmergency Contacts\n\n\nFor campus emergencies: 911 • For student crisis support: CAPS 24/7 line (805) 893-4411"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "",
    "text": "Introduction to Descriptive Statistics (10 minutes)\n\nWhat is descriptive statistics?\n\nWhy it matters before any modeling\n\n\nTypes of Data and Measurement Scales (15 minutes)\nMeasures of Central Tendency (35 minutes)\n\nMean (12 minutes)\nMedian (12 minutes)\nMode (11 minutes)\n\nPython Implementation (15 minutes)\nReal-world Applications and Interpretation (5 minutes)\n\n\nQuick ice-breaker: ask students for one dataset they’ve looked at recently and what first question they asked about it."
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#footnotes",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#footnotes",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Footnotes",
    "text": "Footnotes\n\n\n(source)↩︎"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html",
    "title": "Lecture 2: Descriptive Statistics I - Part II",
    "section": "",
    "text": "Introduction to Descriptive Statistics (10 minutes)\n\nWhat is descriptive statistics?\n\nWhy it matters before any modeling\n\n\nTypes of Data and Measurement Scales (15 minutes)\nMeasures of Central Tendency (35 minutes)\n\nMean (12 minutes)\nMedian (12 minutes)\nMode (11 minutes)\n\nPython Implementation (15 minutes)\nReal-world Applications and Interpretation (5 minutes)\n\n\nQuick ice-breaker: ask students for one dataset they’ve looked at recently and what first question they asked about it."
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#todays-agenda",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#todays-agenda",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Today’s Agenda",
    "text": "Today’s Agenda\n\nIntroduction to Descriptive Statistics (10 minutes)\n\nWhat is descriptive statistics?\n\nWhy it matters before any modeling\n\n\nTypes of Data and Measurement Scales (15 minutes)\nMeasures of Central Tendency (35 minutes)\n\nMean (12 minutes)\nMedian (12 minutes)\nMode (11 minutes)\n\nPython Implementation (15 minutes)\nReal-world Applications and Interpretation (5 minutes)\n\n\nQuick ice-breaker: ask students for one dataset they’ve looked at recently and what first question they asked about it."
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#learning-objectives-los",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#learning-objectives-los",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Learning Objectives (LOs)",
    "text": "Learning Objectives (LOs)\nBy the end of this lecture you should be able to:\n\nDefine descriptive statistics and explain its importance in data analysis (Section 1)\nDistinguish between different types of data and measurement scales (Section 2)\nCalculate and interpret measures of central tendency (mean, median, mode)(Section 3)\nUnderstand when to use each measure of central tendency\nApply Python to compute descriptive statistics(Section 9)\nInterpret basic descriptive statistics in real-world contexts(Section 10)"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#statistics",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#statistics",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Statistics",
    "text": "Statistics\n\nFacts are stubborn, but statistics are more pliable.\nMark Twain\n\nStatistics refers to the mathematics and techniques with which we understand data. 1\n\n\n\n(source)"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#what-are-descriptive-statistics",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#what-are-descriptive-statistics",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "What are Descriptive Statistics?",
    "text": "What are Descriptive Statistics?\n\nDescriptive statistics are numerical and graphical methods used to summarize, organize, and describe data in a meaningful way.\n\nPurpose of Descriptive Statistics\n\nSummarize large datasets into manageable information\nIdentify patterns and trends in data\nCommunicate findings clearly to others\nPrepare data for further analysis\nMake initial assessments about data quality"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#descriptive-vs.-inferential-statistics",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#descriptive-vs.-inferential-statistics",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Descriptive vs. Inferential Statistics",
    "text": "Descriptive vs. Inferential Statistics\n\n\n\n\n\n\n\nDescriptive Statistics\nInferential Statistics\n\n\n\n\nDescribes what the data shows\nMakes predictions about populations\n\n\nSummarizes sample data\nUses sample data to make generalizations\n\n\nNo conclusions beyond the data\nDraws conclusions beyond the immediate data\n\n\nExamples: mean, median, graphs\nExamples: hypothesis testing, confidence intervals"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#descriptive-vs.-inferential-statistics-1",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#descriptive-vs.-inferential-statistics-1",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Descriptive vs. Inferential Statistics",
    "text": "Descriptive vs. Inferential Statistics"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#why-data-types-matter",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#why-data-types-matter",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Why Data Types Matter",
    "text": "Why Data Types Matter\nUnderstanding data types is crucial because:\n\n\nDifferent statistics are appropriate for different data types\nStatistical methods depend on the level of measurement\nMisapplying statistics can lead to incorrect conclusions"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#types-of-data",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#types-of-data",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Types of Data",
    "text": "Types of Data\n\ngraph TD\n    A[Variable Types]\n    A --&gt; B[Categorical]\n    A --&gt; C[Numerical]\n    B --&gt; B1[\"Nominal&lt;br/&gt;e.g., gender, major\"]\n    B --&gt; B2[\"Ordinal&lt;br/&gt;e.g., rating, education level\"]\n    C --&gt; C1[\"Discrete&lt;br/&gt;e.g., count (# of students)\"]\n    C --&gt; C2[\"Continuous&lt;br/&gt;e.g., measurements like height, weight\"]\n    \n    classDef root fill:#e1f5fe,stroke:#01579b,stroke-width:3px\n    classDef categorical fill:#f3e5f5,stroke:#4a148c,stroke-width:2px\n    classDef numerical fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px\n    classDef nominal fill:#fce4ec,stroke:#880e4f,stroke-width:2px\n    classDef ordinal fill:#fff3e0,stroke:#e65100,stroke-width:2px\n    classDef discrete fill:#e0f2f1,stroke:#00695c,stroke-width:2px\n    classDef continuous fill:#f1f8e9,stroke:#33691e,stroke-width:2px\n    \n    class A root\n    class B categorical\n    class C numerical\n    class B1 nominal\n    class B2 ordinal\n    class C1 discrete\n    class C2 continuous\n\n\n\n\ngraph TD\n    A[Variable Types]\n    A --&gt; B[Categorical]\n    A --&gt; C[Numerical]\n    B --&gt; B1[\"Nominal&lt;br/&gt;e.g., gender, major\"]\n    B --&gt; B2[\"Ordinal&lt;br/&gt;e.g., rating, education level\"]\n    C --&gt; C1[\"Discrete&lt;br/&gt;e.g., count (# of students)\"]\n    C --&gt; C2[\"Continuous&lt;br/&gt;e.g., measurements like height, weight\"]\n    \n    classDef root fill:#e1f5fe,stroke:#01579b,stroke-width:3px\n    classDef categorical fill:#f3e5f5,stroke:#4a148c,stroke-width:2px\n    classDef numerical fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px\n    classDef nominal fill:#fce4ec,stroke:#880e4f,stroke-width:2px\n    classDef ordinal fill:#fff3e0,stroke:#e65100,stroke-width:2px\n    classDef discrete fill:#e0f2f1,stroke:#00695c,stroke-width:2px\n    classDef continuous fill:#f1f8e9,stroke:#33691e,stroke-width:2px\n    \n    class A root\n    class B categorical\n    class C numerical\n    class B1 nominal\n    class B2 ordinal\n    class C1 discrete\n    class C2 continuous\n\n\n\n\n\n\n\nPrompt: Which summary stat would you pick for “major”? For “gpa”?"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#categorical-data-qualitative",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#categorical-data-qualitative",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Categorical Data (Qualitative)",
    "text": "Categorical Data (Qualitative)\n\n\nNominal Data\n\nCategories with no natural order\nExamples: gender, color, brand names, marital status\nAppropriate statistics: mode, frequency counts, proportions\n\n\nOrdinal Data\n\nCategories with a natural order or ranking\nExamples: education level, satisfaction ratings, letter grades\nAppropriate statistics: mode, median, percentiles"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#numerical-data-quantitative",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#numerical-data-quantitative",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Numerical Data (Quantitative)",
    "text": "Numerical Data (Quantitative)\n\nDiscrete Data\n\nCountable values, often integers\nExamples: number of children, cars sold, defective items\nCan take on finite or countably infinite values\n\n\n\nContinuous Data\n\nCan take any value within a range\nExamples: height, weight, temperature, time\nMeasured rather than counted"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#measurement-scales-summary",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#measurement-scales-summary",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Measurement Scales Summary",
    "text": "Measurement Scales Summary\n\n\n\n\n\n\n\n\n\n\nScale\nType\nProperties\nExamples\nAppropriate Statistics\n\n\n\n\nNominal\nCategorical\nCategories only\nGender, Color\nMode, Frequency\n\n\nOrdinal\nCategorical\nOrder matters\nRankings, Grades\nMode, Median\n\n\nInterval\nNumerical\nEqual intervals, no true zero\nTemperature (°C)\nMean, Median, Mode\n\n\nRatio\nNumerical\nEqual intervals, true zero\nHeight, Weight, Income\nAll statistics"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#what-is-central-tendency",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#what-is-central-tendency",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "What is Central Tendency?",
    "text": "What is Central Tendency?\nCentral tendency describes the center or typical value of a dataset.\nIt answers the question: “What is a representative value for this data?”"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#definition-and-formula",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#definition-and-formula",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Definition and Formula",
    "text": "Definition and Formula\nThe mean is the sum of all values divided by the number of values.\n\nFormula\n\nFor a sample: \\(\\bar{x} = \\frac{\\sum x}{n}\\)\nFor a population: \\(\\mu = \\frac{\\sum x}{N}\\)\n\nWhere:\n\n\\(\\bar{x}\\) (x-bar) = sample mean\n\\(\\mu\\) (mu) = population mean\n\\(\\sum x\\) = sum of all values\n\\(n\\) = sample size, \\(N\\) = population size"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#example-calculation",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#example-calculation",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Example Calculation",
    "text": "Example Calculation\nStudent test scores: 85, 90, 78, 92, 88\n\nMean = \\(\\frac{85 + 90 + 78 + 92 + 88}{5} = \\frac{433}{5} = 86.6\\)"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#properties-of-the-mean",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#properties-of-the-mean",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Properties of the Mean",
    "text": "Properties of the Mean\n\nUses all data points - every value affects the mean\nSensitive to outliers - extreme values can distort the mean\nUnique - there is only one mean for a dataset\nCan be calculated for interval and ratio data\nBalancing point - sum of deviations from mean equals zero"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#when-to-use-the-mean",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#when-to-use-the-mean",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "When to Use the Mean",
    "text": "When to Use the Mean\n✅ Use the mean when:\n\nData is approximately symmetric\nNo extreme outliers present\nWorking with interval or ratio data\nNeed to use the value in further calculations"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#advantages-and-disadvantages",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#advantages-and-disadvantages",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Advantages and Disadvantages",
    "text": "Advantages and Disadvantages\n\n\nAdvantages\n\nUses all information in the dataset\nAlgebraically defined and mathematically tractable\nWidely understood and accepted\n\n\nDisadvantages\n\nAffected by outliers and skewed distributions\nMay not represent a typical value in skewed data\nCannot be used with nominal or ordinal data"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#definition",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#definition",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Definition",
    "text": "Definition\nThe median is the middle value when data is arranged in ascending or descending order."
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#calculation-steps",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#calculation-steps",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Calculation Steps",
    "text": "Calculation Steps\n\nArrange data in ascending order\nFind the middle position:\n\nIf n is odd: position = \\(\\frac{n + 1}{2}\\)\nIf n is even: average of positions \\(\\frac{n}{2}\\) and \\(\\frac{n}{2} + 1\\)"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#examples",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#examples",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Examples",
    "text": "Examples\n\nOdd number of values:\n\n\nData: 12, 15, 18, 20, 25\nWhat is the median here ?\nMedian = 18 (middle value)\n\n\n\n\nEven number of values:\n\n\nData: 10, 15, 20, 25, 30, 35\nWhat is the median here ?\nMedian = \\(\\frac{20 + 25}{2} = 22.5\\)"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#properties-of-the-median",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#properties-of-the-median",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Properties of the Median",
    "text": "Properties of the Median\n\n\nNot affected by outliers - resistant measure\nRepresents the 50th percentile\nMay not be an actual data value (when n is even)\nAppropriate for ordinal, interval, and ratio data\nDivides data into two equal halves"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#when-to-use-the-median",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#when-to-use-the-median",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "When to Use the Median",
    "text": "When to Use the Median\n✅ Use the median when:\n\nData is skewed (not symmetric)\nOutliers are present\nWorking with ordinal data\nWant a robust measure of central tendency\nData represents income, housing prices, or similar distributions"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#median-vs-mean-with-outliers",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#median-vs-mean-with-outliers",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Median vs Mean with Outliers",
    "text": "Median vs Mean with Outliers\nConsider household incomes: $30,000, $32,000, $35,000, $38,000, $2,000,000\n\n\nMean = $427,000 (not representative of typical household)\nMedian = $35,000 (better represents typical household)"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#definition-1",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#definition-1",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Definition",
    "text": "Definition\nThe mode is the value that appears most frequently in a dataset."
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#types-of-distributions-by-mode",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#types-of-distributions-by-mode",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Types of Distributions by Mode",
    "text": "Types of Distributions by Mode\n\nUnimodal: One mode\nBimodal: Two modes\n\nMultimodal: More than two modes\nNo mode: All values appear with equal frequency"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#example-1",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#example-1",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Example 1:",
    "text": "Example 1:\nData: 2, 3, 3, 4, 5, 5, 5, 6, 7\n\nAnalysis:\n\n\nCount each value: 2(1), 3(2), 4(1), 5(3), 6(1), 7(1)\nMost frequent value: 5 appears 3 times\nMode = 5\nType: Unimodal (one mode)"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#example-2",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#example-2",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Example 2:",
    "text": "Example 2:\nData: 1, 2, 2, 3, 4, 4, 5\n\nAnalysis:\n\n\nCount each value: 1(1), 2(2), 3(1), 4(2), 5(1)\nMost frequent values: 2 and 4 both appear twice\nModes = 2 and 4\nType: Bimodal (two modes)"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#example-3",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#example-3",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Example 3:",
    "text": "Example 3:\nData: 1, 2, 3, 4, 5\n\nAnalysis:\n\n\nCount each value: 1(1), 2(1), 3(1), 4(1), 5(1)\nAll values appear exactly once\nNo mode (no value repeats)\nType: No mode"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#mode-for-different-data-types",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#mode-for-different-data-types",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Mode for Different Data Types",
    "text": "Mode for Different Data Types\nCategorical Data:\nFavorite colors: Red, Blue, Blue, Green, Blue, Red, Blue Mode = Blue\nContinuous Data:\nOften requires grouping into intervals or bins Example: Heights grouped into ranges"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#properties-of-the-mode",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#properties-of-the-mode",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Properties of the Mode",
    "text": "Properties of the Mode\n\nCan be used with any type of data (nominal, ordinal, interval, ratio)\nNot affected by outliers\nMay not exist or may not be unique\nRepresents the most common value\nEasy to identify in frequency distributions"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#when-to-use-the-mode",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#when-to-use-the-mode",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "When to Use the Mode",
    "text": "When to Use the Mode\n✅ Use the mode when:\n\nWorking with categorical (nominal) data\nWant to identify the most popular or common choice\nData has clear peaks in frequency\nQuality control applications (most common defect type)\nBusiness applications (best-selling product, most common customer complaint)"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#comparing-measures-of-central-tendency",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#comparing-measures-of-central-tendency",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Comparing Measures of Central Tendency",
    "text": "Comparing Measures of Central Tendency\n\n\n\n\n\n\n\n\n\n\nMeasure\nBest for Data Type\nStrengths\nWeaknesses\nAffected by Outliers?\n\n\n\n\nMean\nInterval, Ratio\nUses all data, mathematically tractable\nSensitive to outliers\nYes\n\n\nMedian\nOrdinal, Interval, Ratio\nRobust to outliers, represents middle\nIgnores extreme values\nNo\n\n\nMode\nAll types\nWorks with categorical, identifies most common\nMay not exist/be unique\nNo"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#shape-of-distribution-effects",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#shape-of-distribution-effects",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Shape of Distribution Effects",
    "text": "Shape of Distribution Effects\n\nSymmetric distribution: Mean ≈ Median ≈ Mode\nRight-skewed (positively skewed): Mean &gt; Median &gt; Mode\n\nLeft-skewed (negatively skewed): Mode &gt; Median &gt; Mean"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#essential-libraries",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#essential-libraries",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Essential Libraries",
    "text": "Essential Libraries\n\nImport LibrariesLibrary OverviewReferences & Further Reading\n\n\n\nimport numpy as np\nimport pandas as pd\nfrom scipy import stats\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Set styling for better plots\nplt.style.use('seaborn-v0_8')\nsns.set_palette(\"husl\")\n\n\n\n\n\n\n\n\n\n\n\n\nLibrary\nPurpose\nKey Functions\n\n\n\n\nNumPy\nNumerical computing\nnp.mean(), np.median(), np.std()\n\n\nPandas\nData manipulation\ndf.describe(), df.mean(), df.median()\n\n\nSciPy\nScientific computing\nstats.describe()\n\n\nMatplotlib\nBasic plotting\nplt.plot(), plt.hist(), plt.boxplot()\n\n\nSeaborn\nStatistical visualization\nsns.histplot(), sns.boxplot()\n\n\n\n\n\nCalculating the Mean\n\n# Sample data\ndata = [85, 90, 78, 92, 88]\n\n# Using NumPy\nimport numpy as np\nmean_np = np.mean(data)\nprint(f\"Mean (NumPy): {mean_np}\")\n\n# Using Pandas\ndf = pd.DataFrame({'scores': data})\nmean_pd = df['scores'].mean()\nprint(f\"Mean (Pandas): {mean_pd}\")\n\nMean (NumPy): 86.6\nMean (Pandas): 86.6\n\n\nOutput:\nMean (NumPy): 86.6\nMean (Pandas): 86.6\n\n\nCalculating the Median\n\n# Using NumPy\nimport numpy as np\nmedian_np = np.median(data)\nprint(f\"Median (NumPy): {median_np}\")\n\n# Using Pandas\nmedian_pd = df['scores'].median()\nprint(f\"Median (Pandas): {median_pd}\")\n\nMedian (NumPy): 88.0\nMedian (Pandas): 88.0\n\n\nOutput:\nMedian (NumPy): 88.0\nMedian (Pandas): 88.0\n\n\nCalculating the Mode\n\n# Using SciPy\nfrom scipy import stats\nmode_result = stats.mode(data)\nprint(f\"Mode: {mode_result.mode}, Count: {mode_result.count}\")\n\n# Using Pandas\nmode_pd = df['scores'].mode()\nprint(f\"Mode (Pandas): {mode_pd.values}\")\n\nMode: 78, Count: 1\nMode (Pandas): [78 85 88 90 92]\n\n\n\n\nComprehensive Analysis Function\n\nimport pandas as pd\nimport numpy as np\ndef descriptive_summary(data, column_name=\"Data\"):\n    \"\"\"Calculate comprehensive descriptive statistics\"\"\"\n    df = pd.DataFrame({column_name: data})\n    \n    print(f\"Descriptive Statistics for {column_name}\")\n    print(\"=\" * 40)\n    print(f\"Count: {len(data)}\")\n    print(f\"Mean: {np.mean(data):.2f}\")\n    print(f\"Median: {np.median(data):.2f}\")\n    \n    try:\n        mode_result = stats.mode(data)\n        print(f\"Mode: {mode_result.mode[0]} (appears {mode_result.count[0]} times)\")\n    except:\n        print(\"Mode: No unique mode\")\n    \n    return df.describe()\n\n# Example usage\ntest_scores = [85, 90, 78, 92, 88, 91, 85, 87, 89, 86]\nsummary = descriptive_summary(test_scores, \"Test Scores\")\n\nDescriptive Statistics for Test Scores\n========================================\nCount: 10\nMean: 87.10\nMedian: 87.50\nMode: No unique mode\n\n\n\n\nHandling Categorical Data\n\n# Categorical data example\ncategories = ['A', 'B', 'B', 'C', 'A', 'B', 'A', 'C', 'B', 'B']\ncat_series = pd.Series(categories)\n\nprint(\"Categorical Data Analysis:\")\nprint(f\"Mode: {cat_series.mode().values[0]}\")\nprint(\"\\nValue Counts:\")\nprint(cat_series.value_counts())\n\nCategorical Data Analysis:\nMode: B\n\nValue Counts:\nB    5\nA    3\nC    2\nName: count, dtype: int64\n\n\nOutput:\nCategorical Data Analysis:\nMode: B\n\nValue Counts:\nB    5\nA    3\nC    2\n\n\nReal-world Applications\n5 minutes\n\n\nBusiness Applications\n\nCustomer Satisfaction: Mean rating shows overall satisfaction, median shows typical experience\nSales Data: Mode identifies best-selling products, median shows typical sale amount\n\nEmployee Performance: Mean for overall team performance, median for typical employee\n\n\n\nEducational Applications\n\nTest Scores: Mean for class average, median for typical student performance\nGrade Distribution: Mode shows most common grade\nAttendance: Mean for overall attendance rate\n\n\n\nHealthcare Applications\n\nPatient Wait Times: Median often preferred due to skewed distributions\nTreatment Outcomes: Mean for overall effectiveness, mode for most common result\nVital Signs: All three measures provide different insights\n\n\n\nInterpretation Guidelines\n\nAlways consider the context of your data\nReport multiple measures when appropriate\n\nBe aware of data distribution shape\nConsider the presence of outliers\nChoose the most appropriate measure for your specific question\n\n\n\n\nKey Takeaways\n\n\n\nRemember These Points\n\nData type determines which statistics are appropriate\nMean uses all data but is sensitive to outliers\nMedian is robust and represents the middle value\nMode identifies the most common value and works with all data types\nContext matters when choosing and interpreting measures\nPython provides powerful tools for calculating descriptive statistics\n\n\n\nNext Lecture Preview\nDescriptive Statistics Part II will cover:\n\nMeasures of variability (range, variance, standard deviation)\nMeasures of position (percentiles, quartiles, z-scores)\nShape of distributions (skewness and kurtosis)\nAdvanced Python visualization techniques\n\n\n\n\nPractice Problems\n\n\n\nTry These Problems\n\nCalculate mean, median, and mode for: 12, 15, 18, 12, 20, 25, 12, 30\nA dataset has mean = 50 and median = 45. What does this tell you about the distribution?\nWhy might median be preferred over mean for reporting household income?\nCreate a Python function to identify the most appropriate measure of central tendency for a given dataset.\n\n\n\n\nQuestions?\nThank you for your attention!\n\n\n\n\n\n\nOpenIntro Statistics, Ch. 1 & 2\nPython for Data Analysis (McKinney), Ch. 5\nUCSB Library Data Lab workshops\npandas DataFrame.describe() ￼\nNumPy statistical functions ￼\nSciPy stats module reference"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#calculating-the-mean",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#calculating-the-mean",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Calculating the Mean",
    "text": "Calculating the Mean\n\n# Sample data\ndata = [85, 90, 78, 92, 88]\n\n# Using NumPy\nimport numpy as np\nmean_np = np.mean(data)\nprint(f\"Mean (NumPy): {mean_np}\")\n\n# Using Pandas\ndf = pd.DataFrame({'scores': data})\nmean_pd = df['scores'].mean()\nprint(f\"Mean (Pandas): {mean_pd}\")\n\nMean (NumPy): 86.6\nMean (Pandas): 86.6\n\n\nOutput:\nMean (NumPy): 86.6\nMean (Pandas): 86.6"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#calculating-the-median",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#calculating-the-median",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Calculating the Median",
    "text": "Calculating the Median\n\n# Using NumPy\nimport numpy as np\nmedian_np = np.median(data)\nprint(f\"Median (NumPy): {median_np}\")\n\n# Using Pandas\nmedian_pd = df['scores'].median()\nprint(f\"Median (Pandas): {median_pd}\")\n\nMedian (NumPy): 88.0\nMedian (Pandas): 88.0\n\n\nOutput:\nMedian (NumPy): 88.0\nMedian (Pandas): 88.0"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#calculating-the-mode",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#calculating-the-mode",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Calculating the Mode",
    "text": "Calculating the Mode\n\n# Using SciPy\nfrom scipy import stats\nmode_result = stats.mode(data)\nprint(f\"Mode: {mode_result.mode}, Count: {mode_result.count}\")\n\n# Using Pandas\nmode_pd = df['scores'].mode()\nprint(f\"Mode (Pandas): {mode_pd.values}\")\n\nMode: 78, Count: 1\nMode (Pandas): [78 85 88 90 92]"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#comprehensive-analysis-function",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#comprehensive-analysis-function",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Comprehensive Analysis Function",
    "text": "Comprehensive Analysis Function\n\nimport pandas as pd\nimport numpy as np\ndef descriptive_summary(data, column_name=\"Data\"):\n    \"\"\"Calculate comprehensive descriptive statistics\"\"\"\n    df = pd.DataFrame({column_name: data})\n    \n    print(f\"Descriptive Statistics for {column_name}\")\n    print(\"=\" * 40)\n    print(f\"Count: {len(data)}\")\n    print(f\"Mean: {np.mean(data):.2f}\")\n    print(f\"Median: {np.median(data):.2f}\")\n    \n    try:\n        mode_result = stats.mode(data)\n        print(f\"Mode: {mode_result.mode[0]} (appears {mode_result.count[0]} times)\")\n    except:\n        print(\"Mode: No unique mode\")\n    \n    return df.describe()\n\n# Example usage\ntest_scores = [85, 90, 78, 92, 88, 91, 85, 87, 89, 86]\nsummary = descriptive_summary(test_scores, \"Test Scores\")\n\nDescriptive Statistics for Test Scores\n========================================\nCount: 10\nMean: 87.10\nMedian: 87.50\nMode: No unique mode"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#handling-categorical-data",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#handling-categorical-data",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Handling Categorical Data",
    "text": "Handling Categorical Data\n\n# Categorical data example\ncategories = ['A', 'B', 'B', 'C', 'A', 'B', 'A', 'C', 'B', 'B']\ncat_series = pd.Series(categories)\n\nprint(\"Categorical Data Analysis:\")\nprint(f\"Mode: {cat_series.mode().values[0]}\")\nprint(\"\\nValue Counts:\")\nprint(cat_series.value_counts())\n\nCategorical Data Analysis:\nMode: B\n\nValue Counts:\nB    5\nA    3\nC    2\nName: count, dtype: int64\n\n\nOutput:\nCategorical Data Analysis:\nMode: B\n\nValue Counts:\nB    5\nA    3\nC    2"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#business-applications",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#business-applications",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Business Applications",
    "text": "Business Applications\n\nCustomer Satisfaction: Mean rating shows overall satisfaction, median shows typical experience\nSales Data: Mode identifies best-selling products, median shows typical sale amount\n\nEmployee Performance: Mean for overall team performance, median for typical employee"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#educational-applications",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#educational-applications",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Educational Applications",
    "text": "Educational Applications\n\nTest Scores: Mean for class average, median for typical student performance\nGrade Distribution: Mode shows most common grade\nAttendance: Mean for overall attendance rate"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#healthcare-applications",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#healthcare-applications",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Healthcare Applications",
    "text": "Healthcare Applications\n\nPatient Wait Times: Median often preferred due to skewed distributions\nTreatment Outcomes: Mean for overall effectiveness, mode for most common result\nVital Signs: All three measures provide different insights"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#interpretation-guidelines",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#interpretation-guidelines",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Interpretation Guidelines",
    "text": "Interpretation Guidelines\n\nAlways consider the context of your data\nReport multiple measures when appropriate\n\nBe aware of data distribution shape\nConsider the presence of outliers\nChoose the most appropriate measure for your specific question"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#remember-these-points",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#remember-these-points",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Remember These Points",
    "text": "Remember These Points\n\nData type determines which statistics are appropriate\nMean uses all data but is sensitive to outliers\nMedian is robust and represents the middle value\nMode identifies the most common value and works with all data types\nContext matters when choosing and interpreting measures\nPython provides powerful tools for calculating descriptive statistics"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#next-lecture-preview",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#next-lecture-preview",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Next Lecture Preview",
    "text": "Next Lecture Preview\nDescriptive Statistics Part II will cover:\n\nMeasures of variability (range, variance, standard deviation)\nMeasures of position (percentiles, quartiles, z-scores)\nShape of distributions (skewness and kurtosis)\nAdvanced Python visualization techniques"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#try-these-problems",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#try-these-problems",
    "title": "Lecture 2: Descriptive Statistics II",
    "section": "Try These Problems",
    "text": "Try These Problems\n\nCalculate mean, median, and mode for: 12, 15, 18, 12, 20, 25, 12, 30\nA dataset has mean = 50 and median = 45. What does this tell you about the distribution?\nWhy might median be preferred over mean for reporting household income?\nCreate a Python function to identify the most appropriate measure of central tendency for a given dataset."
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part2.html#footnotes",
    "href": "files/lecture_notes/lecture2/lecture2_part2.html#footnotes",
    "title": "Lecture 2: Descriptive Statistics I - Part II",
    "section": "Footnotes",
    "text": "Footnotes\n\n\n(source)↩︎"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#learning-objectives",
    "href": "files/lecture_notes/lecture3/lecture3.html#learning-objectives",
    "title": "Descriptive Statistics Part II",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nBy the end of this lecture, you will be able to:\n\nCalculate and interpret measures of variability (range, variance, standard deviation)\nUnderstand and compute measures of position (percentiles, quartiles, z-scores)\nAssess distribution shape using skewness and kurtosis\nCreate and interpret histograms with appropriate bin widths\nConstruct and analyze boxplots for data exploration\nIdentify trends, patterns, and outliers in data visualizations\nApply Python for comprehensive descriptive analysis and visualization"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#lecture-outline-80-minutes",
    "href": "files/lecture_notes/lecture3/lecture3.html#lecture-outline-80-minutes",
    "title": "Descriptive Statistics Part II",
    "section": "Lecture Outline (80 minutes)",
    "text": "Lecture Outline (80 minutes)\n\nMeasures of Variability (25 minutes)\n\nRange, Variance, Standard Deviation (15 min)\nCoefficient of Variation (5 min)\nPython Implementation (5 min)\n\nMeasures of Position (20 minutes)\n\nPercentiles and Quartiles (10 min)\nZ-scores and Standardization (10 min)\n\nDistribution Shape (10 minutes)\n\nSkewness and Kurtosis (10 min)\n\nData Visualization (20 minutes)\n\nHistograms and Bin Width Selection (10 min)\nBoxplots and Interpretation (10 min)\n\nIdentifying Trends and Patterns (5 minutes)"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#what-is-variability",
    "href": "files/lecture_notes/lecture3/lecture3.html#what-is-variability",
    "title": "Descriptive Statistics Part II",
    "section": "What is Variability?",
    "text": "What is Variability?\nVariability (or dispersion) measures how spread out or scattered the data points are around the center.\n\nWhy Variability Matters\n\nTwo datasets can have the same mean but very different spreads\nVariability indicates consistency and predictability\nEssential for risk assessment and quality control\nHelps determine confidence in our central tendency measures"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#comparing-datasets-with-same-mean",
    "href": "files/lecture_notes/lecture3/lecture3.html#comparing-datasets-with-same-mean",
    "title": "Descriptive Statistics Part II",
    "section": "Comparing Datasets with Same Mean",
    "text": "Comparing Datasets with Same Mean\n\nDataset A: 98, 99, 100, 101, 102 (Mean = 100)\nDataset B: 80, 90, 100, 110, 120 (Mean = 100)\n\n\nBoth have the same mean (100), but Dataset B is much more variable!\nThis is why we need measures of variability."
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#definition-and-calculation",
    "href": "files/lecture_notes/lecture3/lecture3.html#definition-and-calculation",
    "title": "Descriptive Statistics Part II",
    "section": "Definition and Calculation",
    "text": "Definition and Calculation\nRange = Maximum value - Minimum value\n\nExample\n\nData: 12, 15, 18, 22, 25, 30, 35\n\n\n\nRange = 35 - 12 = 23"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#when-to-use-range",
    "href": "files/lecture_notes/lecture3/lecture3.html#when-to-use-range",
    "title": "Descriptive Statistics Part II",
    "section": "When to Use Range",
    "text": "When to Use Range\n✅ Use range when:\n\nNeed a quick, simple measure of spread\nWorking with small datasets\nCommunicating to non-technical audiences\n\n❌ Avoid range when:\n\nOutliers are present\nNeed detailed information about variability\nWorking with large datasets"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#variance-definition",
    "href": "files/lecture_notes/lecture3/lecture3.html#variance-definition",
    "title": "Descriptive Statistics Part II",
    "section": "Variance Definition",
    "text": "Variance Definition\nVariance measures the average squared deviation from the mean.\nSample Variance Formula\n\\[s^2 = \\frac{\\sum(x_i - \\bar{x})^2}{n-1}\\]\nPopulation Variance Formula\n\\[\\sigma^2 = \\frac{\\sum(x_i - \\mu)^2}{N}\\]\nWhere \\(s^2\\) = sample variance, \\(\\sigma^2\\) = population variance"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#standard-deviation-definition",
    "href": "files/lecture_notes/lecture3/lecture3.html#standard-deviation-definition",
    "title": "Descriptive Statistics Part II",
    "section": "Standard Deviation Definition",
    "text": "Standard Deviation Definition\nStandard Deviation is the square root of variance.\nSample Standard Deviation\n\\[s = \\sqrt{s^2} = \\sqrt{\\frac{\\sum(x_i - \\bar{x})^2}{n-1}}\\]\nPopulation Standard Deviation\n\\[\\sigma = \\sqrt{\\sigma^2} = \\sqrt{\\frac{\\sum(x_i - \\mu)^2}{N}}\\]"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#step-by-step-calculation-example",
    "href": "files/lecture_notes/lecture3/lecture3.html#step-by-step-calculation-example",
    "title": "Descriptive Statistics Part II",
    "section": "Step-by-Step Calculation Example",
    "text": "Step-by-Step Calculation Example\nData: 10, 12, 14, 16, 18 (Mean = 14)\n\n\n\n\\(x_i\\)\n\\(x_i - \\bar{x}\\)\n\\((x_i - \\bar{x})^2\\)\n\n\n\n\n10\n-4\n16\n\n\n12\n-2\n4\n\n\n14\n0\n0\n\n\n16\n2\n4\n\n\n18\n4\n16\n\n\nSum\n\n40"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#completing-the-calculation",
    "href": "files/lecture_notes/lecture3/lecture3.html#completing-the-calculation",
    "title": "Descriptive Statistics Part II",
    "section": "Completing the Calculation",
    "text": "Completing the Calculation\n\\[s^2 = \\frac{40}{5-1} = \\frac{40}{4} = 10\\]\n\\[s = \\sqrt{10} = 3.16\\]\n\nInterpretation: On average, data points deviate from the mean by about 3.16 units."
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#properties-of-standard-deviation",
    "href": "files/lecture_notes/lecture3/lecture3.html#properties-of-standard-deviation",
    "title": "Descriptive Statistics Part II",
    "section": "Properties of Standard Deviation",
    "text": "Properties of Standard Deviation\n\nSame units as the original data\nAlways non-negative\nZero only when all values are identical\nLarger values indicate more variability\nApproximately 68% of data within 1 SD of mean (for normal distributions)\nApproximately 95% of data within 2 SD of mean"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#empirical-rule-68-95-99.7-rule",
    "href": "files/lecture_notes/lecture3/lecture3.html#empirical-rule-68-95-99.7-rule",
    "title": "Descriptive Statistics Part II",
    "section": "Empirical Rule (68-95-99.7 Rule)",
    "text": "Empirical Rule (68-95-99.7 Rule)\nFor approximately normal distributions:\n\n68% of data falls within 1 standard deviation of the mean\n95% of data falls within 2 standard deviations of the mean\n99.7% of data falls within 3 standard deviations of the mean\n\nThis rule helps us understand what constitutes “typical” vs “unusual” values."
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#definition-and-purpose",
    "href": "files/lecture_notes/lecture3/lecture3.html#definition-and-purpose",
    "title": "Descriptive Statistics Part II",
    "section": "Definition and Purpose",
    "text": "Definition and Purpose\nCoefficient of Variation (CV) = \\(\\frac{\\text{Standard Deviation}}{\\text{Mean}} \\times 100\\%\\)\n\nWhy Use CV?\n\nCompares variability across different units or scales\nRelative measure of variability\nUseful when means differ substantially"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#example-comparing-variability",
    "href": "files/lecture_notes/lecture3/lecture3.html#example-comparing-variability",
    "title": "Descriptive Statistics Part II",
    "section": "Example: Comparing Variability",
    "text": "Example: Comparing Variability\nStock A: Mean return = $50, SD = $10, CV = 20%\nStock B: Mean return = $500, SD = $50, CV = 10%\n\nStock B has higher absolute variability ($50 vs $10) but lower relative variability (10% vs 20%)\nStock B is relatively less risky per dollar invested."
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#python-implementation---variability",
    "href": "files/lecture_notes/lecture3/lecture3.html#python-implementation---variability",
    "title": "Descriptive Statistics Part II",
    "section": "Python Implementation - Variability",
    "text": "Python Implementation - Variability\n\nimport numpy as np\nimport pandas as pd\n\n# Sample data\ndata = [10, 12, 14, 16, 18, 22, 25]\n\n# Calculate measures of variability\nrange_val = np.max(data) - np.min(data)\nvariance_sample = np.var(data, ddof=1)  # Sample variance\nstd_sample = np.std(data, ddof=1)       # Sample standard deviation\ncv = (std_sample / np.mean(data)) * 100\n\nprint(f\"Range: {range_val}\")\nprint(f\"Variance: {variance_sample:.2f}\")\nprint(f\"Standard Deviation: {std_sample:.2f}\")\nprint(f\"Coefficient of Variation: {cv:.1f}%\")"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#what-are-measures-of-position",
    "href": "files/lecture_notes/lecture3/lecture3.html#what-are-measures-of-position",
    "title": "Descriptive Statistics Part II",
    "section": "What are Measures of Position?",
    "text": "What are Measures of Position?\nMeasures of position tell us where a particular value stands relative to the rest of the data.\nThey answer questions like:\n\n“What percentage of students scored below 85?”\n“Is this value typical or unusual?”\n“How does this observation compare to others?”"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#percentiles-definition",
    "href": "files/lecture_notes/lecture3/lecture3.html#percentiles-definition",
    "title": "Descriptive Statistics Part II",
    "section": "Percentiles Definition",
    "text": "Percentiles Definition\nThe k-th percentile is the value below which k% of the data falls.\nExamples:\n\n50th percentile = Median (50% of data below this value)\n90th percentile = 90% of data falls below this value\n25th percentile = 25% of data falls below this value"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#quartiles",
    "href": "files/lecture_notes/lecture3/lecture3.html#quartiles",
    "title": "Descriptive Statistics Part II",
    "section": "Quartiles",
    "text": "Quartiles\nQuartiles divide the data into four equal parts:\n\nQ1 (First Quartile) = 25th percentile\nQ2 (Second Quartile) = 50th percentile = Median\nQ3 (Third Quartile) = 75th percentile"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#interquartile-range-iqr",
    "href": "files/lecture_notes/lecture3/lecture3.html#interquartile-range-iqr",
    "title": "Descriptive Statistics Part II",
    "section": "Interquartile Range (IQR)",
    "text": "Interquartile Range (IQR)\nIQR = Q3 - Q1\n\nProperties of IQR:\n\nContains the middle 50% of the data\nResistant to outliers\nUsed in boxplot construction\nUseful for outlier detection"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#five-number-summary",
    "href": "files/lecture_notes/lecture3/lecture3.html#five-number-summary",
    "title": "Descriptive Statistics Part II",
    "section": "Five-Number Summary",
    "text": "Five-Number Summary\nThe five-number summary provides a complete picture of data distribution:\n\nMinimum\nQ1 (25th percentile)\nMedian (50th percentile)\nQ3 (75th percentile)\nMaximum\n\nThis forms the basis for boxplots!"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#z-score-definition",
    "href": "files/lecture_notes/lecture3/lecture3.html#z-score-definition",
    "title": "Descriptive Statistics Part II",
    "section": "Z-score Definition",
    "text": "Z-score Definition\nZ-score tells us how many standard deviations a value is from the mean.\n\\[z = \\frac{x - \\mu}{\\sigma} \\text{ or } z = \\frac{x - \\bar{x}}{s}\\]"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#interpreting-z-scores",
    "href": "files/lecture_notes/lecture3/lecture3.html#interpreting-z-scores",
    "title": "Descriptive Statistics Part II",
    "section": "Interpreting Z-scores",
    "text": "Interpreting Z-scores\n\nz = 0: Value equals the mean\nz = 1: Value is 1 standard deviation above the mean\nz = -2: Value is 2 standard deviations below the mean\n|z| &gt; 2: Often considered “unusual” (beyond 95% of data)\n|z| &gt; 3: Very unusual (beyond 99.7% of data)"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#z-score-example",
    "href": "files/lecture_notes/lecture3/lecture3.html#z-score-example",
    "title": "Descriptive Statistics Part II",
    "section": "Z-score Example",
    "text": "Z-score Example\nStudent’s test score: 85 Class mean: 78, Class standard deviation: 6\n\\[z = \\frac{85 - 78}{6} = \\frac{7}{6} = 1.17\\]\nInterpretation: This student scored 1.17 standard deviations above the class average."
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#benefits-of-standardization",
    "href": "files/lecture_notes/lecture3/lecture3.html#benefits-of-standardization",
    "title": "Descriptive Statistics Part II",
    "section": "Benefits of Standardization",
    "text": "Benefits of Standardization\n\nCompare across different scales (test scores vs income)\nIdentify outliers systematically\n\nCombine different variables meaningfully\nPrepare data for certain statistical methods"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#skewness",
    "href": "files/lecture_notes/lecture3/lecture3.html#skewness",
    "title": "Descriptive Statistics Part II",
    "section": "Skewness",
    "text": "Skewness\nSkewness measures the asymmetry of a distribution.\nTypes of Skewness:\n\nSymmetric (Skewness ≈ 0): Mean ≈ Median ≈ Mode\nRight-skewed (Positive skewness): Mean &gt; Median, long tail to the right\nLeft-skewed (Negative skewness): Mean &lt; Median, long tail to the left"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#visual-examples-of-skewness",
    "href": "files/lecture_notes/lecture3/lecture3.html#visual-examples-of-skewness",
    "title": "Descriptive Statistics Part II",
    "section": "Visual Examples of Skewness",
    "text": "Visual Examples of Skewness\nRight-skewed (Income data):\n\nMost people earn moderate amounts\nFew people earn very high amounts\nMean &gt; Median\n\nLeft-skewed (Test scores with ceiling effect):\n\nMost students score high\nFew students score very low\nMean &lt; Median"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#kurtosis",
    "href": "files/lecture_notes/lecture3/lecture3.html#kurtosis",
    "title": "Descriptive Statistics Part II",
    "section": "Kurtosis",
    "text": "Kurtosis\nKurtosis measures the “tailedness” of a distribution.\nTypes:\n\nMesokurtic (Normal-like): Kurtosis ≈ 3\nLeptokurtic (Heavy tails): Kurtosis &gt; 3, more peaked\nPlatykurtic (Light tails): Kurtosis &lt; 3, flatter\n\nExcess Kurtosis = Kurtosis - 3 (makes normal distributions have excess kurtosis of 0)"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#python-implementation---position-shape",
    "href": "files/lecture_notes/lecture3/lecture3.html#python-implementation---position-shape",
    "title": "Descriptive Statistics Part II",
    "section": "Python Implementation - Position & Shape",
    "text": "Python Implementation - Position & Shape\n\nimport numpy as np\nimport pandas as pd\nfrom scipy import stats\n\ndata = [12, 15, 18, 22, 25, 28, 30, 35, 40, 45]\n\n# Percentiles and quartiles\nq1 = np.percentile(data, 25)\nmedian = np.percentile(data, 50)\nq3 = np.percentile(data, 75)\niqr = q3 - q1\n\n# Z-scores\nz_scores = stats.zscore(data)\n\n# Shape measures\nskewness = stats.skew(data)\nkurt = stats.kurtosis(data)\n\nprint(f\"Q1: {q1}, Median: {median}, Q3: {q3}\")\nprint(f\"IQR: {iqr}\")\nprint(f\"Skewness: {skewness:.3f}\")\nprint(f\"Kurtosis: {kurt:.3f}\")"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#what-is-a-histogram",
    "href": "files/lecture_notes/lecture3/lecture3.html#what-is-a-histogram",
    "title": "Descriptive Statistics Part II",
    "section": "What is a Histogram?",
    "text": "What is a Histogram?\nA histogram displays the distribution of a continuous variable by dividing data into bins and showing the frequency of observations in each bin.\nKey Components:\n\nX-axis: Variable values (continuous)\nY-axis: Frequency or density\nBins: Intervals that group the data\nBars: Height represents frequency in each bin"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#choosing-bin-width-critical-decision",
    "href": "files/lecture_notes/lecture3/lecture3.html#choosing-bin-width-critical-decision",
    "title": "Descriptive Statistics Part II",
    "section": "Choosing Bin Width: Critical Decision",
    "text": "Choosing Bin Width: Critical Decision\nBin width dramatically affects histogram interpretation!\nToo Few Bins (Wide bins):\n\nOversmoothing - lose important details\nMay hide multimodality\nDistribution appears simpler than it is\n\nToo Many Bins (Narrow bins):\n\nUndersmoothing - too much noise\nMay create artificial gaps\nHard to see overall pattern"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#bin-width-guidelines",
    "href": "files/lecture_notes/lecture3/lecture3.html#bin-width-guidelines",
    "title": "Descriptive Statistics Part II",
    "section": "Bin Width Guidelines",
    "text": "Bin Width Guidelines\nRule of Thumb Methods:\n\nSquare Root Rule: Number of bins ≈ \\(\\sqrt{n}\\)\nSturges’ Rule: Number of bins = \\(1 + \\log_2(n)\\)\nScott’s Rule: Bin width = \\(\\frac{3.5 \\times \\text{SD}}{n^{1/3}}\\)\nFreedman-Diaconis Rule: Bin width = \\(\\frac{2 \\times \\text{IQR}}{n^{1/3}}\\)\n\nBest practice: Try multiple bin widths and choose based on the story your data tells!"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#python-histogram-examples",
    "href": "files/lecture_notes/lecture3/lecture3.html#python-histogram-examples",
    "title": "Descriptive Statistics Part II",
    "section": "Python Histogram Examples",
    "text": "Python Histogram Examples\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Generate sample data\nnp.random.seed(42)\ndata = np.random.normal(100, 15, 1000)\n\n# Create subplots with different bin counts\nfig, axes = plt.subplots(2, 2, figsize=(12, 8))\n\n# Different bin counts\nbin_counts = [10, 30, 50, 100]\ntitles = ['10 bins (too few)', '30 bins (good)', '50 bins (good)', '100 bins (too many)']\n\nfor i, (bins, title) in enumerate(zip(bin_counts, titles)):\n    row, col = i // 2, i % 2\n    axes[row, col].hist(data, bins=bins, alpha=0.7, edgecolor='black')\n    axes[row, col].set_title(title)\n    axes[row, col].set_xlabel('Value')\n    axes[row, col].set_ylabel('Frequency')\n\nplt.tight_layout()\nplt.show()"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#interpreting-histograms",
    "href": "files/lecture_notes/lecture3/lecture3.html#interpreting-histograms",
    "title": "Descriptive Statistics Part II",
    "section": "Interpreting Histograms",
    "text": "Interpreting Histograms\nWhat to Look For:\n\nShape: Normal, skewed, uniform, bimodal?\nCenter: Where is the “typical” value?\nSpread: How variable is the data?\nOutliers: Any unusual values?\nGaps: Are there missing values in certain ranges?\nMultiple peaks: Suggests multiple subgroups"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#anatomy-of-a-boxplot",
    "href": "files/lecture_notes/lecture3/lecture3.html#anatomy-of-a-boxplot",
    "title": "Descriptive Statistics Part II",
    "section": "Anatomy of a Boxplot",
    "text": "Anatomy of a Boxplot\n\n# Boxplot components illustration\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Sample data\ndata = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 20, 25]\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Create boxplot\nbp = ax.boxplot(data, vert=False, patch_artist=True)\n\n# Customize colors\nbp['boxes'][0].set_facecolor('lightblue')\nbp['medians'][0].set_color('red')\nbp['medians'][0].set_linewidth(2)\n\n# Add labels\nax.set_xlabel('Values')\nax.set_title('Anatomy of a Boxplot')\n\n# Add annotations\nax.annotate('Q1 (25th percentile)', xy=(3.5, 1.1), xytext=(3.5, 1.3),\n            arrowprops=dict(arrowstyle='-&gt;', color='black'))\nax.annotate('Median (Q2)', xy=(7, 1.1), xytext=(7, 1.3),\n            arrowprops=dict(arrowstyle='-&gt;', color='red'))\nax.annotate('Q3 (75th percentile)', xy=(11, 1.1), xytext=(11, 1.3),\n            arrowprops=dict(arrowstyle='-&gt;', color='black'))\n\nplt.show()"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#boxplot-components-explained",
    "href": "files/lecture_notes/lecture3/lecture3.html#boxplot-components-explained",
    "title": "Descriptive Statistics Part II",
    "section": "Boxplot Components Explained",
    "text": "Boxplot Components Explained\nThe Box:\n\nLeft edge: Q1 (25th percentile)\nMiddle line: Median (Q2, 50th percentile)\n\nRight edge: Q3 (75th percentile)\nBox width: IQR (contains middle 50% of data)\n\nThe Whiskers:\n\nExtend to: Most extreme values within 1.5 × IQR from box edges\nLower whisker: Minimum value within Q1 - 1.5×IQR\nUpper whisker: Maximum value within Q3 + 1.5×IQR\n\nOutliers:\n\nPoints beyond whiskers: Values &gt; Q3 + 1.5×IQR or &lt; Q1 - 1.5×IQR"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#what-boxplots-tell-us",
    "href": "files/lecture_notes/lecture3/lecture3.html#what-boxplots-tell-us",
    "title": "Descriptive Statistics Part II",
    "section": "What Boxplots Tell Us",
    "text": "What Boxplots Tell Us\nDistribution Shape:\n\nSymmetric: Median in center of box, whiskers equal length\nRight-skewed: Median closer to Q1, longer upper whisker\nLeft-skewed: Median closer to Q3, longer lower whisker\n\nVariability:\n\nWide box: High variability in middle 50%\nLong whiskers: High overall variability\nMany outliers: Extreme variability"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#comparing-groups-with-boxplots",
    "href": "files/lecture_notes/lecture3/lecture3.html#comparing-groups-with-boxplots",
    "title": "Descriptive Statistics Part II",
    "section": "Comparing Groups with Boxplots",
    "text": "Comparing Groups with Boxplots\n\n# Comparing multiple groups\nimport pandas as pd\nimport seaborn as sns\n\n# Create sample data for different groups\nnp.random.seed(42)\ngroup_a = np.random.normal(70, 10, 100)\ngroup_b = np.random.normal(75, 15, 100)  \ngroup_c = np.random.normal(80, 8, 100)\n\n# Combine into DataFrame\ndf = pd.DataFrame({\n    'Score': np.concatenate([group_a, group_b, group_c]),\n    'Group': ['A']*100 + ['B']*100 + ['C']*100\n})\n\n# Create comparative boxplot\nplt.figure(figsize=(10, 6))\nsns.boxplot(data=df, x='Group', y='Score')\nplt.title('Comparing Score Distributions Across Groups')\nplt.ylabel('Test Score')\nplt.show()"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#advanced-boxplot-interpretations",
    "href": "files/lecture_notes/lecture3/lecture3.html#advanced-boxplot-interpretations",
    "title": "Descriptive Statistics Part II",
    "section": "Advanced Boxplot Interpretations",
    "text": "Advanced Boxplot Interpretations"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#common-patterns-in-data",
    "href": "files/lecture_notes/lecture3/lecture3.html#common-patterns-in-data",
    "title": "Descriptive Statistics Part II",
    "section": "Common Patterns in Data",
    "text": "Common Patterns in Data\nDistribution Patterns:\n\nNormal/Bell-shaped: Symmetric, single peak\nUniform: All values equally likely\nBimodal: Two distinct peaks (suggests subgroups)\nMultimodal: Multiple peaks\nU-shaped: High values at extremes, low in middle\n\nOutlier Patterns:\n\nIndividual outliers: Data entry errors, measurement errors\nClustered outliers: Distinct subpopulation\nSystematic outliers: May indicate process changes"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#red-flags-in-data-visualization",
    "href": "files/lecture_notes/lecture3/lecture3.html#red-flags-in-data-visualization",
    "title": "Descriptive Statistics Part II",
    "section": "Red Flags in Data Visualization",
    "text": "Red Flags in Data Visualization\nWarning Signs:\n\nGaps in histograms: Missing data or measurement limitations\nHeaping: Values cluster at round numbers (10, 50, 100)\nTruncation: Data cut off at certain values\nDigit preference: People prefer certain ending digits\nMultiple modes: Hidden subgroups in your data"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#python-comprehensive-data-exploration",
    "href": "files/lecture_notes/lecture3/lecture3.html#python-comprehensive-data-exploration",
    "title": "Descriptive Statistics Part II",
    "section": "Python: Comprehensive Data Exploration",
    "text": "Python: Comprehensive Data Exploration\n\ndef comprehensive_eda(data, column_name=\"Variable\"):\n    \"\"\"\n    Comprehensive Exploratory Data Analysis\n    \"\"\"\n    import matplotlib.pyplot as plt\n    import seaborn as sns\n    from scipy import stats\n    \n    # Basic statistics\n    print(f\"=== {column_name} Analysis ===\")\n    print(f\"Count: {len(data)}\")\n    print(f\"Mean: {np.mean(data):.2f}\")\n    print(f\"Median: {np.median(data):.2f}\")\n    print(f\"Std Dev: {np.std(data, ddof=1):.2f}\")\n    print(f\"Skewness: {stats.skew(data):.3f}\")\n    print(f\"Kurtosis: {stats.kurtosis(data):.3f}\")\n    \n    # Create visualization\n    fig, axes = plt.subplots(2, 2, figsize=(15, 10))\n    \n    # Histogram with multiple bin choices\n    axes[0,0].hist(data, bins=30, alpha=0.7, edgecolor='black')\n    axes[0,0].axvline(np.mean(data), color='red', linestyle='--', label='Mean')\n    axes[0,0].axvline(np.median(data), color='blue', linestyle='--', label='Median')\n    axes[0,0].set_title('Histogram')\n    axes[0,0].legend()\n    \n    # Boxplot\n    axes[0,1].boxplot(data, vert=False)\n    axes[0,1].set_title('Boxplot')\n    \n    # Q-Q plot (check normality)\n    stats.probplot(data, dist=\"norm\", plot=axes[1,0])\n    axes[1,0].set_title('Q-Q Plot (Normality Check)')\n    \n    # Density plot\n    axes[1,1].hist(data, bins=30, density=True, alpha=0.7, edgecolor='black')\n    axes[1,1].set_title('Density Plot')\n    \n    plt.tight_layout()\n    plt.show()\n    \n    return {\n        'mean': np.mean(data),\n        'median': np.median(data),\n        'std': np.std(data, ddof=1),\n        'skewness': stats.skew(data),\n        'kurtosis': stats.kurtosis(data)\n    }"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#essential-concepts-to-remember",
    "href": "files/lecture_notes/lecture3/lecture3.html#essential-concepts-to-remember",
    "title": "Descriptive Statistics Part II",
    "section": "Essential Concepts to Remember",
    "text": "Essential Concepts to Remember\nVariability:\n\nStandard deviation is preferred over range for most analyses\nCV allows comparison across different scales\nIQR is resistant to outliers\n\nPosition:\n\nPercentiles and quartiles provide relative position\nZ-scores standardize across different distributions\nFive-number summary gives complete overview\n\nVisualization:\n\nBin width choice is critical for histogram interpretation\nBoxplots excel at comparing groups and identifying outliers\nMultiple visualizations provide different insights"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#practical-guidelines",
    "href": "files/lecture_notes/lecture3/lecture3.html#practical-guidelines",
    "title": "Descriptive Statistics Part II",
    "section": "Practical Guidelines",
    "text": "Practical Guidelines\n\nAlways visualize before calculating statistics\nUse multiple measures - no single statistic tells the whole story\nConsider the context - what makes sense for your data?\nCheck for outliers - they can drastically affect your analysis\nCompare distributions using standardized measures when appropriate"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#next-steps-in-your-data-journey",
    "href": "files/lecture_notes/lecture3/lecture3.html#next-steps-in-your-data-journey",
    "title": "Descriptive Statistics Part II",
    "section": "Next Steps in Your Data Journey",
    "text": "Next Steps in Your Data Journey\nAdvanced Topics to Explore:\n\nCorrelation and association between variables\nTime series analysis for temporal patterns\nMultivariate descriptive statistics\nInteractive visualizations with plotly\nStatistical inference based on descriptive findings"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#try-these-exercises",
    "href": "files/lecture_notes/lecture3/lecture3.html#try-these-exercises",
    "title": "Descriptive Statistics Part II",
    "section": "Try These Exercises",
    "text": "Try These Exercises\n\nCalculate the five-number summary for: 12, 15, 18, 22, 25, 28, 30, 35, 40, 45\nCreate histograms with 5, 15, and 50 bins for the same dataset. What patterns do you observe?\nInterpret this scenario: Dataset A has mean=50, SD=5. Dataset B has mean=100, SD=10. Which is more variable?\nA student scores 85 on a test where the class mean is 78 and SD is 6. Calculate and interpret the z-score.\nDesign a boxplot comparison for three different customer segments in your business."
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#additional-resources",
    "href": "files/lecture_notes/lecture3/lecture3.html#additional-resources",
    "title": "Descriptive Statistics Part II",
    "section": "Additional Resources",
    "text": "Additional Resources\n\nMatplotlib gallery: Histogram and boxplot examples\nSeaborn documentation: Statistical visualizations\nNumPy/SciPy: Statistical functions reference\nRecommended reading: Chapter 4-5 in course textbook"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#lecture-outline",
    "href": "files/lecture_notes/lecture3/lecture3.html#lecture-outline",
    "title": "Descriptive Statistics Part II",
    "section": "Lecture Outline",
    "text": "Lecture Outline\n\nMeasures of Variability (25 minutes)\n\nRange, Variance, Standard Deviation (15 min)\nCoefficient of Variation (5 min)\nPython Implementation (5 min)\n\nMeasures of Position (20 minutes)\n\nPercentiles and Quartiles (10 min)\nZ-scores and Standardization (10 min)\n\nDistribution Shape (10 minutes)\n\nSkewness and Kurtosis (10 min)\n\nData Visualization (20 minutes)\n\nHistograms and Bin Width Selection (10 min)\nBoxplots and Interpretation (10 min)\n\nIdentifying Trends and Patterns (5 minutes)"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#properties-of-range",
    "href": "files/lecture_notes/lecture3/lecture3.html#properties-of-range",
    "title": "Descriptive Statistics Part II",
    "section": "Properties of Range",
    "text": "Properties of Range\n\n\nSimple to calculate and understand\nUses only two values (ignores all others)\nSensitive to outliers\nLimited information about distribution"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#comparing-boxplots",
    "href": "files/lecture_notes/lecture3/lecture3.html#comparing-boxplots",
    "title": "Descriptive Statistics Part II",
    "section": "Comparing Boxplots:",
    "text": "Comparing Boxplots:\n\nMedian differences: Which group has higher typical values?\nIQR differences: Which group is more consistent?\nOutlier patterns: Which group has more extreme values?\nOverlap: Do the groups have similar ranges?"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#business-applications",
    "href": "files/lecture_notes/lecture3/lecture3.html#business-applications",
    "title": "Descriptive Statistics Part II",
    "section": "Business Applications:",
    "text": "Business Applications:\n\nQuality control: Compare product batches\nPerformance analysis: Compare team/department performance\n\nCustomer segmentation: Compare customer groups\nA/B testing: Compare treatment effects"
  },
  {
    "objectID": "files/lecture_notes/lecture3/lecture3.html#visual-comparison-same-mean-different-spreads",
    "href": "files/lecture_notes/lecture3/lecture3.html#visual-comparison-same-mean-different-spreads",
    "title": "Descriptive Statistics Part II",
    "section": "📈 Visual Comparison: Same Mean, Different Spreads",
    "text": "📈 Visual Comparison: Same Mean, Different Spreads"
  },
  {
    "objectID": "files/lecture_notes/lecture3/test.html",
    "href": "files/lecture_notes/lecture3/test.html",
    "title": "Python Implementation of Descriptive Statistics",
    "section": "",
    "text": "Import LibrariesLibrary Overview\n\n\n\nimport numpy as np\nimport pandas as pd\nfrom scipy import stats\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Set styling for better plots\nplt.style.use('seaborn-v0_8')\nsns.set_palette(\"husl\")\n\n\n\n\n\n\n\n\n\n\n\nLibrary\nPurpose\nKey Functions\n\n\n\n\nNumPy\nNumerical computing\nnp.mean(), np.median(), np.std()\n\n\nPandas\nData manipulation\ndf.describe(), df.mean(), df.median()\n\n\nSciPy\nScientific computing\nstats.mode(), stats.describe()\n\n\nMatplotlib\nBasic plotting\nplt.plot(), plt.hist(), plt.boxplot()\n\n\nSeaborn\nStatistical visualization\nsns.histplot(), sns.boxplot()"
  },
  {
    "objectID": "files/lecture_notes/lecture3/test.html#sec-libraries",
    "href": "files/lecture_notes/lecture3/test.html#sec-libraries",
    "title": "Python Implementation of Descriptive Statistics",
    "section": "",
    "text": "Import LibrariesLibrary Overview\n\n\n\nimport numpy as np\nimport pandas as pd\nfrom scipy import stats\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Set styling for better plots\nplt.style.use('seaborn-v0_8')\nsns.set_palette(\"husl\")\n\n\n\n\n\n\n\n\n\n\n\nLibrary\nPurpose\nKey Functions\n\n\n\n\nNumPy\nNumerical computing\nnp.mean(), np.median(), np.std()\n\n\nPandas\nData manipulation\ndf.describe(), df.mean(), df.median()\n\n\nSciPy\nScientific computing\nstats.mode(), stats.describe()\n\n\nMatplotlib\nBasic plotting\nplt.plot(), plt.hist(), plt.boxplot()\n\n\nSeaborn\nStatistical visualization\nsns.histplot(), sns.boxplot()"
  },
  {
    "objectID": "files/lecture_notes/lecture3/test.html#sec-central-tendency",
    "href": "files/lecture_notes/lecture3/test.html#sec-central-tendency",
    "title": "Python Implementation of Descriptive Statistics",
    "section": "Central Tendency Measures",
    "text": "Central Tendency Measures\n\nMean CalculationMedian CalculationMode CalculationVisualization\n\n\n\n# Sample data\ndata = [85, 90, 78, 92, 88, 91, 85, 87, 89, 86]\n\n# Using NumPy\nmean_np = np.mean(data)\nprint(f\"Mean (NumPy): {mean_np:.2f}\")\n\n# Using Pandas\ndf = pd.DataFrame({'scores': data})\nmean_pd = df['scores'].mean()\nprint(f\"Mean (Pandas): {mean_pd:.2f}\")\n\n# Manual calculation for understanding\nmanual_mean = sum(data) / len(data)\nprint(f\"Mean (Manual): {manual_mean:.2f}\")\n\nMean (NumPy): 87.10\nMean (Pandas): 87.10\nMean (Manual): 87.10\n\n\n\n\n\n# Using NumPy\nmedian_np = np.median(data)\nprint(f\"Median (NumPy): {median_np:.2f}\")\n\n# Using Pandas\nmedian_pd = df['scores'].median()\nprint(f\"Median (Pandas): {median_pd:.2f}\")\n\n# Manual calculation\nsorted_data = sorted(data)\nn = len(sorted_data)\nif n % 2 == 0:\n    manual_median = (sorted_data[n//2 - 1] + sorted_data[n//2]) / 2\nelse:\n    manual_median = sorted_data[n//2]\nprint(f\"Median (Manual): {manual_median:.2f}\")\n\nMedian (NumPy): 87.50\nMedian (Pandas): 87.50\nMedian (Manual): 87.50\n\n\n\n\n\n# Using SciPy\nmode_result = stats.mode(data, keepdims=True)\nprint(f\"Mode (SciPy): {mode_result.mode[0]}, Count: {mode_result.count[0]}\")\n\n# Using Pandas\nmode_pd = df['scores'].mode()\nprint(f\"Mode (Pandas): {mode_pd.values}\")\n\n# Manual calculation using Counter\nfrom collections import Counter\ncounter = Counter(data)\nmax_count = max(counter.values())\nmodes = [k for k, v in counter.items() if v == max_count]\nprint(f\"Mode (Manual): {modes}, Count: {max_count}\")\n\nMode (SciPy): 85, Count: 2\nMode (Pandas): [85]\nMode (Manual): [85], Count: 2\n\n\n\n\n\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12, 5))\n\n# Histogram with central tendency lines\nax1.hist(data, bins=8, alpha=0.7, color='skyblue', edgecolor='black')\nax1.axvline(mean_np, color='red', linestyle='--', linewidth=2, label=f'Mean: {mean_np:.1f}')\nax1.axvline(median_np, color='green', linestyle='--', linewidth=2, label=f'Median: {median_np:.1f}')\nax1.axvline(mode_result.mode[0], color='orange', linestyle='--', linewidth=2, label=f'Mode: {mode_result.mode[0]}')\nax1.set_xlabel('Test Scores')\nax1.set_ylabel('Frequency')\nax1.set_title('Distribution with Central Tendency')\nax1.legend()\nax1.grid(True, alpha=0.3)\n\n# Box plot\nax2.boxplot(data, patch_artist=True, \n            boxprops=dict(facecolor='lightblue', alpha=0.7),\n            medianprops=dict(color='red', linewidth=2))\nax2.set_ylabel('Test Scores')\nax2.set_title('Box Plot of Test Scores')\nax2.grid(True, alpha=0.3)\n\nplt.tight_layout()\nplt.show()\n\n\n\n\nDistribution of Test Scores with Central Tendency Measures"
  },
  {
    "objectID": "files/lecture_notes/lecture3/test.html#sec-comprehensive",
    "href": "files/lecture_notes/lecture3/test.html#sec-comprehensive",
    "title": "Python Implementation of Descriptive Statistics",
    "section": "Comprehensive Analysis Function",
    "text": "Comprehensive Analysis Function\n\nFunction DefinitionExample UsageDetailed Summary Table\n\n\n\ndef descriptive_summary(data, column_name=\"Data\", create_plots=True):\n    \"\"\"\n    Calculate comprehensive descriptive statistics with optional visualizations\n    \n    Parameters:\n    -----------\n    data : list or array-like\n        The data to analyze\n    column_name : str\n        Name for the data column\n    create_plots : bool\n        Whether to create visualizations\n    \n    Returns:\n    --------\n    pandas.DataFrame\n        Descriptive statistics summary\n    \"\"\"\n    \n    # Convert to DataFrame\n    df = pd.DataFrame({column_name: data})\n    \n    # Basic statistics\n    print(f\"📊 Descriptive Statistics for {column_name}\")\n    print(\"=\" * 50)\n    print(f\"Count: {len(data)}\")\n    print(f\"Mean: {np.mean(data):.3f}\")\n    print(f\"Median: {np.median(data):.3f}\")\n    print(f\"Standard Deviation: {np.std(data, ddof=1):.3f}\")\n    print(f\"Variance: {np.var(data, ddof=1):.3f}\")\n    print(f\"Range: {np.max(data) - np.min(data):.3f}\")\n    print(f\"Min: {np.min(data):.3f}\")\n    print(f\"Max: {np.max(data):.3f}\")\n    \n    # Mode calculation\n    try:\n        mode_result = stats.mode(data, keepdims=True)\n        print(f\"Mode: {mode_result.mode[0]} (appears {mode_result.count[0]} times)\")\n    except:\n        print(\"Mode: No unique mode\")\n    \n    # Quartiles\n    q1, q2, q3 = np.percentile(data, [25, 50, 75])\n    print(f\"Q1 (25th percentile): {q1:.3f}\")\n    print(f\"Q2 (50th percentile): {q2:.3f}\")\n    print(f\"Q3 (75th percentile): {q3:.3f}\")\n    print(f\"IQR: {q3 - q1:.3f}\")\n    \n    if create_plots:\n        # Create comprehensive visualization\n        fig, ((ax1, ax2), (ax3, ax4)) = plt.subplots(2, 2, figsize=(12, 10))\n        \n        # Histogram\n        ax1.hist(data, bins=10, alpha=0.7, color='skyblue', edgecolor='black')\n        ax1.axvline(np.mean(data), color='red', linestyle='--', label=f'Mean: {np.mean(data):.2f}')\n        ax1.axvline(np.median(data), color='green', linestyle='--', label=f'Median: {np.median(data):.2f}')\n        ax1.set_xlabel(column_name)\n        ax1.set_ylabel('Frequency')\n        ax1.set_title('Histogram')\n        ax1.legend()\n        ax1.grid(True, alpha=0.3)\n        \n        # Box plot\n        ax2.boxplot(data, patch_artist=True, \n                   boxprops=dict(facecolor='lightgreen', alpha=0.7))\n        ax2.set_ylabel(column_name)\n        ax2.set_title('Box Plot')\n        ax2.grid(True, alpha=0.3)\n        \n        # Q-Q plot\n        stats.probplot(data, dist=\"norm\", plot=ax3)\n        ax3.set_title('Q-Q Plot (Normal Distribution)')\n        ax3.grid(True, alpha=0.3)\n        \n        # Violin plot\n        parts = ax4.violinplot([data], positions=[1], showmeans=True, showmedians=True)\n        ax4.set_xticks([1])\n        ax4.set_xticklabels([column_name])\n        ax4.set_ylabel('Values')\n        ax4.set_title('Violin Plot')\n        ax4.grid(True, alpha=0.3)\n        \n        plt.tight_layout()\n        plt.show()\n    \n    return df.describe()\n\n\n\n\n# Example with test scores\ntest_scores = [85, 90, 78, 92, 88, 91, 85, 87, 89, 86, 94, 82, 88, 90, 87]\nsummary = descriptive_summary(test_scores, \"Test Scores\", create_plots=True)\n\n📊 Descriptive Statistics for Test Scores\n==================================================\nCount: 15\nMean: 87.467\nMedian: 88.000\nStandard Deviation: 4.015\nVariance: 16.124\nRange: 16.000\nMin: 78.000\nMax: 94.000\nMode: 85 (appears 2 times)\nQ1 (25th percentile): 85.500\nQ2 (50th percentile): 88.000\nQ3 (75th percentile): 90.000\nIQR: 4.500\n\n\n\n\n\n\n\n\n\n\n\n\n# Display the detailed summary\nprint(\"\\n📋 Pandas Describe Output:\")\nprint(summary)\n\n# Additional statistics\nprint(f\"\\n🔍 Additional Insights:\")\nprint(f\"Coefficient of Variation: {(np.std(test_scores, ddof=1) / np.mean(test_scores)) * 100:.2f}%\")\nprint(f\"Skewness: {stats.skew(test_scores):.3f}\")\nprint(f\"Kurtosis: {stats.kurtosis(test_scores):.3f}\")\n\n\n📋 Pandas Describe Output:\n       Test Scores\ncount    15.000000\nmean     87.466667\nstd       4.015446\nmin      78.000000\n25%      85.500000\n50%      88.000000\n75%      90.000000\nmax      94.000000\n\n🔍 Additional Insights:\nCoefficient of Variation: 4.59%\nSkewness: -0.677\nKurtosis: 0.383"
  },
  {
    "objectID": "files/lecture_notes/lecture3/test.html#sec-categorical",
    "href": "files/lecture_notes/lecture3/test.html#sec-categorical",
    "title": "Python Implementation of Descriptive Statistics",
    "section": "Categorical Data Analysis",
    "text": "Categorical Data Analysis\n\nBasic AnalysisVisualizationAdvanced Categorical Analysis\n\n\n\n# Categorical data example\ncategories = ['A', 'B', 'B', 'C', 'A', 'B', 'A', 'C', 'B', 'B', 'A', 'C', 'B']\ncat_series = pd.Series(categories, name='Grades')\n\nprint(\"📊 Categorical Data Analysis:\")\nprint(f\"Mode: {cat_series.mode().values[0]}\")\nprint(f\"Total Count: {len(cat_series)}\")\n\nprint(\"\\n📈 Value Counts:\")\nvalue_counts = cat_series.value_counts()\nprint(value_counts)\n\nprint(\"\\n📊 Proportions:\")\nproportions = cat_series.value_counts(normalize=True)\nprint(proportions.round(3))\n\n📊 Categorical Data Analysis:\nMode: B\nTotal Count: 13\n\n📈 Value Counts:\nGrades\nB    6\nA    4\nC    3\nName: count, dtype: int64\n\n📊 Proportions:\nGrades\nB    0.462\nA    0.308\nC    0.231\nName: proportion, dtype: float64\n\n\n\n\n\nfig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(15, 5))\n\n# Bar chart\nvalue_counts.plot(kind='bar', ax=ax1, color=['#FF6B6B', '#4ECDC4', '#45B7D1'])\nax1.set_title('Grade Distribution (Bar Chart)')\nax1.set_xlabel('Grade')\nax1.set_ylabel('Count')\nax1.tick_params(axis='x', rotation=0)\nax1.grid(True, alpha=0.3)\n\n# Pie chart\nax2.pie(value_counts.values, labels=value_counts.index, autopct='%1.1f%%', \n        colors=['#FF6B6B', '#4ECDC4', '#45B7D1'], startangle=90)\nax2.set_title('Grade Distribution (Pie Chart)')\n\n# Horizontal bar chart\nvalue_counts.plot(kind='barh', ax=ax3, color=['#FF6B6B', '#4ECDC4', '#45B7D1'])\nax3.set_title('Grade Distribution (Horizontal)')\nax3.set_xlabel('Count')\nax3.set_ylabel('Grade')\nax3.grid(True, alpha=0.3)\n\nplt.tight_layout()\nplt.show()\n\n\n\n\nCategorical Data Visualization\n\n\n\n\n\n\n\n# Create a more complex categorical dataset\nnp.random.seed(42)\ndepartments = ['Engineering', 'Marketing', 'Sales', 'HR', 'Finance']\nperformance = ['Excellent', 'Good', 'Average', 'Below Average']\n\n# Generate sample data\ndata_complex = pd.DataFrame({\n    'Department': np.random.choice(departments, 100),\n    'Performance': np.random.choice(performance, 100, p=[0.2, 0.4, 0.3, 0.1]),\n    'Salary': np.random.normal(60000, 15000, 100)\n})\n\nprint(\"🏢 Advanced Categorical Analysis:\")\nprint(\"\\nCross-tabulation of Department vs Performance:\")\ncrosstab = pd.crosstab(data_complex['Department'], data_complex['Performance'])\nprint(crosstab)\n\nprint(\"\\nProportions within each department:\")\nproportions = pd.crosstab(data_complex['Department'], data_complex['Performance'], normalize='index')\nprint(proportions.round(3))\n\n🏢 Advanced Categorical Analysis:\n\nCross-tabulation of Department vs Performance:\nPerformance  Average  Below Average  Excellent  Good\nDepartment                                          \nEngineering        6              0          4     8\nFinance            8              2          2     7\nHR                 4              3          4    15\nMarketing          4              2          3    12\nSales              5              1          2     8\n\nProportions within each department:\nPerformance  Average  Below Average  Excellent   Good\nDepartment                                           \nEngineering    0.333          0.000      0.222  0.444\nFinance        0.421          0.105      0.105  0.368\nHR             0.154          0.115      0.154  0.577\nMarketing      0.190          0.095      0.143  0.571\nSales          0.312          0.062      0.125  0.500\n\n\n\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(15, 6))\n\n# Stacked bar chart\ncrosstab.plot(kind='bar', stacked=True, ax=ax1, \n              colormap='viridis', alpha=0.8)\nax1.set_title('Performance by Department (Stacked)')\nax1.set_xlabel('Department')\nax1.set_ylabel('Count')\nax1.tick_params(axis='x', rotation=45)\nax1.legend(title='Performance', bbox_to_anchor=(1.05, 1), loc='upper left')\nax1.grid(True, alpha=0.3)\n\n# Grouped bar chart\ncrosstab.plot(kind='bar', ax=ax2, \n              colormap='Set3', alpha=0.8)\nax2.set_title('Performance by Department (Grouped)')\nax2.set_xlabel('Department')\nax2.set_ylabel('Count')\nax2.tick_params(axis='x', rotation=45)\nax2.legend(title='Performance', bbox_to_anchor=(1.05, 1), loc='upper left')\nax2.grid(True, alpha=0.3)\n\nplt.tight_layout()\nplt.show()\n\n\n\n\nAdvanced Categorical Analysis Visualization"
  },
  {
    "objectID": "files/lecture_notes/lecture3/test.html#sec-dashboard",
    "href": "files/lecture_notes/lecture3/test.html#sec-dashboard",
    "title": "Python Implementation of Descriptive Statistics",
    "section": "Interactive Summary Dashboard",
    "text": "Interactive Summary Dashboard\n\nStatistical SummaryKey TakeawaysBest Practices\n\n\n\n# Create a comprehensive summary of all our analyses\ndef create_summary_dashboard():\n    print(\"🎯 PYTHON STATISTICS IMPLEMENTATION SUMMARY\")\n    print(\"=\" * 60)\n    \n    # Test scores summary\n    test_scores = [85, 90, 78, 92, 88, 91, 85, 87, 89, 86, 94, 82, 88, 90, 87]\n    \n    print(f\"📊 NUMERICAL DATA ANALYSIS\")\n    print(f\"Sample Size: {len(test_scores)}\")\n    print(f\"Mean: {np.mean(test_scores):.2f}\")\n    print(f\"Median: {np.median(test_scores):.2f}\")\n    print(f\"Mode: {stats.mode(test_scores, keepdims=True).mode[0]}\")\n    print(f\"Standard Deviation: {np.std(test_scores, ddof=1):.2f}\")\n    print(f\"Range: {np.max(test_scores) - np.min(test_scores)}\")\n    \n    print(f\"\\n📈 CATEGORICAL DATA ANALYSIS\")\n    categories = ['A', 'B', 'B', 'C', 'A', 'B', 'A', 'C', 'B', 'B', 'A', 'C', 'B']\n    cat_counts = pd.Series(categories).value_counts()\n    print(f\"Most Frequent Category: {cat_counts.index[0]} ({cat_counts.iloc[0]} occurrences)\")\n    print(f\"Categories: {list(cat_counts.index)}\")\n    print(f\"Distribution: {dict(cat_counts)}\")\n    \n    print(f\"\\n🔧 LIBRARIES USED\")\n    print(\"✓ NumPy - Numerical operations\")\n    print(\"✓ Pandas - Data manipulation\")\n    print(\"✓ SciPy - Statistical functions\")\n    print(\"✓ Matplotlib - Basic plotting\")\n    print(\"✓ Seaborn - Statistical visualization\")\n\ncreate_summary_dashboard()\n\n🎯 PYTHON STATISTICS IMPLEMENTATION SUMMARY\n============================================================\n📊 NUMERICAL DATA ANALYSIS\nSample Size: 15\nMean: 87.47\nMedian: 88.00\nMode: 85\nStandard Deviation: 4.02\nRange: 16\n\n📈 CATEGORICAL DATA ANALYSIS\nMost Frequent Category: B (6 occurrences)\nCategories: ['B', 'A', 'C']\nDistribution: {'B': np.int64(6), 'A': np.int64(4), 'C': np.int64(3)}\n\n🔧 LIBRARIES USED\n✓ NumPy - Numerical operations\n✓ Pandas - Data manipulation\n✓ SciPy - Statistical functions\n✓ Matplotlib - Basic plotting\n✓ Seaborn - Statistical visualization\n\n\n\n\n\n\n\n\n\n\n🎯 Key Learning Points\n\n\n\n\nMultiple Ways to Calculate: NumPy, Pandas, and manual methods all provide ways to calculate statistical measures\nVisualization is Essential: Plots help understand data distribution and identify patterns\nLibrary Specialization: Each library has its strengths - NumPy for speed, Pandas for data manipulation, SciPy for advanced statistics\nCategorical vs Numerical: Different approaches needed for different data types\nComprehensive Analysis: Combining multiple statistical measures provides better insights\n\n\n\n\n\n\n\n\n\n\n\n🚀 Implementation Best Practices\n\n\n\n\nAlways explore your data first with basic statistics and visualizations\nUse appropriate libraries for specific tasks (e.g., SciPy for advanced statistics)\nHandle missing data appropriately before analysis\nValidate results by cross-checking with multiple methods\nDocument your analysis with clear explanations and interpretations\nConsider the context of your data when interpreting results"
  },
  {
    "objectID": "files/lecture_notes/lecture3/test.html#sec-code",
    "href": "files/lecture_notes/lecture3/test.html#sec-code",
    "title": "Python Implementation of Descriptive Statistics",
    "section": "Code Repository",
    "text": "Code Repository\n\nComplete Example ScriptExport Functions\n\n\n\n# Complete example script combining all concepts\ndef complete_analysis_example():\n    \"\"\"\n    Complete example demonstrating all statistical concepts covered\n    \"\"\"\n    print(\"🚀 COMPLETE STATISTICAL ANALYSIS EXAMPLE\")\n    print(\"=\" * 50)\n    \n    # Generate sample data\n    np.random.seed(42)\n    sample_data = np.random.normal(85, 10, 50).round().astype(int)\n    sample_data = np.clip(sample_data, 0, 100)  # Ensure scores are 0-100\n    \n    # Basic statistics\n    print(\"📊 Basic Statistics:\")\n    print(f\"Mean: {np.mean(sample_data):.2f}\")\n    print(f\"Median: {np.median(sample_data):.2f}\")\n    print(f\"Mode: {stats.mode(sample_data, keepdims=True).mode[0]}\")\n    print(f\"Std Dev: {np.std(sample_data, ddof=1):.2f}\")\n    \n    # Create visualization\n    fig, ((ax1, ax2), (ax3, ax4)) = plt.subplots(2, 2, figsize=(12, 8))\n    \n    # Histogram\n    ax1.hist(sample_data, bins=15, alpha=0.7, color='skyblue', edgecolor='black')\n    ax1.axvline(np.mean(sample_data), color='red', linestyle='--', \n                label=f'Mean: {np.mean(sample_data):.1f}')\n    ax1.set_title('Distribution of Scores')\n    ax1.set_xlabel('Score')\n    ax1.set_ylabel('Frequency')\n    ax1.legend()\n    ax1.grid(True, alpha=0.3)\n    \n    # Box plot\n    ax2.boxplot(sample_data, patch_artist=True, \n                boxprops=dict(facecolor='lightgreen', alpha=0.7))\n    ax2.set_title('Box Plot')\n    ax2.set_ylabel('Score')\n    ax2.grid(True, alpha=0.3)\n    \n    # Q-Q plot\n    stats.probplot(sample_data, dist=\"norm\", plot=ax3)\n    ax3.set_title('Q-Q Plot')\n    ax3.grid(True, alpha=0.3)\n    \n    # Cumulative distribution\n    sorted_data = np.sort(sample_data)\n    cumulative = np.arange(1, len(sorted_data) + 1) / len(sorted_data)\n    ax4.plot(sorted_data, cumulative, marker='o', markersize=3)\n    ax4.set_title('Cumulative Distribution')\n    ax4.set_xlabel('Score')\n    ax4.set_ylabel('Cumulative Probability')\n    ax4.grid(True, alpha=0.3)\n    \n    plt.tight_layout()\n    plt.show()\n    \n    return sample_data\n\n# Run the complete example\nexample_data = complete_analysis_example()\n\n🚀 COMPLETE STATISTICAL ANALYSIS EXAMPLE\n==================================================\n📊 Basic Statistics:\nMean: 82.64\nMedian: 83.00\nMode: 80\nStd Dev: 9.17\n\n\n\n\n\n\n\n\n\n\n\n\n# Functions to export for reuse\ndef export_statistical_functions():\n    \"\"\"\n    Export key functions for external use\n    \"\"\"\n    functions = {\n        'descriptive_summary': descriptive_summary,\n        'np_mean': np.mean,\n        'np_median': np.median,\n        'np_std': lambda x: np.std(x, ddof=1),\n        'scipy_mode': lambda x: stats.mode(x, keepdims=True),\n        'pandas_describe': lambda x: pd.DataFrame({'data': x}).describe()\n    }\n    \n    print(\"📦 Exported Functions:\")\n    for name, func in functions.items():\n        print(f\"✓ {name}\")\n    \n    return functions\n\nexported_functions = export_statistical_functions()\n\n📦 Exported Functions:\n✓ descriptive_summary\n✓ np_mean\n✓ np_median\n✓ np_std\n✓ scipy_mode\n✓ pandas_describe\n\n\n\n\n\n\nThis presentation demonstrates comprehensive Python implementation of descriptive statistics using essential scientific libraries. The tabbed format makes it easy to navigate between different concepts and implementations."
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#definition-1",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#definition-1",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Definition",
    "text": "Definition\nThe mode is the value that appears most frequently in a dataset.\n\n\n\n\n\n%%{init: {'flowchart': {'nodeSpacing': 100, 'rankSpacing': 100}, 'width': 600, 'height': 400}}%%\ngraph TD\n    A[\"Mode Types\"]\n    A --&gt; B[\"Unimodal&lt;br/&gt;One peak\"]\n    A --&gt; C[\"Bimodal&lt;br/&gt;Two peaks\"]\n    A --&gt; D[\"Multimodal&lt;br/&gt;Multiple peaks\"]\n    A --&gt; E[\"No Mode&lt;br/&gt;No repeated values\"]\n    \n    classDef main fill:#e1f5fe,stroke:#01579b,stroke-width:3px,font-size:16px\n    classDef types fill:#f5f5f5,stroke:#424242,stroke-width:2px,font-size:14px\n    \n    class A main\n    class B,C,D,E types"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#types-of-distributions-by-mode",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#types-of-distributions-by-mode",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Types of Distributions by Mode",
    "text": "Types of Distributions by Mode\n\nUnimodal: One mode\nBimodal: Two modes\n\nMultimodal: More than two modes\nNo mode: All values appear with equal frequency"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#example-1",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#example-1",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Example 1:",
    "text": "Example 1:\nData: 2, 3, 3, 4, 5, 5, 5, 6, 7\n\nAnalysis:\n\n\nCount each value: 2(1), 3(2), 4(1), 5(3), 6(1), 7(1)\nMost frequent value: 5 appears 3 times\nMode = 5\nType: Unimodal (one mode)"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#example-2",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#example-2",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Example 2:",
    "text": "Example 2:\nData: 1, 2, 2, 3, 4, 4, 5\n\nAnalysis:\n\n\nCount each value: 1(1), 2(2), 3(1), 4(2), 5(1)\nMost frequent values: 2 and 4 both appear twice\nModes = 2 and 4\nType: Bimodal (two modes)"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#example-3",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#example-3",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Example 3:",
    "text": "Example 3:\nData: 1, 2, 3, 4, 5\n\nAnalysis:\n\n\nCount each value: 1(1), 2(1), 3(1), 4(1), 5(1)\nAll values appear exactly once\nNo mode (no value repeats)\nType: No mode"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#mode-for-different-data-types",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#mode-for-different-data-types",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Mode for Different Data Types",
    "text": "Mode for Different Data Types\nCategorical Data:\nFavorite colors: Red, Blue, Blue, Green, Blue, Red, Blue Mode = Blue\nContinuous Data:\nOften requires grouping into intervals or bins Example: Heights grouped into ranges"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#properties-of-the-mode",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#properties-of-the-mode",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Properties of the Mode",
    "text": "Properties of the Mode\n\nCan be used with any type of data (nominal, ordinal, interval, ratio)\nNot affected by outliers\nMay not exist or may not be unique\nRepresents the most common value\nEasy to identify in frequency distributions"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#when-to-use-the-mode",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#when-to-use-the-mode",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "When to Use the Mode",
    "text": "When to Use the Mode\n✅ Use the mode when:\n\nWorking with categorical (nominal) data\nWant to identify the most popular or common choice\nData has clear peaks in frequency\nQuality control applications (most common defect type)\nBusiness applications (best-selling product, most common customer complaint)"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#comparing-measures-of-central-tendency",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#comparing-measures-of-central-tendency",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Comparing Measures of Central Tendency",
    "text": "Comparing Measures of Central Tendency\n\n\n\n\n\n\n\n\n\n\nMeasure\nBest for Data Type\nStrengths\nWeaknesses\nAffected by Outliers?\n\n\n\n\nMean\nInterval, Ratio\nUses all data, mathematically tractable\nSensitive to outliers\nYes\n\n\nMedian\nOrdinal, Interval, Ratio\nRobust to outliers, represents middle\nIgnores extreme values\nNo\n\n\nMode\nAll types\nWorks with categorical, identifies most common\nMay not exist/be unique\nNo"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#shape-of-distribution-effects",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#shape-of-distribution-effects",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Shape of Distribution Effects",
    "text": "Shape of Distribution Effects\n\nSymmetric distribution: Mean ≈ Median ≈ Mode\nRight-skewed (positively skewed): Mean &gt; Median &gt; Mode\n\nLeft-skewed (negatively skewed): Mode &gt; Median &gt; Mean"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#business-applications",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#business-applications",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Business Applications",
    "text": "Business Applications\n\nCustomer Satisfaction: Mean rating shows overall satisfaction, median shows typical experience\nSales Data: Mode identifies best-selling products, median shows typical sale amount\n\nEmployee Performance: Mean for overall team performance, median for typical employee"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#educational-applications",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#educational-applications",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Educational Applications",
    "text": "Educational Applications\n\nTest Scores: Mean for class average, median for typical student performance\nGrade Distribution: Mode shows most common grade\nAttendance: Mean for overall attendance rate"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#healthcare-applications",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#healthcare-applications",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Healthcare Applications",
    "text": "Healthcare Applications\n\nPatient Wait Times: Median often preferred due to skewed distributions\nTreatment Outcomes: Mean for overall effectiveness, mode for most common result\nVital Signs: All three measures provide different insights"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#interpretation-guidelines",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#interpretation-guidelines",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Interpretation Guidelines",
    "text": "Interpretation Guidelines\n\nAlways consider the context of your data\nReport multiple measures when appropriate\n\nBe aware of data distribution shape\nConsider the presence of outliers\nChoose the most appropriate measure for your specific question"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#remember-these-points",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#remember-these-points",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Remember These Points",
    "text": "Remember These Points\n\nData type determines which statistics are appropriate\nMean uses all data but is sensitive to outliers\nMedian is robust and represents the middle value\nMode identifies the most common value and works with all data types\nContext matters when choosing and interpreting measures\nPython provides powerful tools for calculating descriptive statistics"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#next-lecture-preview",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#next-lecture-preview",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Next Lecture Preview",
    "text": "Next Lecture Preview\nDescriptive Statistics Part II will cover:\n\nMeasures of variability (range, variance, standard deviation)\nMeasures of position (percentiles, quartiles, z-scores)\nShape of distributions (skewness and kurtosis)\nAdvanced Python visualization techniques"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#try-these-problems",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#try-these-problems",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Try These Problems",
    "text": "Try These Problems\n\nCalculate mean, median, and mode for: 12, 15, 18, 12, 20, 25, 12, 30\nA dataset has mean = 50 and median = 45. What does this tell you about the distribution?\nWhy might median be preferred over mean for reporting household income?\nCreate a Python function to identify the most appropriate measure of central tendency for a given dataset."
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#thank-you-for-your-attention",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#thank-you-for-your-attention",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Thank you for your attention!",
    "text": "Thank you for your attention!\nReferences & Further Reading\n\nOpenIntro Statistics, Ch. 1 & 2\nPython for Data Analysis (McKinney), Ch. 5\nUCSB Library Data Lab workshops\npandas DataFrame.describe() ￼\nNumPy statistical functions ￼\nSciPy stats module reference"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#thank-you-for-your-attention-1",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#thank-you-for-your-attention-1",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Thank you for your attention!",
    "text": "Thank you for your attention!\nReferences & Further Reading\n\nOpenIntro Statistics, Ch. 1 & 2\nPython for Data Analysis (McKinney), Ch. 5\nUCSB Library Data Lab workshops\npandas DataFrame.describe() ￼\nNumPy statistical functions ￼\nSciPy stats module reference"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#sec-central-tendency",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#sec-central-tendency",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Central Tendency Measures",
    "text": "Central Tendency Measures\n\nMean CalculationMedian CalculationMode Calculation\n\n\n\n# Sample data\nimport numpy as np \nimport pandas as pd\n\n# generate data\ndata = [85, 90, 78, 92, 88, 91, 85, 87, 89, 86]\n\n# Using NumPy\nmean_np = np.mean(data)\nprint(f\"Mean (NumPy): {mean_np:.2f}\")\n\n# Using Pandas\ndf = pd.DataFrame({'scores': data})\nmean_pd = df['scores'].mean()\nprint(f\"Mean (Pandas): {mean_pd:.2f}\")\n\n# Manual calculation for understanding\nmanual_mean = sum(data) / len(data)\nprint(f\"Mean (Manual): {manual_mean:.2f}\")\n\nMean (NumPy): 87.10\nMean (Pandas): 87.10\nMean (Manual): 87.10\n\n\n\n\n\n# Using NumPy\n\nmedian_np = np.median(data)\nprint(f\"Median (NumPy): {median_np:.2f}\")\n\n# Using Pandas\nmedian_pd = df['scores'].median()\nprint(f\"Median (Pandas): {median_pd:.2f}\")\n\n# Manual calculation\nsorted_data = sorted(data)\nn = len(sorted_data)\nif n % 2 == 0:\n    manual_median = (sorted_data[n//2 - 1] + sorted_data[n//2]) / 2\nelse:\n    manual_median = sorted_data[n//2]\nprint(f\"Median (Manual): {manual_median:.2f}\")\n\nMedian (NumPy): 87.50\nMedian (Pandas): 87.50\nMedian (Manual): 87.50\n\n\n\n\n\n# Using SciPy\nfrom scipy import stats\nmode_result = stats.mode(data, keepdims=True)\nprint(f\"Mode (SciPy): {mode_result.mode[0]}, Count: {mode_result.count[0]}\")\n\n# Using Pandas\nmode_pd = df['scores'].mode()\nprint(f\"Mode (Pandas): {mode_pd.values}\")\n\n# Manual calculation using Counter\nfrom collections import Counter\ncounter = Counter(data)\nmax_count = max(counter.values())\nmodes = [k for k, v in counter.items() if v == max_count]\nprint(f\"Mode (Manual): {modes}, Count: {max_count}\")\n\nMode (SciPy): 85, Count: 2\nMode (Pandas): [85]\nMode (Manual): [85], Count: 2"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#mean-mode-and-median",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#mean-mode-and-median",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Mean, Mode and Median",
    "text": "Mean, Mode and Median\n\nMean CalculationMedian CalculationMode Calculation\n\n\n\n# Sample data\nimport numpy as np \nimport pandas as pd\n\n# generate data\ndata = [85, 90, 78, 92, 88, 91, 85, 87, 89, 86]\n\n# Using NumPy\nmean_np = np.mean(data)\nprint(f\"Mean (NumPy): {mean_np:.2f}\")\n\n# Using Pandas\ndf = pd.DataFrame({'scores': data})\nmean_pd = df['scores'].mean()\nprint(f\"Mean (Pandas): {mean_pd:.2f}\")\n\n# Manual calculation for understanding\nmanual_mean = sum(data) / len(data)\nprint(f\"Mean (Manual): {manual_mean:.2f}\")\n\nMean (NumPy): 87.10\nMean (Pandas): 87.10\nMean (Manual): 87.10\n\n\n\n\n\n# Using NumPy\n\nmedian_np = np.median(data)\nprint(f\"Median (NumPy): {median_np:.2f}\")\n\n# Using Pandas\nmedian_pd = df['scores'].median()\nprint(f\"Median (Pandas): {median_pd:.2f}\")\n\n# Manual calculation\nsorted_data = sorted(data)\nn = len(sorted_data)\nif n % 2 == 0:\n    manual_median = (sorted_data[n//2 - 1] + sorted_data[n//2]) / 2\nelse:\n    manual_median = sorted_data[n//2]\nprint(f\"Median (Manual): {manual_median:.2f}\")\n\nMedian (NumPy): 87.50\nMedian (Pandas): 87.50\nMedian (Manual): 87.50\n\n\n\n\n\n# Using SciPy\nfrom scipy import stats\nmode_result = stats.mode(data, keepdims=True)\nprint(f\"Mode (SciPy): {mode_result.mode[0]}, Count: {mode_result.count[0]}\")\n\n# Using Pandas\nmode_pd = df['scores'].mode()\nprint(f\"Mode (Pandas): {mode_pd.values}\")\n\n# Manual calculation using Counter\nfrom collections import Counter\ncounter = Counter(data)\nmax_count = max(counter.values())\nmodes = [k for k, v in counter.items() if v == max_count]\nprint(f\"Mode (Manual): {modes}, Count: {max_count}\")\n\nMode (SciPy): 85, Count: 2\nMode (Pandas): [85]\nMode (Manual): [85], Count: 2"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#mean-mode-and-median-python-examples",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#mean-mode-and-median-python-examples",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Mean, Mode and Median Python Examples",
    "text": "Mean, Mode and Median Python Examples\n\nMean CalculationMedian CalculationMode Calculation\n\n\n\n# Sample data\nimport numpy as np \nimport pandas as pd\n\n# generate data\ndata = [85, 90, 78, 92, 88, 91, 85, 87, 89, 86]\n\n# Using NumPy\nmean_np = np.mean(data)\nprint(f\"Mean (NumPy): {mean_np:.2f}\")\n\n# Using Pandas\ndf = pd.DataFrame({'scores': data})\nmean_pd = df['scores'].mean()\nprint(f\"Mean (Pandas): {mean_pd:.2f}\")\n\n# Manual calculation for understanding\nmanual_mean = sum(data) / len(data)\nprint(f\"Mean (Manual): {manual_mean:.2f}\")\n\nMean (NumPy): 87.10\nMean (Pandas): 87.10\nMean (Manual): 87.10\n\n\n\n\n\n# Using NumPy\n\nmedian_np = np.median(data)\nprint(f\"Median (NumPy): {median_np:.2f}\")\n\n# Using Pandas\nmedian_pd = df['scores'].median()\nprint(f\"Median (Pandas): {median_pd:.2f}\")\n\n# Manual calculation\nsorted_data = sorted(data)\nn = len(sorted_data)\nif n % 2 == 0:\n    manual_median = (sorted_data[n//2 - 1] + sorted_data[n//2]) / 2\nelse:\n    manual_median = sorted_data[n//2]\nprint(f\"Median (Manual): {manual_median:.2f}\")\n\nMedian (NumPy): 87.50\nMedian (Pandas): 87.50\nMedian (Manual): 87.50\n\n\n\n\n\n# Using SciPy\nfrom scipy import stats\nmode_result = stats.mode(data, keepdims=True)\nprint(f\"Mode (SciPy): {mode_result.mode[0]}, Count: {mode_result.count[0]}\")\n\n# Using Pandas\nmode_pd = df['scores'].mode()\nprint(f\"Mode (Pandas): {mode_pd.values}\")\n\n# Manual calculation using Counter\nfrom collections import Counter\ncounter = Counter(data)\nmax_count = max(counter.values())\nmodes = [k for k, v in counter.items() if v == max_count]\nprint(f\"Mode (Manual): {modes}, Count: {max_count}\")\n\nMode (SciPy): 85, Count: 2\nMode (Pandas): [85]\nMode (Manual): [85], Count: 2"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#mean-mode-and-median-visualization",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#mean-mode-and-median-visualization",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Mean, Mode and Median Visualization",
    "text": "Mean, Mode and Median Visualization\n\nCodeVisualization\n\n\n\n# import libraries\nimport numpy as np\nimport pandas as pd\nfrom collections import Counter\nimport matplotlib.pyplot as plt\n# define your data and compute statistics here\ndata = [85, 90, 78, 92, 88, 91, 85, 87, 89, 86]\nmean_np   = np.mean(data)\nmedian_np = np.median(data)\n# for mode, use Counter\ncounter   = Counter(data)\nmax_count = max(counter.values())\nmodes     = [k for k,v in counter.items() if v==max_count]\nmode_val  = modes[0]\n\n\n\n\n\n\n\n\nDistribution of Test Scores with Central Tendency Measures"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2_part1.html#central-measures",
    "href": "files/lecture_notes/lecture2/lecture2_part1.html#central-measures",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Central Measures",
    "text": "Central Measures\n\n\n\nMean CalculationMedian CalculationMode Calculation\n\n\n\n# Import numpy library for numeric operations\nimport numpy as np \n\n# Import pandas library for data structures\nimport pandas as pd\n\n# Define sample data as a list of test scores\ndata = [85, 90, 78, 92, 88, 91, 85, 87, 89, 86]\n\n# Compute the arithmetic mean using NumPy\nmean_np = np.mean(data)\nprint(f\"Mean (NumPy): {mean_np:.2f}\")\n\n# Convert the data list into a pandas DataFrame\ndf = pd.DataFrame({'scores': data})\n\n# Compute the arithmetic mean using Pandas\nmean_pd = df['scores'].mean()\nprint(f\"Mean (Pandas): {mean_pd:.2f}\")\n\n# Manually sum all scores and divide by count\nmanual_mean = sum(data) / len(data)\nprint(f\"Mean (Manual): {manual_mean:.2f}\")\n\nMean (NumPy): 87.10\nMean (Pandas): 87.10\nMean (Manual): 87.10\n\n\n\n\n\n# Compute the median value using NumPy\nmedian_np = np.median(data)\nprint(f\"Median (NumPy): {median_np:.2f}\")\n\n# Compute the median value using Pandas\nmedian_pd = df['scores'].median()\nprint(f\"Median (Pandas): {median_pd:.2f}\")\n\n# Sort the data list in ascending order\nsorted_data = sorted(data)\n\n# Determine the number of elements\nn = len(sorted_data)\n\n# If even count, average the two middle elements; else take middle element\nif n % 2 == 0:\n    manual_median = (sorted_data[n//2 - 1] + sorted_data[n//2]) / 2\nelse:\n    manual_median = sorted_data[n//2]\n\nprint(f\"Median (Manual): {manual_median:.2f}\")\n\nMedian (NumPy): 87.50\nMedian (Pandas): 87.50\nMedian (Manual): 87.50\n\n\n\n\n\n# Import SciPy stats module to compute mode\nfrom scipy import stats\n\n# Use SciPy to find the most common value and its count\nmode_result = stats.mode(data, keepdims=True)\nprint(f\"Mode (SciPy): {mode_result.mode[0]}, Count: {mode_result.count[0]}\")\n\n# Use Pandas to get mode(s) from the DataFrame\nmode_pd = df['scores'].mode()\nprint(f\"Mode (Pandas): {mode_pd.values}\")\n\n# Import Counter for manual frequency counting\nfrom collections import Counter\n\n# Count occurrences of each score\ncounter = Counter(data)\n\n# Find the highest frequency\nmax_count = max(counter.values())\n\n# Identify all values that appear with that frequency\nmodes = [k for k, v in counter.items() if v == max_count]\n\nprint(f\"Mode (Manual): {modes}, Count: {max_count}\")\n\nMode (SciPy): 85, Count: 2\nMode (Pandas): [85]\nMode (Manual): [85], Count: 2"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html",
    "href": "files/lecture_notes/lecture2/lecture2.html",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "",
    "text": "Introduction to Descriptive Statistics (10 minutes)\n\nWhat is descriptive statistics?\n\nWhy it matters before any modeling\n\n\nTypes of Data and Measurement Scales (15 minutes)\nMeasures of Central Tendency (35 minutes)\n\nMean (12 minutes)\nMedian (12 minutes)\nMode (11 minutes)\n\nPython Implementation (15 minutes)\nReal-world Applications and Interpretation (5 minutes)\n\n\nQuick ice-breaker: ask students for one dataset they’ve looked at recently and what first question they asked about it."
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#central-measures",
    "href": "files/lecture_notes/lecture2/lecture2.html#central-measures",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Central Measures",
    "text": "Central Measures\n\n\n\nMean CalculationMedian CalculationMode Calculation\n\n\n\n# Import numpy library for numeric operations\nimport numpy as np \n\n# Import pandas library for data structures\nimport pandas as pd\n\n# Define sample data as a list of test scores\ndata = [85, 90, 78, 92, 88, 91, 85, 87, 89, 86]\n\n# Compute the arithmetic mean using NumPy\nmean_np = np.mean(data)\nprint(f\"Mean (NumPy): {mean_np:.2f}\")\n\n# Convert the data list into a pandas DataFrame\ndf = pd.DataFrame({'scores': data})\n\n# Compute the arithmetic mean using Pandas\nmean_pd = df['scores'].mean()\nprint(f\"Mean (Pandas): {mean_pd:.2f}\")\n\n# Manually sum all scores and divide by count\nmanual_mean = sum(data) / len(data)\nprint(f\"Mean (Manual): {manual_mean:.2f}\")\n\nMean (NumPy): 87.10\nMean (Pandas): 87.10\nMean (Manual): 87.10\n\n\n\n\n\n# Compute the median value using NumPy\nmedian_np = np.median(data)\nprint(f\"Median (NumPy): {median_np:.2f}\")\n\n# Compute the median value using Pandas\nmedian_pd = df['scores'].median()\nprint(f\"Median (Pandas): {median_pd:.2f}\")\n\n# Sort the data list in ascending order\nsorted_data = sorted(data)\n\n# Determine the number of elements\nn = len(sorted_data)\n\n# If even count, average the two middle elements; else take middle element\nif n % 2 == 0:\n    manual_median = (sorted_data[n//2 - 1] + sorted_data[n//2]) / 2\nelse:\n    manual_median = sorted_data[n//2]\n\nprint(f\"Median (Manual): {manual_median:.2f}\")\n\nMedian (NumPy): 87.50\nMedian (Pandas): 87.50\nMedian (Manual): 87.50\n\n\n\n\n\n# Import SciPy stats module to compute mode\nfrom scipy import stats\n\n# Use SciPy to find the most common value and its count\nmode_result = stats.mode(data, keepdims=True)\nprint(f\"Mode (SciPy): {mode_result.mode[0]}, Count: {mode_result.count[0]}\")\n\n# Use Pandas to get mode(s) from the DataFrame\nmode_pd = df['scores'].mode()\nprint(f\"Mode (Pandas): {mode_pd.values}\")\n\n# Import Counter for manual frequency counting\nfrom collections import Counter\n\n# Count occurrences of each score\ncounter = Counter(data)\n\n# Find the highest frequency\nmax_count = max(counter.values())\n\n# Identify all values that appear with that frequency\nmodes = [k for k, v in counter.items() if v == max_count]\n\nprint(f\"Mode (Manual): {modes}, Count: {max_count}\")\n\nMode (SciPy): 85, Count: 2\nMode (Pandas): [85]\nMode (Manual): [85], Count: 2"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#mean-mode-and-median-visualization",
    "href": "files/lecture_notes/lecture2/lecture2.html#mean-mode-and-median-visualization",
    "title": "Lecture 2: Descriptive Statistics I",
    "section": "Mean, Mode and Median Visualization",
    "text": "Mean, Mode and Median Visualization\n\nCodeVisualization\n\n\n\n# import libraries\nimport numpy as np\nimport pandas as pd\nfrom collections import Counter\nimport matplotlib.pyplot as plt\n# define your data and compute statistics here\ndata = [85, 90, 78, 92, 88, 91, 85, 87, 89, 86]\nmean_np   = np.mean(data)\nmedian_np = np.median(data)\n# for mode, use Counter\ncounter   = Counter(data)\nmax_count = max(counter.values())\nmodes     = [k for k,v in counter.items() if v==max_count]\nmode_val  = modes[0]\n\n\n\n\n\n\n\n\nDistribution of Test Scores with Central Tendency Measures"
  },
  {
    "objectID": "files/lecture_notes/lecture2/lecture2.html#footnotes",
    "href": "files/lecture_notes/lecture2/lecture2.html#footnotes",
    "title": "Lecture 2: Descriptive Statistics I - Part I",
    "section": "Footnotes",
    "text": "Footnotes\n\n\n(source)↩︎"
  }
]